[{"/Users/cj/Desktop/swap-attempts/swap2/src/index.tsx":"1","/Users/cj/Desktop/swap-attempts/swap2/src/i18n.ts":"2","/Users/cj/Desktop/swap-attempts/swap2/src/style/Global.ts":"3","/Users/cj/Desktop/swap-attempts/swap2/src/state/application/updater.ts":"4","/Users/cj/Desktop/swap-attempts/swap2/src/state/lists/updater.ts":"5","/Users/cj/Desktop/swap-attempts/swap2/src/Providers.tsx":"6","/Users/cj/Desktop/swap-attempts/swap2/src/pages/App.tsx":"7","/Users/cj/Desktop/swap-attempts/swap2/src/state/multicall/updater.tsx":"8","/Users/cj/Desktop/swap-attempts/swap2/src/state/transactions/updater.tsx":"9","/Users/cj/Desktop/swap-attempts/swap2/src/state/application/actions.ts":"10","/Users/cj/Desktop/swap-attempts/swap2/src/state/lists/actions.ts":"11","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useDebounce.ts":"12","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useInterval.ts":"13","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useIsWindowVisible.ts":"14","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useFetchListCallback.ts":"15","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/TranslationsContext.ts":"16","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/LanguageContext.ts":"17","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useGetDocumentTitlePrice.ts":"18","/Users/cj/Desktop/swap-attempts/swap2/src/utils/getLibrary.ts":"19","/Users/cj/Desktop/swap-attempts/swap2/src/state/application/hooks.ts":"20","/Users/cj/Desktop/swap-attempts/swap2/src/utils/chunkArray.ts":"21","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useContract.ts":"22","/Users/cj/Desktop/swap-attempts/swap2/src/utils/retry.ts":"23","/Users/cj/Desktop/swap-attempts/swap2/src/state/multicall/actions.ts":"24","/Users/cj/Desktop/swap-attempts/swap2/src/components/ToastListener/index.tsx":"25","/Users/cj/Desktop/swap-attempts/swap2/src/state/transactions/actions.ts":"26","/Users/cj/Desktop/swap-attempts/swap2/src/ThemeContext.tsx":"27","/Users/cj/Desktop/swap-attempts/swap2/src/constants/localisation/languageCodes.ts":"28","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Swap/redirects.tsx":"29","/Users/cj/Desktop/swap-attempts/swap2/src/pages/AddLiquidity/redirects.tsx":"30","/Users/cj/Desktop/swap-attempts/swap2/src/pages/RemoveLiquidity/redirects.tsx":"31","/Users/cj/Desktop/swap-attempts/swap2/src/state/index.ts":"32","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/index.ts":"33","/Users/cj/Desktop/swap-attempts/swap2/src/constants/index.ts":"34","/Users/cj/Desktop/swap-attempts/swap2/src/utils/resolveENSContentHash.ts":"35","/Users/cj/Desktop/swap-attempts/swap2/src/utils/getTokenList.ts":"36","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useGetPriceData.ts":"37","/Users/cj/Desktop/swap-attempts/swap2/src/constants/abis/erc20.ts":"38","/Users/cj/Desktop/swap-attempts/swap2/src/components/Web3ReactManager/index.tsx":"39","/Users/cj/Desktop/swap-attempts/swap2/src/components/Popups/index.tsx":"40","/Users/cj/Desktop/swap-attempts/swap2/src/pages/PoolFinder/index.tsx":"41","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Pool/index.tsx":"42","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/index.tsx":"43","/Users/cj/Desktop/swap-attempts/swap2/src/pages/AddLiquidity/index.tsx":"44","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Swap/index.tsx":"45","/Users/cj/Desktop/swap-attempts/swap2/src/pages/RemoveLiquidity/index.tsx":"46","/Users/cj/Desktop/swap-attempts/swap2/src/state/application/reducer.ts":"47","/Users/cj/Desktop/swap-attempts/swap2/src/state/transactions/reducer.ts":"48","/Users/cj/Desktop/swap-attempts/swap2/src/state/lists/reducer.ts":"49","/Users/cj/Desktop/swap-attempts/swap2/src/state/multicall/reducer.ts":"50","/Users/cj/Desktop/swap-attempts/swap2/src/utils/theme.ts":"51","/Users/cj/Desktop/swap-attempts/swap2/src/state/global/actions.ts":"52","/Users/cj/Desktop/swap-attempts/swap2/src/state/swap/reducer.ts":"53","/Users/cj/Desktop/swap-attempts/swap2/src/state/user/reducer.ts":"54","/Users/cj/Desktop/swap-attempts/swap2/src/state/mint/reducer.ts":"55","/Users/cj/Desktop/swap-attempts/swap2/src/state/burn/reducer.ts":"56","/Users/cj/Desktop/swap-attempts/swap2/src/utils/index.ts":"57","/Users/cj/Desktop/swap-attempts/swap2/src/utils/contenthashToUri.ts":"58","/Users/cj/Desktop/swap-attempts/swap2/src/utils/parseENSAddress.ts":"59","/Users/cj/Desktop/swap-attempts/swap2/src/utils/uriToHttp.ts":"60","/Users/cj/Desktop/swap-attempts/swap2/src/constants/lists.ts":"61","/Users/cj/Desktop/swap-attempts/swap2/src/connectors/index.ts":"62","/Users/cj/Desktop/swap-attempts/swap2/src/constants/multicall/index.ts":"63","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useToast.ts":"64","/Users/cj/Desktop/swap-attempts/swap2/src/components/VersionBar/index.tsx":"65","/Users/cj/Desktop/swap-attempts/swap2/src/state/burn/hooks.ts":"66","/Users/cj/Desktop/swap-attempts/swap2/src/state/burn/actions.ts":"67","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Pool/styleds.tsx":"68","/Users/cj/Desktop/swap-attempts/swap2/src/pages/AddLiquidity/PoolPriceBar.tsx":"69","/Users/cj/Desktop/swap-attempts/swap2/src/pages/AppBody.tsx":"70","/Users/cj/Desktop/swap-attempts/swap2/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx":"71","/Users/cj/Desktop/swap-attempts/swap2/src/state/user/hooks.tsx":"72","/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/styleds.tsx":"73","/Users/cj/Desktop/swap-attempts/swap2/src/state/toasts/index.ts":"74","/Users/cj/Desktop/swap-attempts/swap2/src/state/swap/actions.ts":"75","/Users/cj/Desktop/swap-attempts/swap2/src/state/mint/actions.ts":"76","/Users/cj/Desktop/swap-attempts/swap2/src/state/user/actions.ts":"77","/Users/cj/Desktop/swap-attempts/swap2/src/connectors/NetworkConnector.ts":"78","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useI18n.ts":"79","/Users/cj/Desktop/swap-attempts/swap2/src/utils/wrappedCurrency.ts":"80","/Users/cj/Desktop/swap-attempts/swap2/src/state/swap/hooks.ts":"81","/Users/cj/Desktop/swap-attempts/swap2/src/state/wallet/hooks.ts":"82","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/Tokens.ts":"83","/Users/cj/Desktop/swap-attempts/swap2/src/data/Reserves.ts":"84","/Users/cj/Desktop/swap-attempts/swap2/src/data/TotalSupply.ts":"85","/Users/cj/Desktop/swap-attempts/swap2/src/state/actions.ts":"86","/Users/cj/Desktop/swap-attempts/swap2/src/state/multicall/hooks.ts":"87","/Users/cj/Desktop/swap-attempts/swap2/src/utils/prices.ts":"88","/Users/cj/Desktop/swap-attempts/swap2/src/components/V2ExchangeRedirectModal/index.tsx":"89","/Users/cj/Desktop/swap-attempts/swap2/src/components/ConnectWalletButton/index.tsx":"90","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useParsedQueryString.ts":"91","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/Trades.ts":"92","/Users/cj/Desktop/swap-attempts/swap2/src/state/lists/hooks.ts":"93","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useENS.ts":"94","/Users/cj/Desktop/swap-attempts/swap2/src/components/Row/index.tsx":"95","/Users/cj/Desktop/swap-attempts/swap2/src/utils/translateTextHelpers.ts":"96","/Users/cj/Desktop/swap-attempts/swap2/src/components/CurrencyLogo/index.tsx":"97","/Users/cj/Desktop/swap-attempts/swap2/src/components/Column/index.tsx":"98","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useENSName.ts":"99","/Users/cj/Desktop/swap-attempts/swap2/src/components/pancake/CoinLogo.ts":"100","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useHttpLocations.ts":"101","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useAuth.ts":"102","/Users/cj/Desktop/swap-attempts/swap2/src/utils/isZero.ts":"103","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useENSContentHash.ts":"104","/Users/cj/Desktop/swap-attempts/swap2/src/components/Logo/index.tsx":"105","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useENSAddress.ts":"106","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useApproveCallback.ts":"107","/Users/cj/Desktop/swap-attempts/swap2/src/utils/useDebouncedChangeHandler.ts":"108","/Users/cj/Desktop/swap-attempts/swap2/src/utils/currencyId.ts":"109","/Users/cj/Desktop/swap-attempts/swap2/src/state/transactions/hooks.tsx":"110","/Users/cj/Desktop/swap-attempts/swap2/src/components/Container.tsx":"111","/Users/cj/Desktop/swap-attempts/swap2/src/data/Allowances.ts":"112","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/FAQ.tsx":"113","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/SecondCard.tsx":"114","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/FirstCard.tsx":"115","/Users/cj/Desktop/swap-attempts/swap2/src/components/Shared/index.tsx":"116","/Users/cj/Desktop/swap-attempts/swap2/src/components/Slider/index.tsx":"117","/Users/cj/Desktop/swap-attempts/swap2/src/components/NavigationTabs/index.tsx":"118","/Users/cj/Desktop/swap-attempts/swap2/src/components/DoubleLogo/index.tsx":"119","/Users/cj/Desktop/swap-attempts/swap2/src/components/PositionCard/index.tsx":"120","/Users/cj/Desktop/swap-attempts/swap2/src/utils/maxAmountSpend.ts":"121","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useWrapCallback.ts":"122","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useSwapCallback.ts":"123","/Users/cj/Desktop/swap-attempts/swap2/src/components/CurrencyInputPanel/index.tsx":"124","/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/index.tsx":"125","/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/confirmPriceImpactWithoutFee.ts":"126","/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/TradePrice.tsx":"127","/Users/cj/Desktop/swap-attempts/swap2/src/components/Popups/PopupItem.tsx":"128","/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/AdvancedSwapDetailsDropdown.tsx":"129","/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/ConfirmSwapModal.tsx":"130","/Users/cj/Desktop/swap-attempts/swap2/src/state/mint/hooks.ts":"131","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useGetLocalProfile.ts":"132","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useTheme.ts":"133","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/config.ts":"134","/Users/cj/Desktop/swap-attempts/swap2/src/components/Shared/Common.tsx":"135","/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/index.tsx":"136","/Users/cj/Desktop/swap-attempts/swap2/src/components/Loader/index.tsx":"137","/Users/cj/Desktop/swap-attempts/swap2/src/components/ProgressSteps/index.tsx":"138","/Users/cj/Desktop/swap-attempts/swap2/src/components/SafeMoonWarningModal/index.tsx":"139","/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/ConfirmationModalContent.tsx":"140","/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/TransactionConfirmationModal.tsx":"141","/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/ConfirmationPendingContent.tsx":"142","/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/TransactionErrorContent.tsx":"143","/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/TransactionSubmittedContent.tsx":"144","/Users/cj/Desktop/swap-attempts/swap2/src/components/TokenWarningModal/index.tsx":"145","/Users/cj/Desktop/swap-attempts/swap2/src/components/SyrupWarningModal/index.tsx":"146","/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/CurrencySearchModal.tsx":"147","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useLast.ts":"148","/Users/cj/Desktop/swap-attempts/swap2/src/components/CardNav/index.tsx":"149","/Users/cj/Desktop/swap-attempts/swap2/src/components/Card/index.tsx":"150","/Users/cj/Desktop/swap-attempts/swap2/src/components/AddressInputPanel/index.tsx":"151","/Users/cj/Desktop/swap-attempts/swap2/src/components/Pane/index.tsx":"152","/Users/cj/Desktop/swap-attempts/swap2/src/components/Popups/ListUpdatePopup.tsx":"153","/Users/cj/Desktop/swap-attempts/swap2/src/components/Popups/TransactionPopup.tsx":"154","/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/AdvancedSwapDetails.tsx":"155","/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/SwapModalFooter.tsx":"156","/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/SwapModalHeader.tsx":"157","/Users/cj/Desktop/swap-attempts/swap2/src/components/QuestionHelper/index.tsx":"158","/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/SettingsModal.tsx":"159","/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/RecentTransactionsModal.tsx":"160","/Users/cj/Desktop/swap-attempts/swap2/src/components/NumericalInput/index.tsx":"161","/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/helpers.tsx":"162","/Users/cj/Desktop/swap-attempts/swap2/src/utils/listVersionLabel.ts":"163","/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/CurrencySearch.tsx":"164","/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/ListSelect.tsx":"165","/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/FormattedPriceImpact.tsx":"166","/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/SwapRoute.tsx":"167","/Users/cj/Desktop/swap-attempts/swap2/src/components/FoldableText/index.tsx":"168","/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/SlippageToleranceSetting.tsx":"169","/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/AudioSetting.tsx":"170","/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/TransactionDeadlineSetting.tsx":"171","/Users/cj/Desktop/swap-attempts/swap2/src/components/Modal/index.tsx":"172","/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/filtering.ts":"173","/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/sorting.ts":"174","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useToggle.ts":"175","/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/CurrencyList.tsx":"176","/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/SortButton.tsx":"177","/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/CommonBases.tsx":"178","/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/styleds.tsx":"179","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useOnClickOutside.tsx":"180","/Users/cj/Desktop/swap-attempts/swap2/src/components/Tooltip/index.tsx":"181","/Users/cj/Desktop/swap-attempts/swap2/src/components/ListLogo/index.tsx":"182","/Users/cj/Desktop/swap-attempts/swap2/src/components/Popover/index.tsx":"183","/Users/cj/Desktop/swap-attempts/swap2/src/components/Menu/index.tsx":"184","/Users/cj/Desktop/swap-attempts/swap2/src/components/Menu/config.ts":"185","/Users/cj/Desktop/swap-attempts/swap2/src/components/NavBar/NavBar.tsx":"186"},{"size":1096,"mtime":1624497889769,"results":"187","hashOfConfig":"188"},{"size":509,"mtime":1623456689771,"results":"189","hashOfConfig":"188"},{"size":130,"mtime":1624590473873,"results":"190","hashOfConfig":"188"},{"size":1895,"mtime":1623456689774,"results":"191","hashOfConfig":"188"},{"size":3614,"mtime":1623456689775,"results":"192","hashOfConfig":"188"},{"size":859,"mtime":1624508601135,"results":"193","hashOfConfig":"188"},{"size":5842,"mtime":1625198939581,"results":"194","hashOfConfig":"188"},{"size":7636,"mtime":1623456689776,"results":"195","hashOfConfig":"188"},{"size":3043,"mtime":1623456689777,"results":"196","hashOfConfig":"188"},{"size":844,"mtime":1623456689773,"results":"197","hashOfConfig":"188"},{"size":982,"mtime":1623456689774,"results":"198","hashOfConfig":"188"},{"size":711,"mtime":1623456689768,"results":"199","hashOfConfig":"188"},{"size":642,"mtime":1623456689769,"results":"200","hashOfConfig":"188"},{"size":786,"mtime":1623456689770,"results":"201","hashOfConfig":"188"},{"size":1897,"mtime":1623456689769,"results":"202","hashOfConfig":"188"},{"size":420,"mtime":1623456689768,"results":"203","hashOfConfig":"188"},{"size":725,"mtime":1623456689768,"results":"204","hashOfConfig":"188"},{"size":666,"mtime":1623456689769,"results":"205","hashOfConfig":"188"},{"size":221,"mtime":1623456689779,"results":"206","hashOfConfig":"188"},{"size":1874,"mtime":1623456689773,"results":"207","hashOfConfig":"188"},{"size":523,"mtime":1623456689778,"results":"208","hashOfConfig":"188"},{"size":2733,"mtime":1623456689768,"results":"209","hashOfConfig":"188"},{"size":1858,"mtime":1623456689780,"results":"210","hashOfConfig":"188"},{"size":1683,"mtime":1623456689775,"results":"211","hashOfConfig":"188"},{"size":502,"mtime":1623456689760,"results":"212","hashOfConfig":"188"},{"size":935,"mtime":1623456689777,"results":"213","hashOfConfig":"188"},{"size":2612,"mtime":1625435201412,"results":"214","hashOfConfig":"188"},{"size":1884,"mtime":1623456689766,"results":"215","hashOfConfig":"188"},{"size":322,"mtime":1623456689773,"results":"216","hashOfConfig":"188"},{"size":924,"mtime":1623456689771,"results":"217","hashOfConfig":"188"},{"size":562,"mtime":1623456689773,"results":"218","hashOfConfig":"188"},{"size":1324,"mtime":1623456689774,"results":"219","hashOfConfig":"188"},{"size":3123,"mtime":1623456689768,"results":"220","hashOfConfig":"188"},{"size":3685,"mtime":1623456689765,"results":"221","hashOfConfig":"188"},{"size":1694,"mtime":1623456689780,"results":"222","hashOfConfig":"188"},{"size":2728,"mtime":1623456689779,"results":"223","hashOfConfig":"188"},{"size":731,"mtime":1623456689769,"results":"224","hashOfConfig":"188"},{"size":259,"mtime":1623456689765,"results":"225","hashOfConfig":"188"},{"size":2301,"mtime":1623456689763,"results":"226","hashOfConfig":"188"},{"size":1828,"mtime":1625279027899,"results":"227","hashOfConfig":"188"},{"size":6799,"mtime":1625420246944,"results":"228","hashOfConfig":"188"},{"size":5111,"mtime":1625422439201,"results":"229","hashOfConfig":"188"},{"size":2606,"mtime":1623456689772,"results":"230","hashOfConfig":"188"},{"size":17404,"mtime":1625422435584,"results":"231","hashOfConfig":"188"},{"size":18335,"mtime":1625429540967,"results":"232","hashOfConfig":"188"},{"size":27066,"mtime":1623456689773,"results":"233","hashOfConfig":"188"},{"size":1714,"mtime":1623456689774,"results":"234","hashOfConfig":"188"},{"size":1901,"mtime":1623456689777,"results":"235","hashOfConfig":"188"},{"size":5332,"mtime":1623456689775,"results":"236","hashOfConfig":"188"},{"size":3940,"mtime":1623456689776,"results":"237","hashOfConfig":"188"},{"size":456,"mtime":1623456689780,"results":"238","hashOfConfig":"188"},{"size":287,"mtime":1623456689774,"results":"239","hashOfConfig":"188"},{"size":2459,"mtime":1623456689777,"results":"240","hashOfConfig":"188"},{"size":4788,"mtime":1623456689778,"results":"241","hashOfConfig":"188"},{"size":1272,"mtime":1623456689775,"results":"242","hashOfConfig":"188"},{"size":525,"mtime":1623456689774,"results":"243","hashOfConfig":"188"},{"size":3769,"mtime":1623456689779,"results":"244","hashOfConfig":"188"},{"size":1418,"mtime":1623456689779,"results":"245","hashOfConfig":"188"},{"size":360,"mtime":1623456689780,"results":"246","hashOfConfig":"188"},{"size":775,"mtime":1623456689780,"results":"247","hashOfConfig":"188"},{"size":125,"mtime":1625147643840,"results":"248","hashOfConfig":"188"},{"size":1922,"mtime":1623456689764,"results":"249","hashOfConfig":"188"},{"size":343,"mtime":1623456689766,"results":"250","hashOfConfig":"188"},{"size":1275,"mtime":1623456689770,"results":"251","hashOfConfig":"188"},{"size":1112,"mtime":1624512214863,"results":"252","hashOfConfig":"253"},{"size":5298,"mtime":1623456689774,"results":"254","hashOfConfig":"188"},{"size":297,"mtime":1623456689774,"results":"255","hashOfConfig":"188"},{"size":591,"mtime":1623456689772,"results":"256","hashOfConfig":"188"},{"size":1669,"mtime":1623456689771,"results":"257","hashOfConfig":"188"},{"size":447,"mtime":1624563073572,"results":"258","hashOfConfig":"188"},{"size":2277,"mtime":1623456689771,"results":"259","hashOfConfig":"188"},{"size":8283,"mtime":1623456689778,"results":"260","hashOfConfig":"188"},{"size":3230,"mtime":1624555613412,"results":"261","hashOfConfig":"188"},{"size":1153,"mtime":1623456689777,"results":"262","hashOfConfig":"188"},{"size":670,"mtime":1623456689776,"results":"263","hashOfConfig":"188"},{"size":321,"mtime":1623456689775,"results":"264","hashOfConfig":"188"},{"size":1429,"mtime":1623456689778,"results":"265","hashOfConfig":"188"},{"size":5636,"mtime":1623456689764,"results":"266","hashOfConfig":"188"},{"size":846,"mtime":1623456689769,"results":"267","hashOfConfig":"188"},{"size":852,"mtime":1623456689781,"results":"268","hashOfConfig":"188"},{"size":9734,"mtime":1625432308869,"results":"269","hashOfConfig":"188"},{"size":4705,"mtime":1623456689778,"results":"270","hashOfConfig":"188"},{"size":4114,"mtime":1625146456232,"results":"271","hashOfConfig":"188"},{"size":2078,"mtime":1623456689767,"results":"272","hashOfConfig":"188"},{"size":709,"mtime":1623456689767,"results":"273","hashOfConfig":"188"},{"size":46,"mtime":1623456689773,"results":"274","hashOfConfig":"188"},{"size":7869,"mtime":1623456689776,"results":"275","hashOfConfig":"188"},{"size":3205,"mtime":1623456689780,"results":"276","hashOfConfig":"188"},{"size":2503,"mtime":1623456689762,"results":"277","hashOfConfig":"188"},{"size":3453,"mtime":1624566447696,"results":"278","hashOfConfig":"188"},{"size":359,"mtime":1625424625475,"results":"279","hashOfConfig":"188"},{"size":4375,"mtime":1623456689768,"results":"280","hashOfConfig":"188"},{"size":3643,"mtime":1623456689775,"results":"281","hashOfConfig":"188"},{"size":765,"mtime":1623456689769,"results":"282","hashOfConfig":"188"},{"size":999,"mtime":1623456689758,"results":"283","hashOfConfig":"188"},{"size":1408,"mtime":1623456689780,"results":"284","hashOfConfig":"188"},{"size":1887,"mtime":1623456689755,"results":"285","hashOfConfig":"188"},{"size":647,"mtime":1623456689754,"results":"286","hashOfConfig":"188"},{"size":1596,"mtime":1623456689769,"results":"287","hashOfConfig":"188"},{"size":208,"mtime":1623456689763,"results":"288","hashOfConfig":"188"},{"size":717,"mtime":1623456689769,"results":"289","hashOfConfig":"188"},{"size":2076,"mtime":1623456689768,"results":"290","hashOfConfig":"188"},{"size":185,"mtime":1623456689779,"results":"291","hashOfConfig":"188"},{"size":1245,"mtime":1623456689769,"results":"292","hashOfConfig":"188"},{"size":781,"mtime":1623456689755,"results":"293","hashOfConfig":"188"},{"size":1394,"mtime":1623456689769,"results":"294","hashOfConfig":"188"},{"size":3985,"mtime":1623456689768,"results":"295","hashOfConfig":"188"},{"size":1143,"mtime":1623456689780,"results":"296","hashOfConfig":"188"},{"size":284,"mtime":1623456689779,"results":"297","hashOfConfig":"188"},{"size":2798,"mtime":1623456689777,"results":"298","hashOfConfig":"188"},{"size":501,"mtime":1625275954950,"results":"299","hashOfConfig":"188"},{"size":701,"mtime":1623456689767,"results":"300","hashOfConfig":"188"},{"size":1517,"mtime":1624492388518,"results":"301","hashOfConfig":"188"},{"size":3877,"mtime":1623456689772,"results":"302","hashOfConfig":"188"},{"size":4001,"mtime":1623456689772,"results":"303","hashOfConfig":"188"},{"size":25,"mtime":1623456689760,"results":"304","hashOfConfig":"188"},{"size":3207,"mtime":1623456689760,"results":"305","hashOfConfig":"188"},{"size":2130,"mtime":1624565848994,"results":"306","hashOfConfig":"188"},{"size":1112,"mtime":1623456689755,"results":"307","hashOfConfig":"188"},{"size":8327,"mtime":1625149024118,"results":"308","hashOfConfig":"188"},{"size":652,"mtime":1623456689779,"results":"309","hashOfConfig":"188"},{"size":3140,"mtime":1623456689770,"results":"310","hashOfConfig":"188"},{"size":8776,"mtime":1623456689770,"results":"311","hashOfConfig":"188"},{"size":6678,"mtime":1625423568435,"results":"312","hashOfConfig":"188"},{"size":452,"mtime":1623456689762,"results":"313","hashOfConfig":"188"},{"size":996,"mtime":1623456689764,"results":"314","hashOfConfig":"188"},{"size":1166,"mtime":1623456689764,"results":"315","hashOfConfig":"188"},{"size":2525,"mtime":1623456689757,"results":"316","hashOfConfig":"188"},{"size":960,"mtime":1623456689763,"results":"317","hashOfConfig":"188"},{"size":3223,"mtime":1623456689763,"results":"318","hashOfConfig":"188"},{"size":7133,"mtime":1623456689775,"results":"319","hashOfConfig":"188"},{"size":1028,"mtime":1623456689769,"results":"320","hashOfConfig":"188"},{"size":354,"mtime":1623456689770,"results":"321","hashOfConfig":"253"},{"size":3026,"mtime":1623456689772,"results":"322","hashOfConfig":"188"},{"size":2290,"mtime":1623456689760,"results":"323","hashOfConfig":"188"},{"size":1770,"mtime":1624565734382,"results":"324","hashOfConfig":"188"},{"size":1094,"mtime":1624492493190,"results":"325","hashOfConfig":"188"},{"size":2449,"mtime":1623456689758,"results":"326","hashOfConfig":"253"},{"size":2631,"mtime":1623456689758,"results":"327","hashOfConfig":"188"},{"size":656,"mtime":1623456689761,"results":"328","hashOfConfig":"188"},{"size":1079,"mtime":1623456689761,"results":"329","hashOfConfig":"188"},{"size":1252,"mtime":1623456689761,"results":"330","hashOfConfig":"188"},{"size":1162,"mtime":1623456689761,"results":"331","hashOfConfig":"188"},{"size":1322,"mtime":1623456689761,"results":"332","hashOfConfig":"188"},{"size":5377,"mtime":1625429497940,"results":"333","hashOfConfig":"188"},{"size":2729,"mtime":1623456689760,"results":"334","hashOfConfig":"188"},{"size":2395,"mtime":1625428418621,"results":"335","hashOfConfig":"188"},{"size":1024,"mtime":1623456689770,"results":"336","hashOfConfig":"188"},{"size":404,"mtime":1625422420391,"results":"337","hashOfConfig":"188"},{"size":565,"mtime":1624554138086,"results":"338","hashOfConfig":"188"},{"size":3798,"mtime":1624556004944,"results":"339","hashOfConfig":"188"},{"size":192,"mtime":1623456689757,"results":"340","hashOfConfig":"188"},{"size":3551,"mtime":1623456689757,"results":"341","hashOfConfig":"188"},{"size":1226,"mtime":1623456689757,"results":"342","hashOfConfig":"188"},{"size":4100,"mtime":1623456689763,"results":"343","hashOfConfig":"188"},{"size":4595,"mtime":1623456689763,"results":"344","hashOfConfig":"188"},{"size":4759,"mtime":1624512551069,"results":"345","hashOfConfig":"188"},{"size":1073,"mtime":1623456689758,"results":"346","hashOfConfig":"188"},{"size":877,"mtime":1623456689756,"results":"347","hashOfConfig":"188"},{"size":3076,"mtime":1623456689756,"results":"348","hashOfConfig":"188"},{"size":2134,"mtime":1623456689756,"results":"349","hashOfConfig":"188"},{"size":1151,"mtime":1623456689762,"results":"350","hashOfConfig":"188"},{"size":182,"mtime":1623456689779,"results":"351","hashOfConfig":"188"},{"size":7695,"mtime":1623456689759,"results":"352","hashOfConfig":"188"},{"size":10799,"mtime":1624494686586,"results":"353","hashOfConfig":"188"},{"size":579,"mtime":1623456689763,"results":"354","hashOfConfig":"188"},{"size":1276,"mtime":1623456689764,"results":"355","hashOfConfig":"188"},{"size":1609,"mtime":1623456689755,"results":"356","hashOfConfig":"188"},{"size":3787,"mtime":1624567508049,"results":"357","hashOfConfig":"188"},{"size":793,"mtime":1623456689756,"results":"358","hashOfConfig":"188"},{"size":2040,"mtime":1623456689757,"results":"359","hashOfConfig":"188"},{"size":2984,"mtime":1625435152022,"results":"360","hashOfConfig":"188"},{"size":977,"mtime":1623456689759,"results":"361","hashOfConfig":"188"},{"size":1684,"mtime":1623456689759,"results":"362","hashOfConfig":"188"},{"size":272,"mtime":1623456689770,"results":"363","hashOfConfig":"188"},{"size":6263,"mtime":1625149335544,"results":"364","hashOfConfig":"188"},{"size":720,"mtime":1623456689759,"results":"365","hashOfConfig":"188"},{"size":2345,"mtime":1623456689758,"results":"366","hashOfConfig":"188"},{"size":1709,"mtime":1625278808784,"results":"367","hashOfConfig":"188"},{"size":741,"mtime":1623456689770,"results":"368","hashOfConfig":"188"},{"size":902,"mtime":1623456689761,"results":"369","hashOfConfig":"188"},{"size":574,"mtime":1623456689755,"results":"370","hashOfConfig":"188"},{"size":3100,"mtime":1623456689757,"results":"371","hashOfConfig":"188"},{"size":1327,"mtime":1624498476065,"results":"372","hashOfConfig":"253"},{"size":521,"mtime":1624498476064,"results":"373","hashOfConfig":"253"},{"size":768,"mtime":1624509714171,"results":"374","hashOfConfig":"253"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"378"},"1wlcxdt",{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"378"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"378"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"378"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"378"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},"1f5trx9",{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"378"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"378"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"378"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"654"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"378"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"378"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"765"},"/Users/cj/Desktop/swap-attempts/swap2/src/index.tsx",["766"],"import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport GlobalStyle from './style/Global'\nimport App from './pages/App'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport ToastListener from './components/ToastListener'\nimport Providers from './Providers'\nimport 'inter-ui'\nimport './i18n'\n\nif ('ethereum' in window) {\n  if (true) (window.ethereum as any).autoRefreshOnNetworkChange = false\n}\n\nwindow.addEventListener('error', () => {\n  localStorage?.removeItem('redux_localstorage_simple_lists')\n})\n\nReactDOM.render(\n  <StrictMode>\n    <Providers>\n      <>\n        <ListsUpdater />\n        <ApplicationUpdater />\n        <TransactionUpdater />\n        <MulticallUpdater />\n        <ToastListener />\n      </>\n      <ResetCSS />\n      <GlobalStyle />\n      <App />\n    </Providers>\n  </StrictMode>,\n  document.getElementById('root')\n)\n",["767","768","769","770","771"],"/Users/cj/Desktop/swap-attempts/swap2/src/i18n.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/style/Global.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/application/updater.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/lists/updater.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/Providers.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/App.tsx",["772","773","774","775","776","777"],"import React, { Suspense, useEffect, useState } from 'react'\nimport NavBar from 'components/NavBar/NavBar'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Credentials, StringTranslations } from '@crowdin/crowdin-api-client'\nimport { LangType, useModal } from '@pancakeswap-libs/uikit'\nimport VersionBar from 'components/VersionBar'\nimport Popups from '../components/Popups'\nimport Web3ReactManager from '../components/Web3ReactManager'\nimport { RedirectDuplicateTokenIds, RedirectOldAddLiquidityPathStructure } from './AddLiquidity/redirects'\nimport { RedirectOldRemoveLiquidityPathStructure } from './RemoveLiquidity/redirects'\nimport AddLiquidity from './AddLiquidity'\nimport Pool from './Pool'\nimport PoolFinder from './PoolFinder'\nimport RemoveLiquidity from './RemoveLiquidity'\nimport Swap from './Swap'\nimport Migration from './Migration'\nimport { RedirectPathToSwapOnly } from './Swap/redirects'\nimport { EN, allLanguages } from '../constants/localisation/languageCodes'\nimport { LanguageContext } from '../hooks/LanguageContext'\nimport { TranslationsContext } from '../hooks/TranslationsContext'\nimport UseV2ExchangeModal from '../components/UseV2ExchangeModal'\n\nimport Menu from '../components/Menu'\nimport useGetDocumentTitlePrice from '../hooks/useGetDocumentTitlePrice'\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  overflow-x: hidden;\n  width: -webkit-fill-available;\n  background-image: url('/images/test.svg');\n  font-size: 24px;\n  height: 100%;\n  height: 100%;\n  height: -moz-available; /* WebKit-based browsers will ignore this. */\n  height: -webkit-fill-available; /* Mozilla-based browsers will ignore this. */\n  height: fill-available;\n  min-height: 100vh;\n`\n\nconst BodyWrapper = styled.div`\n  font-size: 24px;\n  display: flex;\n  height: 100%;\n  height: 100%;\n  height: -moz-available; /* WebKit-based browsers will ignore this. */\n  height: -webkit-fill-available; /* Mozilla-based browsers will ignore this. */\n  height: fill-available;\n  width: -webkit-fill-available;\n  z-index: 1;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    min-height: 100vh;\n  }\n`\n\nconst SvgWrapper = styled.div``\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport default function App() {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(undefined)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(undefined)\n  const [translations, setTranslations] = useState<Array<any>>([])\n  const apiKey = `${process.env.REACT_APP_CROWDIN_APIKEY}`\n  const projectId = parseInt(`${process.env.REACT_APP_CROWDIN_PROJECTID}`)\n  const fileId = 6\n  const credentials: Credentials = {\n    token: apiKey,\n  }\n\n  const stringTranslationsApi = new StringTranslations(credentials)\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  const fetchTranslationsForSelectedLanguage = async () => {\n    stringTranslationsApi\n      .listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n      .then((translationApiResponse) => {\n        if (translationApiResponse.data.length < 1) {\n          setTranslations(['error'])\n        } else {\n          setTranslations(translationApiResponse.data)\n        }\n      })\n      .then(() => setTranslatedLanguage(selectedLanguage))\n      .catch((error) => {\n        setTranslations(['error'])\n        console.error(error)\n      })\n  }\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedLanguage])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  useGetDocumentTitlePrice()\n\n  return (\n    <Suspense fallback={null}>\n      <HashRouter>\n        <AppWrapper>\n          <LanguageContext.Provider\n            value={{\n              selectedLanguage,\n              setSelectedLanguage: handleLanguageSelect,\n              translatedLanguage,\n              setTranslatedLanguage,\n            }}\n          >\n            <SvgWrapper />\n\n            <TranslationsContext.Provider value={{ translations, setTranslations }}>\n              <Popups />\n              <Web3ReactManager>\n                <Switch>\n                  <Route exact strict path=\"/swap\" component={Swap} />\n                  <Route exact strict path=\"/find\" component={PoolFinder} />\n                  <Route exact strict path=\"/pool\" component={Pool} />\n                  <Route exact path=\"/add\" component={AddLiquidity} />\n                  <Route exact path=\"/migrate\" component={Migration} />\n                  <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n                  {/* Redirection: These old routes are still used in the code base */}\n                  <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n                  <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n                  <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n\n                  <Route component={RedirectPathToSwapOnly} />\n                </Switch>\n              </Web3ReactManager>\n            </TranslationsContext.Provider>\n          </LanguageContext.Provider>\n        </AppWrapper>\n      </HashRouter>\n    </Suspense>\n  )\n}\n","/Users/cj/Desktop/swap-attempts/swap2/src/state/multicall/updater.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/transactions/updater.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/application/actions.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/lists/actions.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useDebounce.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useInterval.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useIsWindowVisible.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useFetchListCallback.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/TranslationsContext.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/LanguageContext.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useGetDocumentTitlePrice.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/getLibrary.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/application/hooks.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/chunkArray.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useContract.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/retry.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/multicall/actions.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/ToastListener/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/transactions/actions.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/ThemeContext.tsx",["778","779"],"import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport {\n  light as lightBase,\n  Menu as menuBase,\n  dark as darkBase,\n  PancakeTheme,\n  SvgProps as svgProps,\n} from '@pancakeswap-libs/uikit'\n\n// customize light theme\nconst light: PancakeTheme = lightBase\nlight.card.background = '#334a52'\nlight.card.boxShadowActive = '#fff'\nlight.nav.hover = '#4287f5'\nlight.colors.text = '#fff000'\nlight.colors.textSubtle = '#fff'\nlight.colors.dropdown = '#4287f5'\nlight.colors.backgroundAlt = '#334a52'\nlight.colors.background = '#334a52'\nlight.colors.secondary = '#334a52'\nlight.colors.background = '#4287f5'\nlight.colors.inputSecondary = '#4287f5'\nlight.colors.tertiary = '#4287f5'\n\nlight.colors.primaryBright = '#fff000'\n\nlight.colors.binance = '#4287f5'\nlight.colors.contrast = '#334a52'\nlight.colors.input = '#1a272b'\nlight.colors.primary = '#4287f5'\nlight.colors.invertedContrast = '#4287f5'\n\nconst dark: PancakeTheme = darkBase\ndark.card.background = '#334a52'\ndark.card.boxShadowActive = '#fff'\ndark.nav.hover = '#334a52'\ndark.colors.text = '#fff000'\ndark.colors.textSubtle = '#fff' // Text color small\ndark.colors.backgroundAlt = '#334a52'\ndark.colors.secondary = '#334a52' // Max\ndark.colors.background = '#4287f5'\ndark.colors.inputSecondary = '#4287f5'\ndark.colors.tertiary = '#131313'\ndark.colors.primaryDark = '#fff000'\ndark.colors.primary = '#fff000'\ndark.colors.binance = '#4287f5'\ndark.colors.contrast = '#4287f5'\ndark.colors.input = '#1a272b'\ndark.colors.dropdown = '#4287f5'\ndark.colors.invertedContrast = '#4287f5'\n\n// dark.modal.background = '#121223'\n// dark.radii.card = '#121223'\n// dark.radii.default = '#121223'\n// dark.radii.circle = '#121223'\n// dark.radii.small = '#121223'\nconst CACHE_KEY = 'IS_DARK'\n\nexport interface ThemeContextType {\n  isDark: boolean\n  toggleTheme: () => void\n}\n\nconst ThemeContext = React.createContext<ThemeContextType>({ isDark: false, toggleTheme: () => null })\n\nconst ThemeContextProvider: React.FC = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState: any) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","/Users/cj/Desktop/swap-attempts/swap2/src/constants/localisation/languageCodes.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/Swap/redirects.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/AddLiquidity/redirects.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/RemoveLiquidity/redirects.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/index.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/index.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/constants/index.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/resolveENSContentHash.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/getTokenList.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useGetPriceData.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/constants/abis/erc20.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Web3ReactManager/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Popups/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/PoolFinder/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/Pool/index.tsx",["780"],"import React, { useContext, useMemo } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Pair } from '@pancakeswap-libs/sdk'\nimport { Button, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport CardNav from 'components/CardNav'\nimport Question from 'components/QuestionHelper'\nimport FullPositionCard from 'components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { StyledInternalLink } from 'components/Shared'\nimport { LightCard } from 'components/Card'\nimport { RowBetween } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport Container from 'components/Container'\n\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { Dots } from 'components/swap/styleds'\nimport useI18n from 'hooks/useI18n'\nimport PageHeader from 'components/PageHeader'\nimport AppBody from '../AppBody'\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n  const TranslateString = useI18n()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\n    [tokenPairsWithLiquidityTokens]\n  )\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  return (\n    <Container>\n      <AppBody>\n        <PageHeader\n          title={TranslateString(262, 'Liquidity')}\n          description={TranslateString(1168, 'Add liquidity to receive LP tokens')}\n        >\n          <Button id=\"join-pool-button\" mb=\"16px\">\n            Join\n          </Button>\n        </PageHeader>\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <CardBody>\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n              <RowBetween padding=\"0 8px\">\n                <Text color={theme.colors.text}>{TranslateString(107, 'Your Liquidity')}</Text>\n                <Question\n                  text={TranslateString(\n                    1170,\n                    'When you add liquidity, you are given pool tokens that represent your share. If you don’t see a pool you joined in this list, try importing a pool below.'\n                  )}\n                />\n              </RowBetween>\n\n              {!account ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {TranslateString(156, 'Connect to a wallet to view your liquidity.')}\n                  </Text>\n                </LightCard>\n              ) : v2IsLoading ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    <Dots>Loading</Dots>\n                  </Text>\n                </LightCard>\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                  ))}\n                </>\n              ) : (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {TranslateString(104, 'No liquidity found.')}\n                  </Text>\n                </LightCard>\n              )}\n\n              <div>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {TranslateString(106, \"Don't see a pool you joined?\")}{' '}\n                  <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\n                    {TranslateString(108, 'Import it.')}\n                  </StyledInternalLink>\n                </Text>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {TranslateString(1172, 'Or, if you staked your LP tokens in a farm, unstake them to see them here.')}\n                </Text>\n              </div>\n            </AutoColumn>\n          </CardBody>\n        </AutoColumn>\n      </AppBody>\n    </Container>\n  )\n}\n","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/AddLiquidity/index.tsx",["781","782","783","784","785","786","787","788","789","790","791","792","793"],"import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap-libs/sdk'\nimport { Button, CardBody, AddIcon, Text as UIKitText } from '@pancakeswap-libs/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn, ColumnCenter } from 'components/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from 'components/TransactionConfirmationModal'\nimport CardNav from 'components/CardNav'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { AddRemoveTabs } from 'components/NavigationTabs'\nimport { MinimalPositionCard } from 'components/PositionCard'\nimport Row, { RowBetween, RowFlat } from 'components/Row'\n\nimport { PairState } from 'data/Reserves'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport { Field } from 'state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from 'state/mint/hooks'\n\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useIsExpertMode, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from 'utils'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { currencyId } from 'utils/currencyId'\nimport Pane from 'components/Pane'\nimport Container from 'components/Container'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useI18n from 'hooks/useI18n'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { PoolPriceBar } from './PoolPriceBar'\nimport { ROUTER_ADDRESS } from '../../constants'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const TranslateString = useI18n()\n\n  const oneCurrencyIsWBNB = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId])))\n  )\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const [deadline] = useUserDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsBNB = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsBNB ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsBNB ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadlineFromNow,\n      ]\n      value = BigNumber.from((tokenBIsBNB ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadlineFromNow,\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    // const aa = await estimate(...args, value ? { value } : {})\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        })\n      )\n      .catch((e) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (e?.code !== 4001) {\n          console.error(e)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\n          <RowFlat>\n            <UIKitText fontSize=\"48px\" mr=\"8px\">\n              {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n            </UIKitText>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <UIKitText fontSize=\"48px\" mr=\"8px\">\n            {liquidityMinted?.toSignificant(6)}\n          </UIKitText>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <UIKitText fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </UIKitText>\n        </Row>\n        <UIKitText small textAlign=\"left\" padding=\"8px 0 0 0 \" style={{ fontStyle: 'italic' }}>\n          {`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </UIKitText>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencies[Field.CURRENCY_A]?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\n\n  const handleCurrencyASelect = useCallback(\n    (currA: Currency) => {\n      const newCurrencyIdA = currencyId(currA)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currB: Currency) => {\n      const newCurrencyIdB = currencyId(currB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  return (\n    <Container>\n      <AppBody>\n        <AddRemoveTabs adding />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={\n                  noLiquidity\n                    ? TranslateString(1154, 'You are creating a pool')\n                    : TranslateString(1156, 'You will receive')\n                }\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <CardBody>\n            <AutoColumn gap=\"20px\">\n              {noLiquidity && (\n                <ColumnCenter>\n                  <Pane>\n                    <AutoColumn gap=\"12px\">\n                      <UIKitText>{TranslateString(1158, 'You are the first liquidity provider.')}</UIKitText>\n                      <UIKitText>\n                        {TranslateString(1160, 'The ratio of tokens you add will set the price of this pool.')}\n                      </UIKitText>\n                      <UIKitText>\n                        {TranslateString(1162, 'Once you are happy with the rate click supply to review.')}\n                      </UIKitText>\n                    </AutoColumn>\n                  </Pane>\n                </ColumnCenter>\n              )}\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.CURRENCY_A]}\n                onUserInput={onFieldAInput}\n                onMax={() => {\n                  onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                }}\n                onCurrencySelect={handleCurrencyASelect}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                currency={currencies[Field.CURRENCY_A]}\n                id=\"add-liquidity-input-tokena\"\n                showCommonBases={false}\n              />\n              <ColumnCenter>\n                <AddIcon color=\"textSubtle\" />\n              </ColumnCenter>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.CURRENCY_B]}\n                onUserInput={onFieldBInput}\n                onCurrencySelect={handleCurrencyBSelect}\n                onMax={() => {\n                  onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                }}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                currency={currencies[Field.CURRENCY_B]}\n                id=\"add-liquidity-input-tokenb\"\n                showCommonBases={false}\n              />\n              {/* {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n                <div>\n                  <UIKitText\n                    style={{ textTransform: 'uppercase', fontWeight: 600 }}\n                    color=\"textSubtle\"\n                    fontSize=\"12px\"\n                    mb=\"2px\"\n                  >\n                    {noLiquidity\n                      ? TranslateString(1164, 'Initial prices and pool share')\n                      : TranslateString(1166, 'Prices and pool share')}\n                  </UIKitText>\n                  <Pane>\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </Pane>\n                </div>\n              )}\n\n              {!account ? (\n                <ConnectWalletButton width=\"100%\" />\n              ) : (\n                <AutoColumn gap=\"md\">\n                  {(approvalA === ApprovalState.NOT_APPROVED ||\n                    approvalA === ApprovalState.PENDING ||\n                    approvalB === ApprovalState.NOT_APPROVED ||\n                    approvalB === ApprovalState.PENDING) &&\n                    isValid && (\n                      <RowBetween>\n                        {approvalA !== ApprovalState.APPROVED && (\n                          <Button\n                            onClick={approveACallback}\n                            disabled={approvalA === ApprovalState.PENDING}\n                            style={{ width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%' }}\n                          >\n                            {approvalA === ApprovalState.PENDING ? (\n                              <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\n                            ) : (\n                              `Approve ${currencies[Field.CURRENCY_A]?.symbol}`\n                            )}\n                          </Button>\n                        )}\n                        {approvalB !== ApprovalState.APPROVED && (\n                          <Button\n                            onClick={approveBCallback}\n                            disabled={approvalB === ApprovalState.PENDING}\n                            style={{ width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%' }}\n                          >\n                            {approvalB === ApprovalState.PENDING ? (\n                              <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\n                            ) : (\n                              `Approve ${currencies[Field.CURRENCY_B]?.symbol}`\n                            )}\n                          </Button>\n                        )}\n                      </RowBetween>\n                    )}\n                  <Button\n                    onClick={() => {\n                      if (expertMode) {\n                        onAdd()\n                      } else {\n                        setShowConfirm(true)\n                      }\n                    }}\n                    disabled\n                    variant={\n                      !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                        ? 'danger'\n                        : 'primary'\n                    }\n                    width=\"100%\"\n                  >\n                    {error ?? \"You can't add liquidity on V1\"}\n                  </Button>\n                </AutoColumn>\n              )} */}\n            </AutoColumn>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWBNB} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </Container>\n  )\n}\n","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Swap/index.tsx",["794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817"],"import { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap-libs/sdk'\nimport React, { useCallback, useContext, useEffect, useMemo, useState, useRef } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text, useModal, Link, Flex } from '@pancakeswap-libs/uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport AddressInputPanel from 'components/AddressInputPanel'\nimport Card, { GreyCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport CardNav from 'components/CardNav'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\nimport TradePrice from 'components/swap/TradePrice'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport SyrupWarningModal from 'components/SyrupWarningModal'\nimport SafeMoonWarningModal from 'components/SafeMoonWarningModal'\nimport ProgressSteps from 'components/ProgressSteps'\nimport Container from 'components/Container'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { LinkStyledButton } from 'components/Shared'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport Loader from 'components/Loader'\nimport useI18n from 'hooks/useI18n'\nimport PageHeader from 'components/PageHeader'\nimport V2ExchangeRedirectModal from 'components/V2ExchangeRedirectModal'\nimport UnlockButton from 'components/ConnectWalletButton'\nimport getTokenList from 'utils/getTokenList'\nimport AppBody from '../AppBody'\n\nconst StyledLink = styled(Link)`\n  display: inline;\n  color: ${({ theme }) => theme.colors.failure};\n`\n\nconst Swap = () => {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const TranslateString = useI18n()\n  const [modalCountdownSecondsRemaining, setModalCountdownSecondsRemaining] = useState(5)\n  const [disableSwap, setDisableSwap] = useState(false)\n  const [hasPoppedModal, setHasPoppedModal] = useState(false)\n  const [interruptRedirectCountdown, setInterruptRedirectCountdown] = useState(false)\n  const [onPresentV2ExchangeRedirectModal] = useModal(\n    <V2ExchangeRedirectModal handleCloseModal={() => setInterruptRedirectCountdown(true)} />\n  )\n  const tkn = 'ELTRK'\n  const defIn = `${loadedUrlParams?.inputCurrencyId}`\n  const defOut = `${loadedUrlParams?.inputCurrencyId}${tkn}`\n  // console.log(defIn)\n\n  const onPresentV2ExchangeRedirectModalRef = useRef(onPresentV2ExchangeRedirectModal)\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [useCurrency(defIn), useCurrency(defOut)]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const [transactionWarning, setTransactionWarning] = useState<{\n    selectedToken: string | null\n    purchaseType: string | null\n  }>({\n    selectedToken: null,\n    purchaseType: null,\n  })\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  const handleConfirmWarning = () => {\n    setTransactionWarning({\n      selectedToken: null,\n      purchaseType: null,\n    })\n  }\n\n  const { account } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  // Manage disabled trading pairs that should redirect users to V2\n  useEffect(() => {\n    const disabledSwaps = ['BNB', 'BUSD', 'USDT', 'USDC', 'CAKE', 'BUNNY', 'ETH', 'BTCB', 'AUTO', 'XVS']\n    const inputCurrencySymbol = currencies[Field.INPUT]?.symbol || ''\n    const outputCurrencySymbol = currencies[Field.OUTPUT]?.symbol || ''\n    const doesInputMatch = disabledSwaps.includes(inputCurrencySymbol)\n    const doesOutputMatch = disabledSwaps.includes(outputCurrencySymbol)\n\n    if (doesInputMatch && doesOutputMatch) {\n      // Prevent infinite re-render of modal with this condition\n      if (!hasPoppedModal) {\n        setHasPoppedModal(true)\n        onPresentV2ExchangeRedirectModalRef.current()\n      }\n\n      // Controls the swap buttons being disabled & renders a message\n      setDisableSwap(true)\n\n      const tick = () => {\n        setModalCountdownSecondsRemaining((prevSeconds) => prevSeconds - 1)\n      }\n      const timerInterval = setInterval(() => tick(), 1000)\n\n      if (interruptRedirectCountdown) {\n        // Reset timer if countdown is interrupted\n        clearInterval(timerInterval)\n        setModalCountdownSecondsRemaining(5)\n      }\n\n      if (modalCountdownSecondsRemaining <= 0) {\n        window.location.href = 'https://exchange.pancakeswap.finance/#/swap'\n      }\n\n      return () => {\n        clearInterval(timerInterval)\n      }\n    }\n\n    // Unset disableSwap state if the swap inputs & outputs dont match disabledSwaps\n    setDisableSwap(false)\n    return undefined\n  }, [\n    currencies,\n    hasPoppedModal,\n    modalCountdownSecondsRemaining,\n    onPresentV2ExchangeRedirectModalRef,\n    interruptRedirectCountdown,\n  ])\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\n    swapCallback()\n      .then((hash) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          txHash: hash,\n        }))\n      })\n      .catch((error) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        }))\n      })\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\n\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  // This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\n  // If so, they will be alerted with a warning message.\n  const checkForWarning = useCallback(\n    (selected: string, purchaseType: string) => {\n      if (['SYRUP', 'SAFEMOON'].includes(selected)) {\n        setTransactionWarning({\n          selectedToken: selected,\n          purchaseType,\n        })\n      }\n    },\n    [setTransactionWarning]\n  )\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setHasPoppedModal(false)\n      setInterruptRedirectCountdown(false)\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      if (inputCurrency.symbol === 'SYRUP') {\n        checkForWarning(inputCurrency.symbol, 'Selling')\n      }\n      if (inputCurrency.symbol === 'SAFEMOON') {\n        checkForWarning(inputCurrency.symbol, 'Selling')\n      }\n    },\n    [onCurrencySelection, setApprovalSubmitted, checkForWarning]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      setHasPoppedModal(false)\n      setInterruptRedirectCountdown(false)\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      if (outputCurrency.symbol === 'SYRUP') {\n        checkForWarning(outputCurrency.symbol, 'Buying')\n      }\n      if (outputCurrency.symbol === 'SAFEMOON') {\n        checkForWarning(outputCurrency.symbol, 'Buying')\n      }\n    },\n    [onCurrencySelection, checkForWarning]\n  )\n\n  return (\n    <Container>\n      <SyrupWarningModal\n        isOpen={transactionWarning.selectedToken === 'SYRUP'}\n        transactionType={transactionWarning.purchaseType}\n        onConfirm={handleConfirmWarning}\n      />\n      <SafeMoonWarningModal isOpen={transactionWarning.selectedToken === 'SAFEMOON'} onConfirm={handleConfirmWarning} />\n      <AppBody>\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n          <PageHeader\n            title={TranslateString(100, 'Electrik - Swap')}\n            description={TranslateString(1192, 'Play your part in building a better future')}\n          />\n          <CardBody>\n            <AutoColumn gap=\"lg\">\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT && !showWrap && trade\n                    ? TranslateString(194, 'From (estimated)')\n                    : TranslateString(76, 'From')\n                }\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n              <AutoColumn justify=\"space-between\">\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable>\n                    <IconButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      style={{ borderRadius: '50%' }}\n                      scale=\"sm\"\n                    >\n                      <ArrowDownIcon color=\"primary\" width=\"24px\" />\n                    </IconButton>\n                  </ArrowWrapper>\n                  {recipient === null && !showWrap && isExpertMode ? (\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                      + Add a send (optional)\n                    </LinkStyledButton>\n                  ) : null}\n                </AutoRow>\n              </AutoColumn>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT && !showWrap && trade\n                    ? TranslateString(196, 'To (estimated)')\n                    : TranslateString(80, 'To')\n                }\n                showMaxButton={false}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                id=\"swap-currency-output\"\n              />\n              {recipient !== null && !showWrap ? (\n                <>\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                    <ArrowWrapper clickable={false}>\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                    </ArrowWrapper>\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                      - Remove send\n                    </LinkStyledButton>\n                  </AutoRow>\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                </>\n              ) : null}\n\n              {showWrap ? null : (\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"18px\">\n                  <AutoColumn gap=\"4px\">\n                    {Boolean(trade) && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"20px\">{TranslateString(1182, 'Price')}</Text>\n                        <TradePrice\n                          price={trade?.executionPrice}\n                          showInverted={showInverted}\n                          setShowInverted={setShowInverted}\n                        />\n                      </RowBetween>\n                    )}\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"18px\">{TranslateString(88, 'Slippage Tolerance')}</Text>\n                        <Text fontSize=\"18px\">{allowedSlippage / 100}%</Text>\n                      </RowBetween>\n                    )}\n                  </AutoColumn>\n                </Card>\n              )}\n            </AutoColumn>\n          </CardBody>\n          <CardBody>\n            <UnlockButton />\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </Container>\n  )\n}\n\nexport default Swap\n","/Users/cj/Desktop/swap-attempts/swap2/src/pages/RemoveLiquidity/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/application/reducer.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/transactions/reducer.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/lists/reducer.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/multicall/reducer.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/theme.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/global/actions.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/swap/reducer.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/user/reducer.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/mint/reducer.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/burn/reducer.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/index.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/contenthashToUri.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/parseENSAddress.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/uriToHttp.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/constants/lists.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/connectors/index.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/constants/multicall/index.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useToast.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/VersionBar/index.tsx",[],["818","819","820","821","822"],"/Users/cj/Desktop/swap-attempts/swap2/src/state/burn/hooks.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/burn/actions.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/Pool/styleds.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/AddLiquidity/PoolPriceBar.tsx",[],["823","824","825","826","827"],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/AppBody.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/user/hooks.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/styleds.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/toasts/index.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/swap/actions.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/mint/actions.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/user/actions.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/connectors/NetworkConnector.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useI18n.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/wrappedCurrency.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/swap/hooks.ts",["828"],"import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap-libs/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from '../../hooks/useENS'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport { isAddress } from '../../utils'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\n\nimport { useUserSlippageTolerance } from '../user/hooks'\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        })\n      )\n    },\n    [dispatch]\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.info(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0xBCfCcbde45cE874adCB698cC183deBcF17952812', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = 'Connect Wallet'\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? 'Enter an amount'\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? 'Select a token'\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? 'Enter a recipient'\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? 'Invalid recipient'\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = `Insufficient ${amountIn.currency.symbol} balance`\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    console.log(valid)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter('0x34ef48fa753902c47e7a5f6733be94126d14d762')\n  let outputCurrency = parseCurrencyFromURLParameter('')\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: parsed.recipient,\n      })\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","/Users/cj/Desktop/swap-attempts/swap2/src/state/wallet/hooks.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/Tokens.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/data/Reserves.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/data/TotalSupply.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/actions.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/multicall/hooks.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/prices.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/V2ExchangeRedirectModal/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/ConnectWalletButton/index.tsx",["829","830"],"import React from 'react'\nimport { Button, ButtonProps, useWalletModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useAuth from 'hooks/useAuth'\nimport { useActiveWeb3React } from 'hooks'\nimport styled from 'styled-components'\nimport useGetLocalProfile from 'hooks/useGetLocalProfile'\n\nconst UnlockButton: React.FC<ButtonProps> = (props) => {\n  const profile = useGetLocalProfile()\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n  const { account, chainId } = useActiveWeb3React()\n\n  const Address = styled.div`\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    border: 0;\n    border-radius: 16px;\n    box-shadow: 0px -1px 0px 0px rgb(14 14 44 / 40%) inset;\n    cursor: pointer;\n    display: -webkit-inline-box;\n    display: -webkit-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    font-family: inherit;\n    font-size: 16px;\n    font-weight: 600;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    -webkit-letter-spacing: 0.03em;\n    -moz-letter-spacing: 0.03em;\n    -ms-letter-spacing: 0.03em;\n    letter-spacing: 0.03em;\n    line-height: 1;\n    opacity: 1;\n    outline: 0;\n    -webkit-transition: background-color 0.2s, opacity 0.2s;\n    transition: background-color 0.2s, opacity 0.2s;\n    height: 48px;\n    padding: 0 24px;\n    background-color: #4287f5;\n    color: white;\n    float: right;\n)\n  `\n  const ConnectedButton = styled.div`\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    border: 0;\n    border-radius: 16px;\n    box-shadow: 0px -1px 0px 0px rgb(14 14 44 / 40%) inset;\n    cursor: pointer;\n    display: -webkit-inline-box;\n    display: -webkit-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    font-family: inherit;\n    font-size: 16px;\n    font-weight: 600;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    -webkit-letter-spacing: 0.03em;\n    -moz-letter-spacing: 0.03em;\n    -ms-letter-spacing: 0.03em;\n    letter-spacing: 0.03em;\n    line-height: 1;\n    opacity: 1;\n    outline: 0;\n    -webkit-transition: background-color 0.2s, opacity 0.2s;\n    transition: background-color 0.2s, opacity 0.2s;\n    height: 48px;\n    padding: 0 24px;\n    background-color: #4287f5;\n    color: white;\n  `\n  const WalletLogo = styled.div`\n    background-image: url('/images/wallet-outline.png');\n    line-height: 1;\n\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    display: -webkit-inline-box;\n    display: -webkit-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n\n    transform: scale(0.66);\n    float: left;\n    padding: 0 24px;\n  `\n  return (\n    <>\n      {!account && (\n        <Button onClick={onPresentConnectModal} {...props}>\n          {TranslateString(292, 'Unlock Wallet')}\n        </Button>\n      )}\n      {account && chainId && (\n        <>\n          <ConnectedButton>{TranslateString(292, 'Connected')}</ConnectedButton>\n          <Address>\n            {account.substring(0, 6)}....{account.substring(38, 42)}\n          </Address>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default UnlockButton\n","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useParsedQueryString.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/Trades.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/lists/hooks.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useENS.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Row/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/translateTextHelpers.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/CurrencyLogo/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Column/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useENSName.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/pancake/CoinLogo.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useHttpLocations.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useAuth.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/isZero.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useENSContentHash.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Logo/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useENSAddress.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useApproveCallback.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/useDebouncedChangeHandler.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/currencyId.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/transactions/hooks.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Container.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/data/Allowances.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/FAQ.tsx",["831"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Card, CardHeader, CardBody, Image } from '@pancakeswap-libs/uikit'\nimport FoldableText from 'components/FoldableText'\nimport Container from 'components/Container'\nimport useI18n from 'hooks/useI18n'\nimport config from './config'\n\nconst Wrapper = styled(Container)`\n  background: ${({ theme }) => theme.colors.gradients.violetAlt};\n`\n\nconst FAQ = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <Heading as=\"h2\" size=\"xl\" color=\"secondary\" mb=\"24px\">\n        Learn more\n      </Heading>\n      <Text bold mb=\"24px\">\n        Here’s what you need to know about the PancakeSwap LP Token Migration.\n      </Text>\n      <Card>\n        <CardHeader>\n          <Text fontSize=\"24px\" color=\"secondary\" bold>\n            FAQ\n          </Text>\n        </CardHeader>\n        <CardBody>\n          {config.map(({ title, description }) => (\n            <FoldableText\n              key={title.fallback}\n              id={title.fallback}\n              mb=\"24px\"\n              title={TranslateString(title.id, title.fallback)}\n            >\n              {description.map(({ id, fallback }) => {\n                return (\n                  <Text key={fallback} color=\"textSubtle\" as=\"p\">\n                    {TranslateString(id, fallback)}\n                  </Text>\n                )\n              })}\n            </FoldableText>\n          ))}\n        </CardBody>\n      </Card>\n    </Wrapper>\n  )\n}\n\nexport default FAQ\n","/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/SecondCard.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/FirstCard.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Shared/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Slider/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/NavigationTabs/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/DoubleLogo/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/PositionCard/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/maxAmountSpend.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useWrapCallback.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useSwapCallback.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/CurrencyInputPanel/index.tsx",["832"],"import React, { useState, useCallback } from 'react'\nimport { Currency, Pair } from '@pancakeswap-libs/sdk'\nimport { Button, ChevronDownIcon, Text } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\nimport useI18n from 'hooks/useI18n'\nimport CurrencyList from 'components/SearchModal/CurrencyList'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport CurrencyLogo from '../CurrencyLogo'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { RowBetween } from '../Row'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport { useActiveWeb3React } from '../../hooks'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelect = styled.button<{ selected: boolean }>`\n  align-items: center;\n  height: 34px;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0 0.5rem;\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\n  }\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\n  }\n`\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect?: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  /*\n \"name\": \"Electrik\",\n      \"symbol\": \"ELTRK\",\n      \"address\": \"0x34ef48fa753902c47e7a5f6733be94126d14d762\",\n      \"chainId\": 56,\n      \"decimals\": 18,\n      \"logoURI\": \"https://i.ibb.co/7pgDwkJ/Electrik-Logo-01.png\"\n\n  */\n  //    protected constructor(decimals: number, symbol?: string, name?: string);\n\n  const [modalOpen, setModalOpen] = useState(false)\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const TranslateString = useI18n()\n  const translatedLabel = label || TranslateString(132, 'Input')\n  const handleDismissSearch = useCallback(() => {\n    setModalOpen(false)\n  }, [setModalOpen])\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? `Balance: ${selectedCurrencyBalance?.toSignificant(6)}`\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelect\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                setModalOpen(true)\n              }\n            }}\n          >\n            <Aligner>\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length\n                      )}`\n                    : currency?.symbol) || TranslateString(1196, 'Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Aligner>\n          </CurrencySelect>\n        </InputRow>\n      </Container>\n      {!disableCurrencySelect && onCurrencySelect && (\n        <CurrencySearchModal\n          isOpen={modalOpen}\n          onDismiss={handleDismissSearch}\n          onCurrencySelect={onCurrencySelect}\n          selectedCurrency={currency}\n          otherSelectedCurrency={otherCurrency}\n          showCommonBases={showCommonBases}\n        />\n      )}\n    </InputPanel>\n  )\n}\n","/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/confirmPriceImpactWithoutFee.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/TradePrice.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Popups/PopupItem.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/AdvancedSwapDetailsDropdown.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/ConfirmSwapModal.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/state/mint/hooks.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useGetLocalProfile.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useTheme.ts",[],["833","834","835","836","837"],"/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/config.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Shared/Common.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Loader/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/ProgressSteps/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/SafeMoonWarningModal/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/ConfirmationModalContent.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/TransactionConfirmationModal.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/ConfirmationPendingContent.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/TransactionErrorContent.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/TransactionSubmittedContent.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/TokenWarningModal/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/SyrupWarningModal/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/CurrencySearchModal.tsx",["838","839"],"import { Currency } from '@pancakeswap-libs/sdk'\nimport { Token } from 'graphql'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport useLast from '../../hooks/useLast'\nimport { useSelectedListUrl } from '../../state/lists/hooks'\nimport Modal from '../Modal'\nimport { CurrencySearch } from './CurrencySearch'\nimport { ListSelect } from './ListSelect'\n\ninterface CurrencySearchModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  // eslint-disable-next-line react/no-unused-prop-types\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [listView, setListView] = useState<boolean>(false)\n  const lastOpen = useLast(isOpen)\n\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false)\n    }\n  }, [isOpen, lastOpen])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n      console.log(currency)\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  const handleClickChangeList = useCallback(() => {\n    setListView(true)\n  }, [])\n  const handleClickBack = useCallback(() => {\n    setListView(false)\n  }, [])\n\n  const selectedListUrl = useSelectedListUrl()\n  const noListSelected = !selectedListUrl\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\n      {listView ? (\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\n      ) : noListSelected ? (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={false}\n        />\n      ) : (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={false}\n        />\n      )}\n    </Modal>\n  )\n}\n","/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useLast.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/CardNav/index.tsx",["840","841","842","843","844","845"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledNav = styled.div`\n  margin-bottom: 40px;\n`\n\nfunction Nav({ activeIndex = 0 }: { activeIndex?: number }) {\n  const TranslateString = useI18n()\n  return <div />\n}\n\nexport default Nav\n","/Users/cj/Desktop/swap-attempts/swap2/src/components/Card/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/AddressInputPanel/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Pane/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Popups/ListUpdatePopup.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Popups/TransactionPopup.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/AdvancedSwapDetails.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/SwapModalFooter.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/SwapModalHeader.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/QuestionHelper/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/SettingsModal.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/RecentTransactionsModal.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/NumericalInput/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/helpers.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/utils/listVersionLabel.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/CurrencySearch.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/ListSelect.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/FormattedPriceImpact.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/swap/SwapRoute.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/FoldableText/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/SlippageToleranceSetting.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/AudioSetting.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/PageHeader/TransactionDeadlineSetting.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Modal/index.tsx",["846"],"import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { animated, useTransition } from 'react-spring'\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\nimport { isMobile } from 'react-device-detect'\nimport '@reach/dialog/styles.css'\nimport { transparentize } from 'polished'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 5;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog',\n})`\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    padding: 0px;\n    width: 80%;\n    overflow: hidden;\n    color: #fff\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    max-width: 420px;\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 20px;\n\n    ${({ theme }) => theme.mediaQueries.lg} {\n      width: 65vw;\n      color: #000000;\n    }\n    ${({ theme }) => theme.mediaQueries.sm} {\n      width: 85vw;\n      background-color: #334a52;\n      color: #000000\n    }\n  }\n`\n\ninterface ModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  initialFocusRef?: React.RefObject<any>\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 50,\n  initialFocusRef,\n  children,\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogOverlay key={key} style={props} onDismiss={onDismiss} initialFocusRef={initialFocusRef}>\n              <StyledDialogContent\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                mobile={isMobile}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {/* eslint-disable */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {/* eslint-enable */}\n                {children}\n              </StyledDialogContent>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n","/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/filtering.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/sorting.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useToggle.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/CurrencyList.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/SortButton.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/CommonBases.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/SearchModal/styleds.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useOnClickOutside.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Tooltip/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/ListLogo/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Popover/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Menu/index.tsx",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/Menu/config.ts",[],"/Users/cj/Desktop/swap-attempts/swap2/src/components/NavBar/NavBar.tsx",["847","848","849","850","851","852","853"],"import UnlockButton from 'components/ConnectWalletButton'\nimport useAuth from 'hooks/useAuth'\nimport React from 'react'\nimport styled from 'styled-components'\nimport './style.css'\nimport useGetLocalProfile from 'hooks/useGetLocalProfile'\nimport { useWeb3React } from '@web3-react/core'\nimport { HeaderType } from '@pancakeswap-libs/uikit'\nimport logo from '../../images/electrik-logo.png'\n\nconst NavBar = () => {\n  const { login, logout } = useAuth()\n  const { account } = useWeb3React()\n\n  return (\n    <div className=\"background\">\n      <img alt=\"logo\" className=\"logo\" src={logo} />\n      {/* <div className=\"unlock\">\n        <UnlockButton />\n      </div> */}\n      {/* <div className=\"account\">{account as string}</div> */}\n    </div>\n  )\n}\n\nexport default NavBar\n",["854","855","856","857","858"],{"ruleId":"859","severity":1,"message":"860","line":16,"column":7,"nodeType":"861","messageId":"862","endLine":16,"endColumn":11},{"ruleId":"863","replacedBy":"864"},{"ruleId":"865","replacedBy":"866"},{"ruleId":"867","replacedBy":"868"},{"ruleId":"869","replacedBy":"870"},{"ruleId":"871","replacedBy":"872"},{"ruleId":"873","severity":1,"message":"874","line":2,"column":8,"nodeType":"875","messageId":"876","endLine":2,"endColumn":14},{"ruleId":"873","severity":1,"message":"877","line":6,"column":20,"nodeType":"875","messageId":"876","endLine":6,"endColumn":28},{"ruleId":"873","severity":1,"message":"878","line":7,"column":8,"nodeType":"875","messageId":"876","endLine":7,"endColumn":18},{"ruleId":"873","severity":1,"message":"879","line":22,"column":8,"nodeType":"875","messageId":"876","endLine":22,"endColumn":26},{"ruleId":"873","severity":1,"message":"880","line":24,"column":8,"nodeType":"875","messageId":"876","endLine":24,"endColumn":12},{"ruleId":"873","severity":1,"message":"881","line":43,"column":7,"nodeType":"875","messageId":"876","endLine":43,"endColumn":18},{"ruleId":"873","severity":1,"message":"882","line":5,"column":11,"nodeType":"875","messageId":"876","endLine":5,"endColumn":19},{"ruleId":"873","severity":1,"message":"883","line":8,"column":15,"nodeType":"875","messageId":"876","endLine":8,"endColumn":23},{"ruleId":"873","severity":1,"message":"884","line":5,"column":8,"nodeType":"875","messageId":"876","endLine":5,"endColumn":15},{"ruleId":"873","severity":1,"message":"885","line":5,"column":10,"nodeType":"875","messageId":"876","endLine":5,"endColumn":16},{"ruleId":"873","severity":1,"message":"884","line":10,"column":8,"nodeType":"875","messageId":"876","endLine":10,"endColumn":15},{"ruleId":"873","severity":1,"message":"886","line":15,"column":15,"nodeType":"875","messageId":"876","endLine":15,"endColumn":25},{"ruleId":"873","severity":1,"message":"887","line":20,"column":10,"nodeType":"875","messageId":"876","endLine":20,"endColumn":23},{"ruleId":"873","severity":1,"message":"888","line":32,"column":8,"nodeType":"875","messageId":"876","endLine":32,"endColumn":27},{"ruleId":"873","severity":1,"message":"889","line":35,"column":10,"nodeType":"875","messageId":"876","endLine":35,"endColumn":14},{"ruleId":"873","severity":1,"message":"890","line":37,"column":10,"nodeType":"875","messageId":"876","endLine":37,"endColumn":22},{"ruleId":"873","severity":1,"message":"891","line":56,"column":9,"nodeType":"875","messageId":"876","endLine":56,"endColumn":19},{"ruleId":"873","severity":1,"message":"892","line":75,"column":9,"nodeType":"875","messageId":"876","endLine":75,"endColumn":16},{"ruleId":"873","severity":1,"message":"893","line":114,"column":10,"nodeType":"875","messageId":"876","endLine":114,"endColumn":19},{"ruleId":"873","severity":1,"message":"894","line":114,"column":21,"nodeType":"875","messageId":"876","endLine":114,"endColumn":37},{"ruleId":"873","severity":1,"message":"895","line":115,"column":10,"nodeType":"875","messageId":"876","endLine":115,"endColumn":19},{"ruleId":"873","severity":1,"message":"896","line":115,"column":21,"nodeType":"875","messageId":"876","endLine":115,"endColumn":37},{"ruleId":"873","severity":1,"message":"885","line":4,"column":35,"nodeType":"875","messageId":"876","endLine":4,"endColumn":41},{"ruleId":"873","severity":1,"message":"897","line":4,"column":77,"nodeType":"875","messageId":"876","endLine":4,"endColumn":81},{"ruleId":"873","severity":1,"message":"898","line":7,"column":16,"nodeType":"875","messageId":"876","endLine":7,"endColumn":24},{"ruleId":"873","severity":1,"message":"884","line":11,"column":8,"nodeType":"875","messageId":"876","endLine":11,"endColumn":15},{"ruleId":"873","severity":1,"message":"899","line":15,"column":24,"nodeType":"875","messageId":"876","endLine":15,"endColumn":38},{"ruleId":"873","severity":1,"message":"900","line":15,"column":40,"nodeType":"875","messageId":"876","endLine":15,"endColumn":57},{"ruleId":"873","severity":1,"message":"901","line":17,"column":8,"nodeType":"875","messageId":"876","endLine":17,"endColumn":25},{"ruleId":"873","severity":1,"message":"902","line":20,"column":8,"nodeType":"875","messageId":"876","endLine":20,"endColumn":21},{"ruleId":"873","severity":1,"message":"903","line":35,"column":8,"nodeType":"875","messageId":"876","endLine":35,"endColumn":14},{"ruleId":"873","severity":1,"message":"904","line":40,"column":8,"nodeType":"875","messageId":"876","endLine":40,"endColumn":20},{"ruleId":"873","severity":1,"message":"905","line":43,"column":7,"nodeType":"875","messageId":"876","endLine":43,"endColumn":17},{"ruleId":"873","severity":1,"message":"906","line":52,"column":10,"nodeType":"875","messageId":"876","endLine":52,"endColumn":21},{"ruleId":"873","severity":1,"message":"907","line":66,"column":10,"nodeType":"875","messageId":"876","endLine":66,"endColumn":29},{"ruleId":"873","severity":1,"message":"908","line":74,"column":9,"nodeType":"875","messageId":"876","endLine":74,"endColumn":33},{"ruleId":"873","severity":1,"message":"909","line":78,"column":9,"nodeType":"875","messageId":"876","endLine":78,"endColumn":34},{"ruleId":"873","severity":1,"message":"910","line":89,"column":11,"nodeType":"875","messageId":"876","endLine":89,"endColumn":18},{"ruleId":"873","severity":1,"message":"911","line":103,"column":14,"nodeType":"875","messageId":"876","endLine":103,"endColumn":20},{"ruleId":"873","severity":1,"message":"912","line":104,"column":17,"nodeType":"875","messageId":"876","endLine":104,"endColumn":31},{"ruleId":"873","severity":1,"message":"892","line":169,"column":9,"nodeType":"875","messageId":"876","endLine":169,"endColumn":16},{"ruleId":"873","severity":1,"message":"913","line":208,"column":9,"nodeType":"875","messageId":"876","endLine":208,"endColumn":36},{"ruleId":"873","severity":1,"message":"914","line":211,"column":9,"nodeType":"875","messageId":"876","endLine":211,"endColumn":16},{"ruleId":"873","severity":1,"message":"915","line":214,"column":20,"nodeType":"875","messageId":"876","endLine":214,"endColumn":35},{"ruleId":"873","severity":1,"message":"916","line":230,"column":42,"nodeType":"875","messageId":"876","endLine":230,"endColumn":59},{"ruleId":"873","severity":1,"message":"917","line":274,"column":9,"nodeType":"875","messageId":"876","endLine":274,"endColumn":24},{"ruleId":"863","replacedBy":"918"},{"ruleId":"865","replacedBy":"919"},{"ruleId":"867","replacedBy":"920"},{"ruleId":"869","replacedBy":"921"},{"ruleId":"871","replacedBy":"922"},{"ruleId":"863","replacedBy":"923"},{"ruleId":"865","replacedBy":"924"},{"ruleId":"867","replacedBy":"925"},{"ruleId":"869","replacedBy":"926"},{"ruleId":"871","replacedBy":"927"},{"ruleId":"928","severity":1,"message":"929","line":203,"column":5,"nodeType":"930","messageId":"862","endLine":203,"endColumn":16},{"ruleId":"873","severity":1,"message":"931","line":10,"column":9,"nodeType":"875","messageId":"876","endLine":10,"endColumn":16},{"ruleId":"873","severity":1,"message":"932","line":86,"column":9,"nodeType":"875","messageId":"876","endLine":86,"endColumn":19},{"ruleId":"873","severity":1,"message":"933","line":3,"column":53,"nodeType":"875","messageId":"876","endLine":3,"endColumn":58},{"ruleId":"873","severity":1,"message":"934","line":7,"column":8,"nodeType":"875","messageId":"876","endLine":7,"endColumn":20},{"ruleId":"863","replacedBy":"935"},{"ruleId":"865","replacedBy":"936"},{"ruleId":"867","replacedBy":"937"},{"ruleId":"869","replacedBy":"938"},{"ruleId":"871","replacedBy":"939"},{"ruleId":"873","severity":1,"message":"940","line":2,"column":10,"nodeType":"875","messageId":"876","endLine":2,"endColumn":15},{"ruleId":"928","severity":1,"message":"929","line":40,"column":7,"nodeType":"930","messageId":"862","endLine":40,"endColumn":18},{"ruleId":"873","severity":1,"message":"941","line":3,"column":10,"nodeType":"875","messageId":"876","endLine":3,"endColumn":14},{"ruleId":"873","severity":1,"message":"942","line":4,"column":10,"nodeType":"875","messageId":"876","endLine":4,"endColumn":20},{"ruleId":"873","severity":1,"message":"943","line":4,"column":22,"nodeType":"875","messageId":"876","endLine":4,"endColumn":36},{"ruleId":"873","severity":1,"message":"944","line":7,"column":7,"nodeType":"875","messageId":"876","endLine":7,"endColumn":16},{"ruleId":"873","severity":1,"message":"945","line":11,"column":16,"nodeType":"875","messageId":"876","endLine":11,"endColumn":27},{"ruleId":"873","severity":1,"message":"946","line":12,"column":9,"nodeType":"875","messageId":"876","endLine":12,"endColumn":24},{"ruleId":"873","severity":1,"message":"947","line":7,"column":10,"nodeType":"875","messageId":"876","endLine":7,"endColumn":24},{"ruleId":"873","severity":1,"message":"948","line":1,"column":8,"nodeType":"875","messageId":"876","endLine":1,"endColumn":20},{"ruleId":"873","severity":1,"message":"949","line":4,"column":8,"nodeType":"875","messageId":"876","endLine":4,"endColumn":14},{"ruleId":"873","severity":1,"message":"950","line":6,"column":8,"nodeType":"875","messageId":"876","endLine":6,"endColumn":26},{"ruleId":"873","severity":1,"message":"951","line":8,"column":10,"nodeType":"875","messageId":"876","endLine":8,"endColumn":20},{"ruleId":"873","severity":1,"message":"952","line":12,"column":11,"nodeType":"875","messageId":"876","endLine":12,"endColumn":16},{"ruleId":"873","severity":1,"message":"953","line":12,"column":18,"nodeType":"875","messageId":"876","endLine":12,"endColumn":24},{"ruleId":"873","severity":1,"message":"910","line":13,"column":11,"nodeType":"875","messageId":"876","endLine":13,"endColumn":18},{"ruleId":"863","replacedBy":"954"},{"ruleId":"865","replacedBy":"955"},{"ruleId":"867","replacedBy":"956"},{"ruleId":"869","replacedBy":"957"},{"ruleId":"871","replacedBy":"958"},"no-constant-condition","Unexpected constant condition.","Literal","unexpected","lines-around-directive",["959"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'useModal' is defined but never used.","'VersionBar' is defined but never used.","'UseV2ExchangeModal' is defined but never used.","'Menu' is defined but never used.","'BodyWrapper' is assigned a value but never used.","'menuBase' is defined but never used.","'svgProps' is defined but never used.","'CardNav' is defined but never used.","'Button' is defined but never used.","'RowBetween' is defined but never used.","'ApprovalState' is defined but never used.","'ConnectWalletButton' is defined but never used.","'Dots' is defined but never used.","'PoolPriceBar' is defined but never used.","'expertMode' is assigned a value but never used.","'isValid' is assigned a value but never used.","'approvalA' is assigned a value but never used.","'approveACallback' is assigned a value but never used.","'approvalB' is assigned a value but never used.","'approveBCallback' is assigned a value but never used.","'Flex' is defined but never used.","'GreyCard' is defined but never used.","'BottomGrouping' is defined but never used.","'SwapCallbackError' is defined but never used.","'TokenWarningModal' is defined but never used.","'ProgressSteps' is defined but never used.","'Loader' is defined but never used.","'getTokenList' is defined but never used.","'StyledLink' is assigned a value but never used.","'disableSwap' is assigned a value but never used.","'dismissTokenWarning' is assigned a value but never used.","'urlLoadedTokens' is assigned a value but never used.","'handleConfirmTokenWarning' is assigned a value but never used.","'account' is assigned a value but never used.","'onWrap' is assigned a value but never used.","'wrapInputError' is assigned a value but never used.","'userHasSpecifiedInputOutput' is assigned a value but never used.","'noRoute' is assigned a value but never used.","'approveCallback' is assigned a value but never used.","'swapCallbackError' is assigned a value but never used.","'showApproveFlow' is assigned a value but never used.",["959"],[],[],[],[],["959"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","'profile' is assigned a value but never used.","'WalletLogo' is assigned a value but never used.","'Image' is defined but never used.","'CurrencyList' is defined but never used.",["959"],[],[],[],[],"'Token' is defined but never used.","'Link' is defined but never used.","'ButtonMenu' is defined but never used.","'ButtonMenuItem' is defined but never used.","'StyledNav' is assigned a value but never used.","'activeIndex' is assigned a value but never used.","'TranslateString' is assigned a value but never used.","'transparentize' is defined but never used.","'UnlockButton' is defined but never used.","'styled' is defined but never used.","'useGetLocalProfile' is defined but never used.","'HeaderType' is defined but never used.","'login' is assigned a value but never used.","'logout' is assigned a value but never used.",["959"],[],[],[],[],"padding-line-between-statements"]
{"ast":null,"code":"/*! @name m3u8-parser @version 4.7.0 @license Apache-2.0 */\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\nvar TAB = String.fromCharCode(0x09);\n\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\n\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n      targetDuration = manifest.targetDuration,\n      partTargetDuration = manifest.partTargetDuration;\n\n  if (!serverControl) {\n    return;\n  }\n\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var hasParts = false;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n\n    _this.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      _this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this2 = this;\n\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this2.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n    var missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n  ;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/node_modules/m3u8-parser/dist/m3u8-parser.es.js"],"names":["_inheritsLoose","Stream","_extends","_assertThisInitialized","decodeB64ToUint8Array","LineStream","_Stream","_this","call","buffer","_proto","prototype","push","data","nextNewline","indexOf","trigger","substring","TAB","String","fromCharCode","parseByterange","byterangeString","match","exec","result","length","parseInt","offset","attributeSeparator","key","value","keyvalue","RegExp","parseAttributes","attributes","attrs","split","i","attr","slice","replace","ParseStream","customParsers","tagMappers","line","_this2","event","trim","type","uri","newLines","reduce","acc","mapper","mappedLine","concat","forEach","newLine","text","tagType","duration","parseFloat","title","version","number","playlistType","allowed","test","URI","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","hasOwnProperty","subkey","addParser","_ref","_this3","expression","customType","dataParser","segment","addTagMapper","_ref2","map","mapFn","camelCase","str","a","toUpperCase","camelCaseKeys","Object","keys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","message","Parser","lineStream","parseStream","pipe","self","uris","currentUri","currentMap","_key","hasParts","noop","defaultMediaGroups","widevineUuid","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","on","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","VALID_METHODS","KEYID","schemeIdUri","keyId","pssh","method","iv","isFinite","playlist","streamInf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","programDateTime","targetduration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","part","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","preloadHint","hint","isPart","index","otherHint","renditionReport","report","required","partInf","partTarget","comment","custom","identifier","missing","join","chunk","end","options"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,sCAA3B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,sBAAP,MAAmC,8CAAnC;AACA,OAAOC,qBAAP,MAAkC,oDAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,UAAU,GAAG,aAAa,UAAUC,OAAV,EAAmB;AAC/CN,EAAAA,cAAc,CAACK,UAAD,EAAaC,OAAb,CAAd;;AAEA,WAASD,UAAT,GAAsB;AACpB,QAAIE,KAAJ;;AAEAA,IAAAA,KAAK,GAAGD,OAAO,CAACE,IAAR,CAAa,IAAb,KAAsB,IAA9B;AACAD,IAAAA,KAAK,CAACE,MAAN,GAAe,EAAf;AACA,WAAOF,KAAP;AACD;AACD;AACF;AACA;AACA;AACA;;;AAGE,MAAIG,MAAM,GAAGL,UAAU,CAACM,SAAxB;;AAEAD,EAAAA,MAAM,CAACE,IAAP,GAAc,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAChC,QAAIC,WAAJ;AACA,SAAKL,MAAL,IAAeI,IAAf;AACAC,IAAAA,WAAW,GAAG,KAAKL,MAAL,CAAYM,OAAZ,CAAoB,IAApB,CAAd;;AAEA,WAAOD,WAAW,GAAG,CAAC,CAAtB,EAAyBA,WAAW,GAAG,KAAKL,MAAL,CAAYM,OAAZ,CAAoB,IAApB,CAAvC,EAAkE;AAChE,WAAKC,OAAL,CAAa,MAAb,EAAqB,KAAKP,MAAL,CAAYQ,SAAZ,CAAsB,CAAtB,EAAyBH,WAAzB,CAArB;AACA,WAAKL,MAAL,GAAc,KAAKA,MAAL,CAAYQ,SAAZ,CAAsBH,WAAW,GAAG,CAApC,CAAd;AACD;AACF,GATD;;AAWA,SAAOT,UAAP;AACD,CA/B6B,CA+B5BJ,MA/B4B,CAA9B;;AAiCA,IAAIiB,GAAG,GAAGC,MAAM,CAACC,YAAP,CAAoB,IAApB,CAAV;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,eAAxB,EAAyC;AAC5D;AACA;AACA,MAAIC,KAAK,GAAG,yBAAyBC,IAAzB,CAA8BF,eAAe,IAAI,EAAjD,CAAZ;AACA,MAAIG,MAAM,GAAG,EAAb;;AAEA,MAAIF,KAAK,CAAC,CAAD,CAAT,EAAc;AACZE,IAAAA,MAAM,CAACC,MAAP,GAAgBC,QAAQ,CAACJ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAxB;AACD;;AAED,MAAIA,KAAK,CAAC,CAAD,CAAT,EAAc;AACZE,IAAAA,MAAM,CAACG,MAAP,GAAgBD,QAAQ,CAACJ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAxB;AACD;;AAED,SAAOE,MAAP;AACD,CAfD;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAII,kBAAkB,GAAG,SAASA,kBAAT,GAA8B;AACrD,MAAIC,GAAG,GAAG,OAAV;AACA,MAAIC,KAAK,GAAG,eAAZ;AACA,MAAIC,QAAQ,GAAG,QAAQF,GAAR,GAAc,OAAd,GAAwBC,KAAxB,GAAgC,GAA/C;AACA,SAAO,IAAIE,MAAJ,CAAW,aAAaD,QAAb,GAAwB,GAAnC,CAAP;AACD,CALD;AAMA;AACA;AACA;AACA;AACA;;;AAGA,IAAIE,eAAe,GAAG,SAASA,eAAT,CAAyBC,UAAzB,EAAqC;AACzD;AACA,MAAIC,KAAK,GAAGD,UAAU,CAACE,KAAX,CAAiBR,kBAAkB,EAAnC,CAAZ;AACA,MAAIJ,MAAM,GAAG,EAAb;AACA,MAAIa,CAAC,GAAGF,KAAK,CAACV,MAAd;AACA,MAAIa,IAAJ;;AAEA,SAAOD,CAAC,EAAR,EAAY;AACV;AACA,QAAIF,KAAK,CAACE,CAAD,CAAL,KAAa,EAAjB,EAAqB;AACnB;AACD,KAJS,CAIR;;;AAGFC,IAAAA,IAAI,GAAG,eAAef,IAAf,CAAoBY,KAAK,CAACE,CAAD,CAAzB,EAA8BE,KAA9B,CAAoC,CAApC,CAAP,CAPU,CAOqC;;AAE/CD,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQE,OAAR,CAAgB,YAAhB,EAA8B,EAA9B,CAAV;AACAF,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQE,OAAR,CAAgB,YAAhB,EAA8B,EAA9B,CAAV;AACAF,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQE,OAAR,CAAgB,iBAAhB,EAAmC,IAAnC,CAAV;AACAhB,IAAAA,MAAM,CAACc,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkBA,IAAI,CAAC,CAAD,CAAtB;AACD;;AAED,SAAOd,MAAP;AACD,CAvBD;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIiB,WAAW,GAAG,aAAa,UAAUpC,OAAV,EAAmB;AAChDN,EAAAA,cAAc,CAAC0C,WAAD,EAAcpC,OAAd,CAAd;;AAEA,WAASoC,WAAT,GAAuB;AACrB,QAAInC,KAAJ;;AAEAA,IAAAA,KAAK,GAAGD,OAAO,CAACE,IAAR,CAAa,IAAb,KAAsB,IAA9B;AACAD,IAAAA,KAAK,CAACoC,aAAN,GAAsB,EAAtB;AACApC,IAAAA,KAAK,CAACqC,UAAN,GAAmB,EAAnB;AACA,WAAOrC,KAAP;AACD;AACD;AACF;AACA;AACA;AACA;;;AAGE,MAAIG,MAAM,GAAGgC,WAAW,CAAC/B,SAAzB;;AAEAD,EAAAA,MAAM,CAACE,IAAP,GAAc,SAASA,IAAT,CAAciC,IAAd,EAAoB;AAChC,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAIvB,KAAJ;AACA,QAAIwB,KAAJ,CAJgC,CAIrB;;AAEXF,IAAAA,IAAI,GAAGA,IAAI,CAACG,IAAL,EAAP;;AAEA,QAAIH,IAAI,CAACnB,MAAL,KAAgB,CAApB,EAAuB;AACrB;AACA;AACD,KAX+B,CAW9B;;;AAGF,QAAImB,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACnB,WAAK7B,OAAL,CAAa,MAAb,EAAqB;AACnBiC,QAAAA,IAAI,EAAE,KADa;AAEnBC,QAAAA,GAAG,EAAEL;AAFc,OAArB;AAIA;AACD,KApB+B,CAoB9B;;;AAGF,QAAIM,QAAQ,GAAG,KAAKP,UAAL,CAAgBQ,MAAhB,CAAuB,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAC3D,UAAIC,UAAU,GAAGD,MAAM,CAACT,IAAD,CAAvB,CAD2D,CAC5B;;AAE/B,UAAIU,UAAU,KAAKV,IAAnB,EAAyB;AACvB,eAAOQ,GAAP;AACD;;AAED,aAAOA,GAAG,CAACG,MAAJ,CAAW,CAACD,UAAD,CAAX,CAAP;AACD,KARc,EAQZ,CAACV,IAAD,CARY,CAAf;AASAM,IAAAA,QAAQ,CAACM,OAAT,CAAiB,UAAUC,OAAV,EAAmB;AAClC,WAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,MAAM,CAACH,aAAP,CAAqBjB,MAAzC,EAAiDY,CAAC,EAAlD,EAAsD;AACpD,YAAIQ,MAAM,CAACH,aAAP,CAAqBL,CAArB,EAAwB9B,IAAxB,CAA6BsC,MAA7B,EAAqCY,OAArC,CAAJ,EAAmD;AACjD;AACD;AACF,OALiC,CAKhC;;;AAGF,UAAIA,OAAO,CAAC3C,OAAR,CAAgB,MAAhB,MAA4B,CAAhC,EAAmC;AACjC+B,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB;AACrBiC,UAAAA,IAAI,EAAE,SADe;AAErBU,UAAAA,IAAI,EAAED,OAAO,CAAClB,KAAR,CAAc,CAAd;AAFe,SAAvB;;AAKA;AACD,OAfiC,CAehC;AACF;;;AAGAkB,MAAAA,OAAO,GAAGA,OAAO,CAACjB,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAAV,CAnBkC,CAmBG;;AAErClB,MAAAA,KAAK,GAAG,WAAWC,IAAX,CAAgBkC,OAAhB,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB;AACrBiC,UAAAA,IAAI,EAAE,KADe;AAErBW,UAAAA,OAAO,EAAE;AAFY,SAAvB;;AAKA;AACD;;AAEDrC,MAAAA,KAAK,GAAG,gCAAgCC,IAAhC,CAAqCkC,OAArC,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACc,QAAN,GAAiBC,UAAU,CAACvC,KAAK,CAAC,CAAD,CAAN,CAA3B;AACD;;AAED,YAAIA,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACgB,KAAN,GAAcxC,KAAK,CAAC,CAAD,CAAnB;AACD;;AAEDuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,qCAAqCC,IAArC,CAA0CkC,OAA1C,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACc,QAAN,GAAiBlC,QAAQ,CAACJ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAzB;AACD;;AAEDuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,8BAA8BC,IAA9B,CAAmCkC,OAAnC,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACiB,OAAN,GAAgBrC,QAAQ,CAACJ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAxB;AACD;;AAEDuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,wCAAwCC,IAAxC,CAA6CkC,OAA7C,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACkB,MAAN,GAAetC,QAAQ,CAACJ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAvB;AACD;;AAEDuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,gDAAgDC,IAAhD,CAAqDkC,OAArD,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACkB,MAAN,GAAetC,QAAQ,CAACJ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAvB;AACD;;AAEDuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,gCAAgCC,IAAhC,CAAqCkC,OAArC,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACmB,YAAN,GAAqB3C,KAAK,CAAC,CAAD,CAA1B;AACD;;AAEDuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,4BAA4BC,IAA5B,CAAiCkC,OAAjC,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG7C,QAAQ,CAACmB,cAAc,CAACE,KAAK,CAAC,CAAD,CAAN,CAAf,EAA2B;AACzC0B,UAAAA,IAAI,EAAE,KADmC;AAEzCW,UAAAA,OAAO,EAAE;AAFgC,SAA3B,CAAhB;;AAKAd,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,iCAAiCC,IAAjC,CAAsCkC,OAAtC,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACoB,OAAN,GAAgB,CAAC,KAAKC,IAAL,CAAU7C,KAAK,CAAC,CAAD,CAAf,CAAjB;AACD;;AAEDuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,qBAAqBC,IAArB,CAA0BkC,OAA1B,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZ,cAAIY,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAhC;;AAEA,cAAIY,UAAU,CAACkC,GAAf,EAAoB;AAClBtB,YAAAA,KAAK,CAACG,GAAN,GAAYf,UAAU,CAACkC,GAAvB;AACD;;AAED,cAAIlC,UAAU,CAACmC,SAAf,EAA0B;AACxBvB,YAAAA,KAAK,CAACwB,SAAN,GAAkBlD,cAAc,CAACc,UAAU,CAACmC,SAAZ,CAAhC;AACD;AACF;;AAEDxB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,4BAA4BC,IAA5B,CAAiCkC,OAAjC,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACZ,UAAN,GAAmBD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAlC;;AAEA,cAAIwB,KAAK,CAACZ,UAAN,CAAiBqC,UAArB,EAAiC;AAC/B,gBAAInC,KAAK,GAAGU,KAAK,CAACZ,UAAN,CAAiBqC,UAAjB,CAA4BnC,KAA5B,CAAkC,GAAlC,CAAZ;AACA,gBAAIoC,UAAU,GAAG,EAAjB;;AAEA,gBAAIpC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZoC,cAAAA,UAAU,CAACC,KAAX,GAAmB/C,QAAQ,CAACU,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAA3B;AACD;;AAED,gBAAIA,KAAK,CAAC,CAAD,CAAT,EAAc;AACZoC,cAAAA,UAAU,CAACE,MAAX,GAAoBhD,QAAQ,CAACU,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAA5B;AACD;;AAEDU,YAAAA,KAAK,CAACZ,UAAN,CAAiBqC,UAAjB,GAA8BC,UAA9B;AACD;;AAED,cAAI1B,KAAK,CAACZ,UAAN,CAAiByC,SAArB,EAAgC;AAC9B7B,YAAAA,KAAK,CAACZ,UAAN,CAAiByC,SAAjB,GAA6BjD,QAAQ,CAACoB,KAAK,CAACZ,UAAN,CAAiByC,SAAlB,EAA6B,EAA7B,CAArC;AACD;;AAED,cAAI7B,KAAK,CAACZ,UAAN,CAAiB,YAAjB,CAAJ,EAAoC;AAClCY,YAAAA,KAAK,CAACZ,UAAN,CAAiB,YAAjB,IAAiCR,QAAQ,CAACoB,KAAK,CAACZ,UAAN,CAAiB,YAAjB,CAAD,EAAiC,EAAjC,CAAzC;AACD;AACF;;AAEDW,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,uBAAuBC,IAAvB,CAA4BkC,OAA5B,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACZ,UAAN,GAAmBD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAlC;AACD;;AAEDuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,kBAAkBC,IAAlB,CAAuBkC,OAAvB,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB;AACrBiC,UAAAA,IAAI,EAAE,KADe;AAErBW,UAAAA,OAAO,EAAE;AAFY,SAAvB;;AAKA;AACD;;AAEDrC,MAAAA,KAAK,GAAG,wBAAwBC,IAAxB,CAA6BkC,OAA7B,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB;AACrBiC,UAAAA,IAAI,EAAE,KADe;AAErBW,UAAAA,OAAO,EAAE;AAFY,SAAvB;;AAKA;AACD;;AAEDrC,MAAAA,KAAK,GAAG,mCAAmCC,IAAnC,CAAwCkC,OAAxC,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAAC8B,cAAN,GAAuBtD,KAAK,CAAC,CAAD,CAA5B;AACAwB,UAAAA,KAAK,CAAC+B,cAAN,GAAuB,IAAIC,IAAJ,CAASxD,KAAK,CAAC,CAAD,CAAd,CAAvB;AACD;;AAEDuB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,qBAAqBC,IAArB,CAA0BkC,OAA1B,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACZ,UAAN,GAAmBD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAlC,CADY,CACkC;;AAE9C,cAAIwB,KAAK,CAACZ,UAAN,CAAiB6C,EAArB,EAAyB;AACvB,gBAAIjC,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoB/D,SAApB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoCgE,WAApC,OAAsD,IAA1D,EAAgE;AAC9DlC,cAAAA,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,GAAsBjC,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoB/D,SAApB,CAA8B,CAA9B,CAAtB;AACD;;AAED8B,YAAAA,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,GAAsBjC,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoBzD,KAApB,CAA0B,OAA1B,CAAtB;AACAwB,YAAAA,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoB,CAApB,IAAyBrD,QAAQ,CAACoB,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoB,CAApB,CAAD,EAAyB,EAAzB,CAAjC;AACAjC,YAAAA,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoB,CAApB,IAAyBrD,QAAQ,CAACoB,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoB,CAApB,CAAD,EAAyB,EAAzB,CAAjC;AACAjC,YAAAA,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoB,CAApB,IAAyBrD,QAAQ,CAACoB,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoB,CAApB,CAAD,EAAyB,EAAzB,CAAjC;AACAjC,YAAAA,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoB,CAApB,IAAyBrD,QAAQ,CAACoB,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,CAAoB,CAApB,CAAD,EAAyB,EAAzB,CAAjC;AACAjC,YAAAA,KAAK,CAACZ,UAAN,CAAiB6C,EAAjB,GAAsB,IAAIE,WAAJ,CAAgBnC,KAAK,CAACZ,UAAN,CAAiB6C,EAAjC,CAAtB;AACD;AACF;;AAEDlC,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,uBAAuBC,IAAvB,CAA4BkC,OAA5B,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAACZ,UAAN,GAAmBD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAlC;AACAwB,UAAAA,KAAK,CAACZ,UAAN,CAAiB,aAAjB,IAAkC2B,UAAU,CAACf,KAAK,CAACZ,UAAN,CAAiB,aAAjB,CAAD,CAA5C;AACAY,UAAAA,KAAK,CAACZ,UAAN,CAAiBgD,OAAjB,GAA2B,MAAMf,IAAN,CAAWrB,KAAK,CAACZ,UAAN,CAAiBgD,OAA5B,CAA3B;AACD;;AAEDrC,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,+BAA+BC,IAA/B,CAAoCkC,OAApC,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAAClC,IAAN,GAAaU,KAAK,CAAC,CAAD,CAAlB;AACD,SAFD,MAEO;AACLwB,UAAAA,KAAK,CAAClC,IAAN,GAAa,EAAb;AACD;;AAEDiC,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,0BAA0BC,IAA1B,CAA+BkC,OAA/B,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAAClC,IAAN,GAAaU,KAAK,CAAC,CAAD,CAAlB;AACD,SAFD,MAEO;AACLwB,UAAAA,KAAK,CAAClC,IAAN,GAAa,EAAb;AACD;;AAEDiC,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,yBAAyBC,IAAzB,CAA8BkC,OAA9B,CAAR;;AAEA,UAAInC,KAAJ,EAAW;AACTwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;;AAKA,YAAIrC,KAAK,CAAC,CAAD,CAAT,EAAc;AACZwB,UAAAA,KAAK,CAAClC,IAAN,GAAaU,KAAK,CAAC,CAAD,CAAlB;AACD,SAFD,MAEO;AACLwB,UAAAA,KAAK,CAAClC,IAAN,GAAa,EAAb;AACD;;AAEDiC,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,qBAAqBC,IAArB,CAA0BkC,OAA1B,CAAR;;AAEA,UAAInC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAlB,EAAuB;AACrBwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;AAIAb,QAAAA,KAAK,CAACZ,UAAN,GAAmBD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAlC;;AAEA,YAAIwB,KAAK,CAACZ,UAAN,CAAiBiD,cAAjB,CAAgC,kBAAhC,CAAJ,EAAyD;AACvDrC,UAAAA,KAAK,CAACZ,UAAN,CAAiB,kBAAjB,IAAuCR,QAAQ,CAACoB,KAAK,CAACZ,UAAN,CAAiB,kBAAjB,CAAD,EAAuC,EAAvC,CAA/C;AACD;;AAED,YAAIY,KAAK,CAACZ,UAAN,CAAiBiD,cAAjB,CAAgC,6BAAhC,CAAJ,EAAoE;AAClErC,UAAAA,KAAK,CAACZ,UAAN,CAAiB,6BAAjB,IAAkDY,KAAK,CAACZ,UAAN,CAAiB,6BAAjB,EAAgDE,KAAhD,CAAsDnB,GAAtD,CAAlD;AACD;;AAED4B,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,qBAAqBC,IAArB,CAA0BkC,OAA1B,CAAR;;AAEA,UAAInC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAlB,EAAuB;AACrBwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;AAIAb,QAAAA,KAAK,CAACZ,UAAN,GAAmBD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAlC;AACA,SAAC,UAAD,EAAakC,OAAb,CAAqB,UAAU3B,GAAV,EAAe;AAClC,cAAIiB,KAAK,CAACZ,UAAN,CAAiBiD,cAAjB,CAAgCtD,GAAhC,CAAJ,EAA0C;AACxCiB,YAAAA,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,IAAwBgC,UAAU,CAACf,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,CAAD,CAAlC;AACD;AACF,SAJD;AAKA,SAAC,aAAD,EAAgB,KAAhB,EAAuB2B,OAAvB,CAA+B,UAAU3B,GAAV,EAAe;AAC5C,cAAIiB,KAAK,CAACZ,UAAN,CAAiBiD,cAAjB,CAAgCtD,GAAhC,CAAJ,EAA0C;AACxCiB,YAAAA,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,IAAwB,MAAMsC,IAAN,CAAWrB,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,CAAX,CAAxB;AACD;AACF,SAJD;;AAMA,YAAIiB,KAAK,CAACZ,UAAN,CAAiBiD,cAAjB,CAAgC,WAAhC,CAAJ,EAAkD;AAChDrC,UAAAA,KAAK,CAACZ,UAAN,CAAiBoC,SAAjB,GAA6BlD,cAAc,CAAC0B,KAAK,CAACZ,UAAN,CAAiBmC,SAAlB,CAA3C;AACD;;AAEDxB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,+BAA+BC,IAA/B,CAAoCkC,OAApC,CAAR;;AAEA,UAAInC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAlB,EAAuB;AACrBwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;AAIAb,QAAAA,KAAK,CAACZ,UAAN,GAAmBD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAlC;AACA,SAAC,gBAAD,EAAmB,gBAAnB,EAAqC,WAArC,EAAkDkC,OAAlD,CAA0D,UAAU3B,GAAV,EAAe;AACvE,cAAIiB,KAAK,CAACZ,UAAN,CAAiBiD,cAAjB,CAAgCtD,GAAhC,CAAJ,EAA0C;AACxCiB,YAAAA,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,IAAwBgC,UAAU,CAACf,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,CAAD,CAAlC;AACD;AACF,SAJD;AAKA,SAAC,qBAAD,EAAwB,kBAAxB,EAA4C2B,OAA5C,CAAoD,UAAU3B,GAAV,EAAe;AACjE,cAAIiB,KAAK,CAACZ,UAAN,CAAiBiD,cAAjB,CAAgCtD,GAAhC,CAAJ,EAA0C;AACxCiB,YAAAA,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,IAAwB,MAAMsC,IAAN,CAAWrB,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,CAAX,CAAxB;AACD;AACF,SAJD;;AAMAgB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,yBAAyBC,IAAzB,CAA8BkC,OAA9B,CAAR;;AAEA,UAAInC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAlB,EAAuB;AACrBwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;AAIAb,QAAAA,KAAK,CAACZ,UAAN,GAAmBD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAlC;AACA,SAAC,aAAD,EAAgBkC,OAAhB,CAAwB,UAAU3B,GAAV,EAAe;AACrC,cAAIiB,KAAK,CAACZ,UAAN,CAAiBiD,cAAjB,CAAgCtD,GAAhC,CAAJ,EAA0C;AACxCiB,YAAAA,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,IAAwBgC,UAAU,CAACf,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,CAAD,CAAlC;AACD;AACF,SAJD;;AAMAgB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,6BAA6BC,IAA7B,CAAkCkC,OAAlC,CAAR;;AAEA,UAAInC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAlB,EAAuB;AACrBwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;AAIAb,QAAAA,KAAK,CAACZ,UAAN,GAAmBD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAlC;AACA,SAAC,iBAAD,EAAoB,kBAApB,EAAwCkC,OAAxC,CAAgD,UAAU3B,GAAV,EAAe;AAC7D,cAAIiB,KAAK,CAACZ,UAAN,CAAiBiD,cAAjB,CAAgCtD,GAAhC,CAAJ,EAA0C;AACxCiB,YAAAA,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,IAAwBH,QAAQ,CAACoB,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,CAAD,EAAwB,EAAxB,CAAhC;AACA,gBAAIuD,MAAM,GAAGvD,GAAG,KAAK,kBAAR,GAA6B,QAA7B,GAAwC,QAArD;AACAiB,YAAAA,KAAK,CAACZ,UAAN,CAAiBoC,SAAjB,GAA6BxB,KAAK,CAACZ,UAAN,CAAiBoC,SAAjB,IAA8B,EAA3D;AACAxB,YAAAA,KAAK,CAACZ,UAAN,CAAiBoC,SAAjB,CAA2Bc,MAA3B,IAAqCtC,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,CAArC,CAJwC,CAIoB;;AAE5D,mBAAOiB,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,CAAP;AACD;AACF,SATD;;AAWAgB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD;;AAEDxB,MAAAA,KAAK,GAAG,iCAAiCC,IAAjC,CAAsCkC,OAAtC,CAAR;;AAEA,UAAInC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAlB,EAAuB;AACrBwB,QAAAA,KAAK,GAAG;AACNE,UAAAA,IAAI,EAAE,KADA;AAENW,UAAAA,OAAO,EAAE;AAFH,SAAR;AAIAb,QAAAA,KAAK,CAACZ,UAAN,GAAmBD,eAAe,CAACX,KAAK,CAAC,CAAD,CAAN,CAAlC;AACA,SAAC,UAAD,EAAa,WAAb,EAA0BkC,OAA1B,CAAkC,UAAU3B,GAAV,EAAe;AAC/C,cAAIiB,KAAK,CAACZ,UAAN,CAAiBiD,cAAjB,CAAgCtD,GAAhC,CAAJ,EAA0C;AACxCiB,YAAAA,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,IAAwBH,QAAQ,CAACoB,KAAK,CAACZ,UAAN,CAAiBL,GAAjB,CAAD,EAAwB,EAAxB,CAAhC;AACD;AACF,SAJD;;AAMAgB,QAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB+B,KAAvB;;AAEA;AACD,OAlhBiC,CAkhBhC;;;AAGFD,MAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB;AACrBiC,QAAAA,IAAI,EAAE,KADe;AAErBpC,QAAAA,IAAI,EAAE6C,OAAO,CAAClB,KAAR,CAAc,CAAd;AAFe,OAAvB;AAID,KAzhBD;AA0hBD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnkBE;;AAskBA9B,EAAAA,MAAM,CAAC4E,SAAP,GAAmB,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AAC1C,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAIC,UAAU,GAAGF,IAAI,CAACE,UAAtB;AAAA,QACIC,UAAU,GAAGH,IAAI,CAACG,UADtB;AAAA,QAEIC,UAAU,GAAGJ,IAAI,CAACI,UAFtB;AAAA,QAGIC,OAAO,GAAGL,IAAI,CAACK,OAHnB;;AAKA,QAAI,OAAOD,UAAP,KAAsB,UAA1B,EAAsC;AACpCA,MAAAA,UAAU,GAAG,SAASA,UAAT,CAAoB9C,IAApB,EAA0B;AACrC,eAAOA,IAAP;AACD,OAFD;AAGD;;AAED,SAAKF,aAAL,CAAmB/B,IAAnB,CAAwB,UAAUiC,IAAV,EAAgB;AACtC,UAAItB,KAAK,GAAGkE,UAAU,CAACjE,IAAX,CAAgBqB,IAAhB,CAAZ;;AAEA,UAAItB,KAAJ,EAAW;AACTiE,QAAAA,MAAM,CAACxE,OAAP,CAAe,MAAf,EAAuB;AACrBiC,UAAAA,IAAI,EAAE,QADe;AAErBpC,UAAAA,IAAI,EAAE8E,UAAU,CAAC9C,IAAD,CAFK;AAGrB6C,UAAAA,UAAU,EAAEA,UAHS;AAIrBE,UAAAA,OAAO,EAAEA;AAJY,SAAvB;;AAOA,eAAO,IAAP;AACD;AACF,KAbD;AAcD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AAnCE;;AAsCAlF,EAAAA,MAAM,CAACmF,YAAP,GAAsB,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACjD,QAAIL,UAAU,GAAGK,KAAK,CAACL,UAAvB;AAAA,QACIM,GAAG,GAAGD,KAAK,CAACC,GADhB;;AAGA,QAAIC,KAAK,GAAG,SAASA,KAAT,CAAenD,IAAf,EAAqB;AAC/B,UAAI4C,UAAU,CAACrB,IAAX,CAAgBvB,IAAhB,CAAJ,EAA2B;AACzB,eAAOkD,GAAG,CAAClD,IAAD,CAAV;AACD;;AAED,aAAOA,IAAP;AACD,KAND;;AAQA,SAAKD,UAAL,CAAgBhC,IAAhB,CAAqBoF,KAArB;AACD,GAbD;;AAeA,SAAOtD,WAAP;AACD,CAhpB8B,CAgpB7BzC,MAhpB6B,CAA/B;;AAkpBA,IAAIgG,SAAS,GAAG,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACtC,SAAOA,GAAG,CAACjB,WAAJ,GAAkBxC,OAAlB,CAA0B,QAA1B,EAAoC,UAAU0D,CAAV,EAAa;AACtD,WAAOA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,EAAP;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBlE,UAAvB,EAAmC;AACrD,MAAIV,MAAM,GAAG,EAAb;AACA6E,EAAAA,MAAM,CAACC,IAAP,CAAYpE,UAAZ,EAAwBsB,OAAxB,CAAgC,UAAU3B,GAAV,EAAe;AAC7CL,IAAAA,MAAM,CAACwE,SAAS,CAACnE,GAAD,CAAV,CAAN,GAAyBK,UAAU,CAACL,GAAD,CAAnC;AACD,GAFD;AAGA,SAAOL,MAAP;AACD,CAND,C,CAMG;AACH;AACA;AACA;;;AAGA,IAAI+E,WAAW,GAAG,SAASA,WAAT,CAAqBC,QAArB,EAA+B;AAC/C,MAAIC,aAAa,GAAGD,QAAQ,CAACC,aAA7B;AAAA,MACIC,cAAc,GAAGF,QAAQ,CAACE,cAD9B;AAAA,MAEIC,kBAAkB,GAAGH,QAAQ,CAACG,kBAFlC;;AAIA,MAAI,CAACF,aAAL,EAAoB;AAClB;AACD;;AAED,MAAIG,GAAG,GAAG,uBAAV;AACA,MAAIC,EAAE,GAAG,UAAT;AACA,MAAIC,GAAG,GAAG,cAAV;AACA,MAAIC,iBAAiB,GAAGL,cAAc,IAAIA,cAAc,GAAG,CAA3D;AACA,MAAIM,eAAe,GAAGL,kBAAkB,IAAIA,kBAAkB,GAAG,CAAjE;;AAEA,MAAID,cAAc,IAAI,CAACD,aAAa,CAACtB,cAAd,CAA6B0B,EAA7B,CAAvB,EAAyD;AACvDJ,IAAAA,aAAa,CAACI,EAAD,CAAb,GAAoBE,iBAApB;AACA,SAAKhG,OAAL,CAAa,MAAb,EAAqB;AACnBkG,MAAAA,OAAO,EAAEL,GAAG,GAAG,+CAAN,GAAwDG,iBAAxD,GAA4E;AADlE,KAArB;AAGD;;AAED,MAAIA,iBAAiB,IAAIN,aAAa,CAACI,EAAD,CAAb,GAAoBE,iBAA7C,EAAgE;AAC9D,SAAKhG,OAAL,CAAa,MAAb,EAAqB;AACnBkG,MAAAA,OAAO,EAAEL,GAAG,GAAG,uBAAN,GAAgCH,aAAa,CAACI,EAAD,CAA7C,GAAoD,2BAApD,GAAkFE,iBAAlF,GAAsG;AAD5F,KAArB;AAGAN,IAAAA,aAAa,CAACI,EAAD,CAAb,GAAoBE,iBAApB;AACD,GA3B8C,CA2B7C;;;AAGF,MAAIJ,kBAAkB,IAAI,CAACF,aAAa,CAACtB,cAAd,CAA6B2B,GAA7B,CAA3B,EAA8D;AAC5DL,IAAAA,aAAa,CAACK,GAAD,CAAb,GAAqBH,kBAAkB,GAAG,CAA1C;AACA,SAAK5F,OAAL,CAAa,MAAb,EAAqB;AACnBkG,MAAAA,OAAO,EAAEL,GAAG,GAAG,wDAAN,GAAiEH,aAAa,CAACK,GAAD,CAA9E,GAAsF;AAD5E,KAArB;AAGD,GAnC8C,CAmC7C;;;AAGF,MAAIH,kBAAkB,IAAIF,aAAa,CAACK,GAAD,CAAb,GAAqBE,eAA/C,EAAgE;AAC9D,SAAKjG,OAAL,CAAa,MAAb,EAAqB;AACnBkG,MAAAA,OAAO,EAAEL,GAAG,GAAG,4BAAN,GAAqCH,aAAa,CAACK,GAAD,CAAlD,GAA0D,+BAA1D,GAA4FE,eAA5F,GAA8G;AADpG,KAArB;AAGAP,IAAAA,aAAa,CAACK,GAAD,CAAb,GAAqBE,eAArB;AACD;AACF,CA5CD;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIE,MAAM,GAAG,aAAa,UAAU7G,OAAV,EAAmB;AAC3CN,EAAAA,cAAc,CAACmH,MAAD,EAAS7G,OAAT,CAAd;;AAEA,WAAS6G,MAAT,GAAkB;AAChB,QAAI5G,KAAJ;;AAEAA,IAAAA,KAAK,GAAGD,OAAO,CAACE,IAAR,CAAa,IAAb,KAAsB,IAA9B;AACAD,IAAAA,KAAK,CAAC6G,UAAN,GAAmB,IAAI/G,UAAJ,EAAnB;AACAE,IAAAA,KAAK,CAAC8G,WAAN,GAAoB,IAAI3E,WAAJ,EAApB;;AAEAnC,IAAAA,KAAK,CAAC6G,UAAN,CAAiBE,IAAjB,CAAsB/G,KAAK,CAAC8G,WAA5B;AACA;;;AAGA,QAAIE,IAAI,GAAGpH,sBAAsB,CAACI,KAAD,CAAjC;AACA;;;AAGA,QAAIiH,IAAI,GAAG,EAAX;AACA,QAAIC,UAAU,GAAG,EAAjB,CAhBgB,CAgBK;;AAErB,QAAIC,UAAJ,CAlBgB,CAkBA;;AAEhB,QAAIC,IAAJ;;AAEA,QAAIC,QAAQ,GAAG,KAAf;;AAEA,QAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB,CAAE,CAA7B;;AAEA,QAAIC,kBAAkB,GAAG;AACvB,eAAS,EADc;AAEvB,eAAS,EAFc;AAGvB,yBAAmB,EAHI;AAIvB,mBAAa;AAJU,KAAzB,CA1BgB,CA+Bb;AACH;;AAEA,QAAIC,YAAY,GAAG,+CAAnB,CAlCgB,CAkCoD;;AAEpE,QAAIC,eAAe,GAAG,CAAtB,CApCgB,CAoCS;;AAEzBzH,IAAAA,KAAK,CAACkG,QAAN,GAAiB;AACfwB,MAAAA,UAAU,EAAE,IADG;AAEfC,MAAAA,mBAAmB,EAAE,EAFN;AAGfC,MAAAA,QAAQ,EAAE;AAHK,KAAjB,CAtCgB,CA0Cb;AACH;AACA;;AAEA,QAAIC,gBAAgB,GAAG,CAAvB,CA9CgB,CA8CU;;AAE1B,QAAIC,oBAAoB,GAAG,CAA3B;;AAEA9H,IAAAA,KAAK,CAAC+H,EAAN,CAAS,KAAT,EAAgB,YAAY;AAC1B;AACA;AACA,UAAIb,UAAU,CAACvE,GAAX,IAAkB,CAACuE,UAAU,CAACc,KAAZ,IAAqB,CAACd,UAAU,CAACe,YAAvD,EAAqE;AACnE;AACD;;AAED,UAAI,CAACf,UAAU,CAAC1B,GAAZ,IAAmB2B,UAAvB,EAAmC;AACjCD,QAAAA,UAAU,CAAC1B,GAAX,GAAiB2B,UAAjB;AACD;;AAED,UAAI,CAACD,UAAU,CAAC3F,GAAZ,IAAmB6F,IAAvB,EAA6B;AAC3BF,QAAAA,UAAU,CAAC3F,GAAX,GAAiB6F,IAAjB;AACD;;AAED,UAAI,CAACF,UAAU,CAACgB,QAAZ,IAAwB,OAAOT,eAAP,KAA2B,QAAvD,EAAiE;AAC/DP,QAAAA,UAAU,CAACgB,QAAX,GAAsBT,eAAtB;AACD;;AAEDzH,MAAAA,KAAK,CAACkG,QAAN,CAAeiC,cAAf,GAAgCjB,UAAhC;AACD,KApBD,EAlDgB,CAsEZ;;;AAGJlH,IAAAA,KAAK,CAAC8G,WAAN,CAAkBiB,EAAlB,CAAqB,MAArB,EAA6B,UAAUK,KAAV,EAAiB;AAC5C,UAAIC,UAAJ;AACA,UAAIC,SAAJ;AACA,OAAC;AACChC,QAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB;AACA,WAAC,CAAC;AACA7C,YAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,kBAAI2E,KAAK,CAAC3E,OAAV,EAAmB;AACjB,qBAAKyC,QAAL,CAAczC,OAAd,GAAwB2E,KAAK,CAAC3E,OAA9B;AACD;AACF,aALD;AAMA,2BAAe,SAASiE,UAAT,GAAsB;AACnC,mBAAKxB,QAAL,CAAcwB,UAAd,GAA2BU,KAAK,CAACxE,OAAjC;;AAEA,kBAAI,EAAE,aAAawE,KAAf,CAAJ,EAA2B;AACzB,qBAAK3H,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGA,qBAAKT,QAAL,CAAcwB,UAAd,GAA2B,IAA3B;AACD;AACF,aAfD;AAgBA1D,YAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,kBAAIA,SAAS,GAAG,EAAhB;;AAEA,kBAAI,YAAYoE,KAAhB,EAAuB;AACrBlB,gBAAAA,UAAU,CAAClD,SAAX,GAAuBA,SAAvB;AACAA,gBAAAA,SAAS,CAAC7C,MAAV,GAAmBiH,KAAK,CAACjH,MAAzB;;AAEA,oBAAI,EAAE,YAAYiH,KAAd,CAAJ,EAA0B;AACxB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkBA,kBAAAA,KAAK,CAAC/G,MAAN,GAAewG,gBAAf;AACD;AACF;;AAED,kBAAI,YAAYO,KAAhB,EAAuB;AACrBlB,gBAAAA,UAAU,CAAClD,SAAX,GAAuBA,SAAvB;AACAA,gBAAAA,SAAS,CAAC3C,MAAV,GAAmB+G,KAAK,CAAC/G,MAAzB;AACD;;AAEDwG,cAAAA,gBAAgB,GAAG7D,SAAS,CAAC3C,MAAV,GAAmB2C,SAAS,CAAC7C,MAAhD;AACD,aA5CD;AA6CAoH,YAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,mBAAKrC,QAAL,CAAcsC,OAAd,GAAwB,IAAxB;AACD,aA/CD;AAgDAC,YAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,kBAAI,EAAE,mBAAmB,KAAKvC,QAA1B,CAAJ,EAAyC;AACvC,qBAAKA,QAAL,CAAcwC,aAAd,GAA8B,CAA9B;AACA,qBAAKjI,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGD;;AAED,kBAAI,EAAE,2BAA2B,KAAKT,QAAlC,CAAJ,EAAiD;AAC/C,qBAAKA,QAAL,CAAcyC,qBAAd,GAAsC,CAAtC;AACA,qBAAKlI,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGD;;AAED,kBAAIyB,KAAK,CAAC9E,QAAN,GAAiB,CAArB,EAAwB;AACtB4D,gBAAAA,UAAU,CAAC5D,QAAX,GAAsB8E,KAAK,CAAC9E,QAA5B;AACD;;AAED,kBAAI8E,KAAK,CAAC9E,QAAN,KAAmB,CAAvB,EAA0B;AACxB4D,gBAAAA,UAAU,CAAC5D,QAAX,GAAsB,IAAtB;AACA,qBAAK7C,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGD;;AAED,mBAAKT,QAAL,CAAc0B,QAAd,GAAyBX,IAAzB;AACD,aA3ED;AA4EA1F,YAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,kBAAI,CAAC6G,KAAK,CAACxG,UAAX,EAAuB;AACrB,qBAAKnB,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGA;AACD,eANiB,CAMhB;;;AAGF,kBAAIyB,KAAK,CAACxG,UAAN,CAAiBgH,MAAjB,KAA4B,MAAhC,EAAwC;AACtCxB,gBAAAA,IAAI,GAAG,IAAP;AACA;AACD;;AAED,kBAAI,CAACgB,KAAK,CAACxG,UAAN,CAAiBkC,GAAtB,EAA2B;AACzB,qBAAKrD,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGA;AACD;;AAED,kBAAIyB,KAAK,CAACxG,UAAN,CAAiBiH,SAAjB,KAA+B,gCAAnC,EAAqE;AACnE,qBAAK3C,QAAL,CAAc4C,iBAAd,GAAkC,KAAK5C,QAAL,CAAc4C,iBAAd,IAAmC,EAArE,CADmE,CACM;;AAEzE,qBAAK5C,QAAL,CAAc4C,iBAAd,CAAgC,mBAAhC,IAAuD;AACrDlH,kBAAAA,UAAU,EAAEwG,KAAK,CAACxG;AADmC,iBAAvD;AAGA;AACD,eA5BiB,CA4BhB;AACF;;;AAGA,kBAAIwG,KAAK,CAACxG,UAAN,CAAiBiH,SAAjB,KAA+BrB,YAAnC,EAAiD;AAC/C,oBAAIuB,aAAa,GAAG,CAAC,YAAD,EAAe,gBAAf,EAAiC,iBAAjC,CAApB;;AAEA,oBAAIA,aAAa,CAACvI,OAAd,CAAsB4H,KAAK,CAACxG,UAAN,CAAiBgH,MAAvC,MAAmD,CAAC,CAAxD,EAA2D;AACzD,uBAAKnI,OAAL,CAAa,MAAb,EAAqB;AACnBkG,oBAAAA,OAAO,EAAE;AADU,mBAArB;AAGA;AACD;;AAED,oBAAIyB,KAAK,CAACxG,UAAN,CAAiBgH,MAAjB,KAA4B,iBAAhC,EAAmD;AACjD,uBAAKnI,OAAL,CAAa,MAAb,EAAqB;AACnBkG,oBAAAA,OAAO,EAAE;AADU,mBAArB;AAGD;;AAED,oBAAIyB,KAAK,CAACxG,UAAN,CAAiBkC,GAAjB,CAAqBpD,SAArB,CAA+B,CAA/B,EAAkC,EAAlC,MAA0C,yBAA9C,EAAyE;AACvE,uBAAKD,OAAL,CAAa,MAAb,EAAqB;AACnBkG,oBAAAA,OAAO,EAAE;AADU,mBAArB;AAGA;AACD;;AAED,oBAAI,EAAEyB,KAAK,CAACxG,UAAN,CAAiBoH,KAAjB,IAA0BZ,KAAK,CAACxG,UAAN,CAAiBoH,KAAjB,CAAuBtI,SAAvB,CAAiC,CAAjC,EAAoC,CAApC,MAA2C,IAAvE,CAAJ,EAAkF;AAChF,uBAAKD,OAAL,CAAa,MAAb,EAAqB;AACnBkG,oBAAAA,OAAO,EAAE;AADU,mBAArB;AAGA;AACD,iBA5B8C,CA4B7C;AACF;;;AAGA,qBAAKT,QAAL,CAAc4C,iBAAd,GAAkC,KAAK5C,QAAL,CAAc4C,iBAAd,IAAmC,EAArE;AACA,qBAAK5C,QAAL,CAAc4C,iBAAd,CAAgC,oBAAhC,IAAwD;AACtDlH,kBAAAA,UAAU,EAAE;AACVqH,oBAAAA,WAAW,EAAEb,KAAK,CAACxG,UAAN,CAAiBiH,SADpB;AAEV;AACAK,oBAAAA,KAAK,EAAEd,KAAK,CAACxG,UAAN,CAAiBoH,KAAjB,CAAuBtI,SAAvB,CAAiC,CAAjC;AAHG,mBAD0C;AAMtD;AACAyI,kBAAAA,IAAI,EAAEtJ,qBAAqB,CAACuI,KAAK,CAACxG,UAAN,CAAiBkC,GAAjB,CAAqBhC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAD;AAP2B,iBAAxD;AASA;AACD;;AAED,kBAAI,CAACsG,KAAK,CAACxG,UAAN,CAAiBgH,MAAtB,EAA8B;AAC5B,qBAAKnI,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGD,eAjFiB,CAiFhB;;;AAGFS,cAAAA,IAAI,GAAG;AACLgC,gBAAAA,MAAM,EAAEhB,KAAK,CAACxG,UAAN,CAAiBgH,MAAjB,IAA2B,SAD9B;AAELjG,gBAAAA,GAAG,EAAEyF,KAAK,CAACxG,UAAN,CAAiBkC;AAFjB,eAAP;;AAKA,kBAAI,OAAOsE,KAAK,CAACxG,UAAN,CAAiB6C,EAAxB,KAA+B,WAAnC,EAAgD;AAC9C2C,gBAAAA,IAAI,CAACiC,EAAL,GAAUjB,KAAK,CAACxG,UAAN,CAAiB6C,EAA3B;AACD;AACF,aAxKD;AAyKA,8BAAkB,SAASiE,aAAT,GAAyB;AACzC,kBAAI,CAACY,QAAQ,CAAClB,KAAK,CAAC1E,MAAP,CAAb,EAA6B;AAC3B,qBAAKjD,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE,sCAAsCyB,KAAK,CAAC1E;AADlC,iBAArB;AAGA;AACD;;AAED,mBAAKwC,QAAL,CAAcwC,aAAd,GAA8BN,KAAK,CAAC1E,MAApC;AACD,aAlLD;AAmLA,sCAA0B,SAASiF,qBAAT,GAAiC;AACzD,kBAAI,CAACW,QAAQ,CAAClB,KAAK,CAAC1E,MAAP,CAAb,EAA6B;AAC3B,qBAAKjD,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE,8CAA8CyB,KAAK,CAAC1E;AAD1C,iBAArB;AAGA;AACD;;AAED,mBAAKwC,QAAL,CAAcyC,qBAAd,GAAsCP,KAAK,CAAC1E,MAA5C;AACA+D,cAAAA,eAAe,GAAGW,KAAK,CAAC1E,MAAxB;AACD,aA7LD;AA8LA,6BAAiB,SAASC,YAAT,GAAwB;AACvC,kBAAI,CAAC,YAAYE,IAAZ,CAAiBuE,KAAK,CAACzE,YAAvB,CAAL,EAA2C;AACzC,qBAAKlD,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE,qCAAqCyB,KAAK,CAACmB;AADjC,iBAArB;AAGA;AACD;;AAED,mBAAKrD,QAAL,CAAcvC,YAAd,GAA6ByE,KAAK,CAACzE,YAAnC;AACD,aAvMD;AAwMA6B,YAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB2B,cAAAA,UAAU,GAAG,EAAb;;AAEA,kBAAIiB,KAAK,CAACzF,GAAV,EAAe;AACbwE,gBAAAA,UAAU,CAACxE,GAAX,GAAiByF,KAAK,CAACzF,GAAvB;AACD;;AAED,kBAAIyF,KAAK,CAACpE,SAAV,EAAqB;AACnBmD,gBAAAA,UAAU,CAACnD,SAAX,GAAuBoE,KAAK,CAACpE,SAA7B;AACD;;AAED,kBAAIoD,IAAJ,EAAU;AACRD,gBAAAA,UAAU,CAAC5F,GAAX,GAAiB6F,IAAjB;AACD;AACF,aAtND;AAuNA,0BAAc,SAASoC,SAAT,GAAqB;AACjC,mBAAKtD,QAAL,CAAcuD,SAAd,GAA0BxC,IAA1B;AACA,mBAAKf,QAAL,CAAcwD,WAAd,GAA4B,KAAKxD,QAAL,CAAcwD,WAAd,IAA6BnC,kBAAzD;;AAEA,kBAAI,CAACa,KAAK,CAACxG,UAAX,EAAuB;AACrB,qBAAKnB,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGA;AACD;;AAED,kBAAI,CAACO,UAAU,CAACtF,UAAhB,EAA4B;AAC1BsF,gBAAAA,UAAU,CAACtF,UAAX,GAAwB,EAAxB;AACD;;AAEDjC,cAAAA,QAAQ,CAACuH,UAAU,CAACtF,UAAZ,EAAwBwG,KAAK,CAACxG,UAA9B,CAAR;AACD,aAvOD;AAwOA+H,YAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,mBAAKzD,QAAL,CAAcwD,WAAd,GAA4B,KAAKxD,QAAL,CAAcwD,WAAd,IAA6BnC,kBAAzD;;AAEA,kBAAI,EAAEa,KAAK,CAACxG,UAAN,IAAoBwG,KAAK,CAACxG,UAAN,CAAiBgI,IAArC,IAA6CxB,KAAK,CAACxG,UAAN,CAAiB,UAAjB,CAA7C,IAA6EwG,KAAK,CAACxG,UAAN,CAAiBiI,IAAhG,CAAJ,EAA2G;AACzG,qBAAKpJ,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGA;AACD,eARqB,CAQpB;;;AAGF,kBAAImD,cAAc,GAAG,KAAK5D,QAAL,CAAcwD,WAAd,CAA0BtB,KAAK,CAACxG,UAAN,CAAiBgI,IAA3C,CAArB;AACAE,cAAAA,cAAc,CAAC1B,KAAK,CAACxG,UAAN,CAAiB,UAAjB,CAAD,CAAd,GAA+CkI,cAAc,CAAC1B,KAAK,CAACxG,UAAN,CAAiB,UAAjB,CAAD,CAAd,IAAgD,EAA/F;AACAyG,cAAAA,UAAU,GAAGyB,cAAc,CAAC1B,KAAK,CAACxG,UAAN,CAAiB,UAAjB,CAAD,CAA3B,CAbsB,CAaqC;;AAE3D0G,cAAAA,SAAS,GAAG;AACVyB,gBAAAA,OAAO,EAAE,OAAOlG,IAAP,CAAYuE,KAAK,CAACxG,UAAN,CAAiBoI,OAA7B;AADC,eAAZ;;AAIA,kBAAI1B,SAAS,CAACyB,OAAd,EAAuB;AACrBzB,gBAAAA,SAAS,CAAC2B,UAAV,GAAuB,IAAvB;AACD,eAFD,MAEO;AACL3B,gBAAAA,SAAS,CAAC2B,UAAV,GAAuB,OAAOpG,IAAP,CAAYuE,KAAK,CAACxG,UAAN,CAAiBsI,UAA7B,CAAvB;AACD;;AAED,kBAAI9B,KAAK,CAACxG,UAAN,CAAiBuI,QAArB,EAA+B;AAC7B7B,gBAAAA,SAAS,CAAC8B,QAAV,GAAqBhC,KAAK,CAACxG,UAAN,CAAiBuI,QAAtC;AACD;;AAED,kBAAI/B,KAAK,CAACxG,UAAN,CAAiBkC,GAArB,EAA0B;AACxBwE,gBAAAA,SAAS,CAAC3F,GAAV,GAAgByF,KAAK,CAACxG,UAAN,CAAiBkC,GAAjC;AACD;;AAED,kBAAIsE,KAAK,CAACxG,UAAN,CAAiB,aAAjB,CAAJ,EAAqC;AACnC0G,gBAAAA,SAAS,CAAC+B,UAAV,GAAuBjC,KAAK,CAACxG,UAAN,CAAiB,aAAjB,CAAvB;AACD;;AAED,kBAAIwG,KAAK,CAACxG,UAAN,CAAiB0I,eAArB,EAAsC;AACpChC,gBAAAA,SAAS,CAACiC,eAAV,GAA4BnC,KAAK,CAACxG,UAAN,CAAiB0I,eAA7C;AACD;;AAED,kBAAIlC,KAAK,CAACxG,UAAN,CAAiB4I,MAArB,EAA6B;AAC3BlC,gBAAAA,SAAS,CAACmC,MAAV,GAAmB,OAAO5G,IAAP,CAAYuE,KAAK,CAACxG,UAAN,CAAiB4I,MAA7B,CAAnB;AACD,eA3CqB,CA2CpB;;;AAGFnC,cAAAA,UAAU,CAACD,KAAK,CAACxG,UAAN,CAAiBiI,IAAlB,CAAV,GAAoCvB,SAApC;AACD,aAvRD;AAwRAoC,YAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtCjD,cAAAA,eAAe,IAAI,CAAnB;AACAP,cAAAA,UAAU,CAACwD,aAAX,GAA2B,IAA3B;AACA,mBAAKxE,QAAL,CAAcyB,mBAAd,CAAkCtH,IAAlC,CAAuC4G,IAAI,CAAC9F,MAA5C;AACD,aA5RD;AA6RA,iCAAqB,SAASwJ,eAAT,GAA2B;AAC9C,kBAAI,OAAO,KAAKzE,QAAL,CAAc5B,cAArB,KAAwC,WAA5C,EAAyD;AACvD;AACA;AACA;AACA;AACA,qBAAK4B,QAAL,CAAc5B,cAAd,GAA+B8D,KAAK,CAAC9D,cAArC;AACA,qBAAK4B,QAAL,CAAc3B,cAAd,GAA+B6D,KAAK,CAAC7D,cAArC;AACD;;AAED2C,cAAAA,UAAU,CAAC5C,cAAX,GAA4B8D,KAAK,CAAC9D,cAAlC;AACA4C,cAAAA,UAAU,CAAC3C,cAAX,GAA4B6D,KAAK,CAAC7D,cAAlC;AACD,aAzSD;AA0SAqG,YAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxC,kBAAI,CAACtB,QAAQ,CAAClB,KAAK,CAAC9E,QAAP,CAAT,IAA6B8E,KAAK,CAAC9E,QAAN,GAAiB,CAAlD,EAAqD;AACnD,qBAAK7C,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE,uCAAuCyB,KAAK,CAAC9E;AADnC,iBAArB;AAGA;AACD;;AAED,mBAAK4C,QAAL,CAAcE,cAAd,GAA+BgC,KAAK,CAAC9E,QAArC;AACA2C,cAAAA,WAAW,CAAChG,IAAZ,CAAiB,IAAjB,EAAuB,KAAKiG,QAA5B;AACD,aApTD;AAqTA2E,YAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,kBAAI,CAACzC,KAAK,CAACxG,UAAP,IAAqBkJ,KAAK,CAAC1C,KAAK,CAACxG,UAAN,CAAiB,aAAjB,CAAD,CAA9B,EAAiE;AAC/D,qBAAKnB,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGA;AACD;;AAED,mBAAKT,QAAL,CAAc2E,KAAd,GAAsB;AACpBE,gBAAAA,UAAU,EAAE3C,KAAK,CAACxG,UAAN,CAAiB,aAAjB,CADQ;AAEpBoJ,gBAAAA,OAAO,EAAE5C,KAAK,CAACxG,UAAN,CAAiBgD;AAFN,eAAtB;AAID,aAjUD;AAkUA,uBAAW,SAASqG,MAAT,GAAkB;AAC3B/D,cAAAA,UAAU,CAAC+D,MAAX,GAAoB7C,KAAK,CAAC9H,IAA1B;AACD,aApUD;AAqUA,4BAAgB,SAAS4K,UAAT,GAAsB;AACpChE,cAAAA,UAAU,CAACgE,UAAX,GAAwB9C,KAAK,CAAC9H,IAA9B;AACD,aAvUD;AAwUA,sBAAU,SAAS6K,KAAT,GAAiB;AACzBjE,cAAAA,UAAU,CAACiE,KAAX,GAAmB/C,KAAK,CAAC9H,IAAzB;AACD,aA1UD;AA2UA,oBAAQ,SAAS8K,IAAT,GAAgB;AACtB,mBAAKlF,QAAL,CAAckF,IAAd,GAAqBtF,aAAa,CAACsC,KAAK,CAACxG,UAAP,CAAlC;AACA,mBAAKyJ,wBAAL,CAA8B,aAA9B,EAA6CjD,KAAK,CAACxG,UAAnD,EAA+D,CAAC,kBAAD,CAA/D;AACD,aA9UD;AA+UA,oBAAQ,SAAS0J,IAAT,GAAgB;AACtB,kBAAI/I,MAAM,GAAG,IAAb;;AAEA8E,cAAAA,QAAQ,GAAG,IAAX,CAHsB,CAGL;;AAEjB,kBAAIkE,YAAY,GAAG,KAAKrF,QAAL,CAAc0B,QAAd,CAAuBzG,MAA1C;AACA,kBAAImK,IAAI,GAAGxF,aAAa,CAACsC,KAAK,CAACxG,UAAP,CAAxB;AACAsF,cAAAA,UAAU,CAACc,KAAX,GAAmBd,UAAU,CAACc,KAAX,IAAoB,EAAvC;AACAd,cAAAA,UAAU,CAACc,KAAX,CAAiB3H,IAAjB,CAAsBiL,IAAtB;;AAEA,kBAAIA,IAAI,CAACtH,SAAT,EAAoB;AAClB,oBAAI,CAACsH,IAAI,CAACtH,SAAL,CAAea,cAAf,CAA8B,QAA9B,CAAL,EAA8C;AAC5CyG,kBAAAA,IAAI,CAACtH,SAAL,CAAe3C,MAAf,GAAwByG,oBAAxB;AACD;;AAEDA,gBAAAA,oBAAoB,GAAGwD,IAAI,CAACtH,SAAL,CAAe3C,MAAf,GAAwBiK,IAAI,CAACtH,SAAL,CAAe7C,MAA9D;AACD;;AAED,kBAAIqK,SAAS,GAAGtE,UAAU,CAACc,KAAX,CAAiB7G,MAAjB,GAA0B,CAA1C;AACA,mBAAKkK,wBAAL,CAA8B,kBAAkBG,SAAlB,GAA8B,gBAA9B,GAAiDD,YAA/E,EAA6FnD,KAAK,CAACxG,UAAnG,EAA+G,CAAC,KAAD,EAAQ,UAAR,CAA/G;;AAEA,kBAAI,KAAKsE,QAAL,CAAcuF,gBAAlB,EAAoC;AAClC,qBAAKvF,QAAL,CAAcuF,gBAAd,CAA+BvI,OAA/B,CAAuC,UAAUwI,CAAV,EAAa3J,CAAb,EAAgB;AACrD,sBAAI,CAAC2J,CAAC,CAAC7G,cAAF,CAAiB,UAAjB,CAAL,EAAmC;AACjCtC,oBAAAA,MAAM,CAAC9B,OAAP,CAAe,MAAf,EAAuB;AACrBkG,sBAAAA,OAAO,EAAE,8BAA8B5E,CAA9B,GAAkC;AADtB,qBAAvB;AAGD;AACF,iBAND;AAOD;AACF,aA7WD;AA8WA,8BAAkB,SAASoE,aAAT,GAAyB;AACzC,kBAAItE,KAAK,GAAG,KAAKqE,QAAL,CAAcC,aAAd,GAA8BL,aAAa,CAACsC,KAAK,CAACxG,UAAP,CAAvD;;AAEA,kBAAI,CAACC,KAAK,CAACgD,cAAN,CAAqB,gBAArB,CAAL,EAA6C;AAC3ChD,gBAAAA,KAAK,CAAC8J,cAAN,GAAuB,KAAvB;AACA,qBAAKlL,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGD;;AAEDV,cAAAA,WAAW,CAAChG,IAAZ,CAAiB,IAAjB,EAAuB,KAAKiG,QAA5B;;AAEA,kBAAIrE,KAAK,CAAC+J,iBAAN,IAA2B,CAAC/J,KAAK,CAACgD,cAAN,CAAqB,cAArB,CAAhC,EAAsE;AACpE,qBAAKpE,OAAL,CAAa,MAAb,EAAqB;AACnBkG,kBAAAA,OAAO,EAAE;AADU,iBAArB;AAGD;AACF,aA/XD;AAgYA,4BAAgB,SAASkF,WAAT,GAAuB;AACrC;AACA,kBAAIN,YAAY,GAAG,KAAKrF,QAAL,CAAc0B,QAAd,CAAuBzG,MAA1C;AACA,kBAAI2K,IAAI,GAAGhG,aAAa,CAACsC,KAAK,CAACxG,UAAP,CAAxB;AACA,kBAAImK,MAAM,GAAGD,IAAI,CAACpJ,IAAL,IAAaoJ,IAAI,CAACpJ,IAAL,KAAc,MAAxC;AACAwE,cAAAA,UAAU,CAACe,YAAX,GAA0Bf,UAAU,CAACe,YAAX,IAA2B,EAArD;AACAf,cAAAA,UAAU,CAACe,YAAX,CAAwB5H,IAAxB,CAA6ByL,IAA7B;;AAEA,kBAAIA,IAAI,CAAC9H,SAAT,EAAoB;AAClB,oBAAI,CAAC8H,IAAI,CAAC9H,SAAL,CAAea,cAAf,CAA8B,QAA9B,CAAL,EAA8C;AAC5C;AACAiH,kBAAAA,IAAI,CAAC9H,SAAL,CAAe3C,MAAf,GAAwB0K,MAAM,GAAGjE,oBAAH,GAA0B,CAAxD;;AAEA,sBAAIiE,MAAJ,EAAY;AACVjE,oBAAAA,oBAAoB,GAAGgE,IAAI,CAAC9H,SAAL,CAAe3C,MAAf,GAAwByK,IAAI,CAAC9H,SAAL,CAAe7C,MAA9D;AACD;AACF;AACF;;AAED,kBAAI6K,KAAK,GAAG9E,UAAU,CAACe,YAAX,CAAwB9G,MAAxB,GAAiC,CAA7C;AACA,mBAAKkK,wBAAL,CAA8B,0BAA0BW,KAA1B,GAAkC,gBAAlC,GAAqDT,YAAnF,EAAiGnD,KAAK,CAACxG,UAAvG,EAAmH,CAAC,MAAD,EAAS,KAAT,CAAnH;;AAEA,kBAAI,CAACkK,IAAI,CAACpJ,IAAV,EAAgB;AACd;AACD,eAxBoC,CAwBnC;AACF;;;AAGA,mBAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmF,UAAU,CAACe,YAAX,CAAwB9G,MAAxB,GAAiC,CAArD,EAAwDY,CAAC,EAAzD,EAA6D;AAC3D,oBAAIkK,SAAS,GAAG/E,UAAU,CAACe,YAAX,CAAwBlG,CAAxB,CAAhB;;AAEA,oBAAI,CAACkK,SAAS,CAACvJ,IAAf,EAAqB;AACnB;AACD;;AAED,oBAAIuJ,SAAS,CAACvJ,IAAV,KAAmBoJ,IAAI,CAACpJ,IAA5B,EAAkC;AAChC,uBAAKjC,OAAL,CAAa,MAAb,EAAqB;AACnBkG,oBAAAA,OAAO,EAAE,0BAA0BqF,KAA1B,GAAkC,gBAAlC,GAAqDT,YAArD,GAAoE,qBAApE,GAA4FO,IAAI,CAACpJ,IAAjG,GAAwG,oBAAxG,GAA+HX;AADrH,mBAArB;AAGD;AACF;AACF,aAzaD;AA0aA,gCAAoB,SAASmK,eAAT,GAA2B;AAC7C,kBAAIC,MAAM,GAAGrG,aAAa,CAACsC,KAAK,CAACxG,UAAP,CAA1B;AACA,mBAAKsE,QAAL,CAAcuF,gBAAd,GAAiC,KAAKvF,QAAL,CAAcuF,gBAAd,IAAkC,EAAnE;AACA,mBAAKvF,QAAL,CAAcuF,gBAAd,CAA+BpL,IAA/B,CAAoC8L,MAApC;AACA,kBAAIH,KAAK,GAAG,KAAK9F,QAAL,CAAcuF,gBAAd,CAA+BtK,MAA/B,GAAwC,CAApD;AACA,kBAAIiL,QAAQ,GAAG,CAAC,UAAD,EAAa,KAAb,CAAf;;AAEA,kBAAI/E,QAAJ,EAAc;AACZ+E,gBAAAA,QAAQ,CAAC/L,IAAT,CAAc,WAAd;AACD;;AAED,mBAAKgL,wBAAL,CAA8B,8BAA8BW,KAA5D,EAAmE5D,KAAK,CAACxG,UAAzE,EAAqFwK,QAArF;AACD,aAtbD;AAubA,wBAAY,SAASC,OAAT,GAAmB;AAC7B,mBAAKnG,QAAL,CAAcmG,OAAd,GAAwBvG,aAAa,CAACsC,KAAK,CAACxG,UAAP,CAArC;AACA,mBAAKyJ,wBAAL,CAA8B,iBAA9B,EAAiDjD,KAAK,CAACxG,UAAvD,EAAmE,CAAC,aAAD,CAAnE;;AAEA,kBAAI,KAAKsE,QAAL,CAAcmG,OAAd,CAAsBC,UAA1B,EAAsC;AACpC,qBAAKpG,QAAL,CAAcG,kBAAd,GAAmC,KAAKH,QAAL,CAAcmG,OAAd,CAAsBC,UAAzD;AACD;;AAEDrG,cAAAA,WAAW,CAAChG,IAAZ,CAAiB,IAAjB,EAAuB,KAAKiG,QAA5B;AACD;AAhcD,WAAD,EAicEkC,KAAK,CAAC/E,OAjcR,KAicoBiE,IAjcrB,EAic2BrH,IAjc3B,CAicgC+G,IAjchC;AAkcD,SArcF;AAscCrE,QAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClBuE,UAAAA,UAAU,CAACvE,GAAX,GAAiByF,KAAK,CAACzF,GAAvB;AACAsE,UAAAA,IAAI,CAAC5G,IAAL,CAAU6G,UAAV,EAFkB,CAEK;;AAEvB,cAAI,KAAKhB,QAAL,CAAcE,cAAd,IAAgC,EAAE,cAAcc,UAAhB,CAApC,EAAiE;AAC/D,iBAAKzG,OAAL,CAAa,MAAb,EAAqB;AACnBkG,cAAAA,OAAO,EAAE;AADU,aAArB;AAGAO,YAAAA,UAAU,CAAC5D,QAAX,GAAsB,KAAK4C,QAAL,CAAcE,cAApC;AACD,WATiB,CAShB;;;AAGF,cAAIgB,IAAJ,EAAU;AACRF,YAAAA,UAAU,CAAC3F,GAAX,GAAiB6F,IAAjB;AACD;;AAEDF,UAAAA,UAAU,CAACgB,QAAX,GAAsBT,eAAtB,CAhBkB,CAgBqB;;AAEvC,cAAIN,UAAJ,EAAgB;AACdD,YAAAA,UAAU,CAAC1B,GAAX,GAAiB2B,UAAjB;AACD,WApBiB,CAoBhB;;;AAGFW,UAAAA,oBAAoB,GAAG,CAAvB,CAvBkB,CAuBQ;;AAE1BZ,UAAAA,UAAU,GAAG,EAAb;AACD,SAheF;AAieCqF,QAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB,CAAC;AAC5B,SAleF;AAmeCC,QAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB;AACA,cAAIpE,KAAK,CAAC/C,OAAV,EAAmB;AACjB6B,YAAAA,UAAU,CAACsF,MAAX,GAAoBtF,UAAU,CAACsF,MAAX,IAAqB,EAAzC;AACAtF,YAAAA,UAAU,CAACsF,MAAX,CAAkBpE,KAAK,CAACjD,UAAxB,IAAsCiD,KAAK,CAAC9H,IAA5C,CAFiB,CAEiC;AACnD,WAHD,MAGO;AACL,iBAAK4F,QAAL,CAAcsG,MAAd,GAAuB,KAAKtG,QAAL,CAAcsG,MAAd,IAAwB,EAA/C;AACA,iBAAKtG,QAAL,CAAcsG,MAAd,CAAqBpE,KAAK,CAACjD,UAA3B,IAAyCiD,KAAK,CAAC9H,IAA/C;AACD;AACF;AA5eF,OAAD,EA6eG8H,KAAK,CAAC1F,IA7eT,EA6eezC,IA7ef,CA6eoB+G,IA7epB;AA8eD,KAjfD;;AAmfA,WAAOhH,KAAP;AACD;;AAED,MAAIG,MAAM,GAAGyG,MAAM,CAACxG,SAApB;;AAEAD,EAAAA,MAAM,CAACkL,wBAAP,GAAkC,SAASA,wBAAT,CAAkCoB,UAAlC,EAA8C7K,UAA9C,EAA0DwK,QAA1D,EAAoE;AACpG,QAAIM,OAAO,GAAG,EAAd;AACAN,IAAAA,QAAQ,CAAClJ,OAAT,CAAiB,UAAU3B,GAAV,EAAe;AAC9B,UAAI,CAACK,UAAU,CAACiD,cAAX,CAA0BtD,GAA1B,CAAL,EAAqC;AACnCmL,QAAAA,OAAO,CAACrM,IAAR,CAAakB,GAAb;AACD;AACF,KAJD;;AAMA,QAAImL,OAAO,CAACvL,MAAZ,EAAoB;AAClB,WAAKV,OAAL,CAAa,MAAb,EAAqB;AACnBkG,QAAAA,OAAO,EAAE8F,UAAU,GAAG,gCAAb,GAAgDC,OAAO,CAACC,IAAR,CAAa,IAAb;AADtC,OAArB;AAGD;AACF;AACD;AACF;AACA;AACA;AACA;AAlBE;;AAqBAxM,EAAAA,MAAM,CAACE,IAAP,GAAc,SAASA,IAAT,CAAcuM,KAAd,EAAqB;AACjC,SAAK/F,UAAL,CAAgBxG,IAAhB,CAAqBuM,KAArB;AACD;AACD;AACF;AACA;AACA;AACA;AAPE;;AAUAzM,EAAAA,MAAM,CAAC0M,GAAP,GAAa,SAASA,GAAT,GAAe;AAC1B;AACA,SAAKhG,UAAL,CAAgBxG,IAAhB,CAAqB,IAArB;AACA,SAAKI,OAAL,CAAa,KAAb;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbE;;AAgBAN,EAAAA,MAAM,CAAC4E,SAAP,GAAmB,SAASA,SAAT,CAAmB+H,OAAnB,EAA4B;AAC7C,SAAKhG,WAAL,CAAiB/B,SAAjB,CAA2B+H,OAA3B;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AATE;;AAYA3M,EAAAA,MAAM,CAACmF,YAAP,GAAsB,SAASA,YAAT,CAAsBwH,OAAtB,EAA+B;AACnD,SAAKhG,WAAL,CAAiBxB,YAAjB,CAA8BwH,OAA9B;AACD,GAFD;;AAIA,SAAOlG,MAAP;AACD,CApoByB,CAooBxBlH,MApoBwB,CAA1B;;AAsoBA,SAASI,UAAT,EAAqBqC,WAArB,EAAkCyE,MAAlC","sourcesContent":["/*! @name m3u8-parser @version 4.7.0 @license Apache-2.0 */\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\nvar TAB = String.fromCharCode(0x09);\n\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\n\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n      targetDuration = manifest.targetDuration,\n      partTargetDuration = manifest.partTargetDuration;\n\n  if (!serverControl) {\n    return;\n  }\n\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var hasParts = false;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n\n    _this.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      _this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this2 = this;\n\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this2.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n    var missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n  ;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };\n"]},"metadata":{},"sourceType":"module"}
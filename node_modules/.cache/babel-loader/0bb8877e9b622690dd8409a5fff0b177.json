{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { isAddress } from '../utils';\nimport useENSAddress from './useENSAddress';\nimport useENSName from './useENSName';\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\n\nexport default function useENS(nameOrAddress) {\n  _s();\n\n  const validated = isAddress(nameOrAddress);\n  const reverseLookup = useENSName(validated || undefined);\n  const lookup = useENSAddress(nameOrAddress);\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null\n  };\n}\n\n_s(useENS, \"wAsfeap4cB5IC9jA3MH0YZcUGvQ=\", false, function () {\n  return [useENSName, useENSAddress];\n});","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/hooks/useENS.ts"],"names":["isAddress","useENSAddress","useENSName","useENS","nameOrAddress","validated","reverseLookup","undefined","lookup","loading","address","name","ENSName"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,MAAT,CACbC,aADa,EAEsD;AAAA;;AACnE,QAAMC,SAAS,GAAGL,SAAS,CAACI,aAAD,CAA3B;AACA,QAAME,aAAa,GAAGJ,UAAU,CAACG,SAAS,IAAIE,SAAd,CAAhC;AACA,QAAMC,MAAM,GAAGP,aAAa,CAACG,aAAD,CAA5B;AAEA,SAAO;AACLK,IAAAA,OAAO,EAAEH,aAAa,CAACG,OAAd,IAAyBD,MAAM,CAACC,OADpC;AAELC,IAAAA,OAAO,EAAEL,SAAS,IAAIG,MAAM,CAACE,OAFxB;AAGLC,IAAAA,IAAI,EAAEL,aAAa,CAACM,OAAd,GAAwBN,aAAa,CAACM,OAAtC,GAAgD,CAACP,SAAD,IAAcG,MAAM,CAACE,OAArB,GAA+BN,aAAa,IAAI,IAAhD,GAAuD;AAHxG,GAAP;AAKD;;GAZuBD,M;UAIAD,U,EACPD,a","sourcesContent":["import { isAddress } from '../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(\n  nameOrAddress?: string | null\n): { loading: boolean; address: string | null; name: string | null } {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
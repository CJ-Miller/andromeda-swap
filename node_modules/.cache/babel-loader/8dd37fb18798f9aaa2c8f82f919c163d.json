{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/Popups/PopupItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useEffect } from 'react';\nimport { X } from 'react-feather';\nimport { useSpring } from 'react-spring/web';\nimport styled, { ThemeContext } from 'styled-components';\nimport { animated } from 'react-spring';\nimport { useRemovePopup } from '../../state/application/hooks';\nimport ListUpdatePopup from './ListUpdatePopup';\nimport TransactionPopup from './TransactionPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n_c = StyledClose;\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({\n  theme\n}) => theme.colors.invertedContrast};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    min-width: 290px;\n  }\n`;\n_c2 = Popup;\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${({\n  theme\n}) => theme.colors.tertiary};\n`;\nconst AnimatedFader = animated(Fader);\n_c3 = AnimatedFader;\nexport default function PopupItem({\n  removeAfterMs,\n  content,\n  popKey\n}) {\n  _s();\n\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined;\n    const timeout = setTimeout(() => {\n      removeThisPopup();\n    }, removeAfterMs);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [removeAfterMs, removeThisPopup]);\n  const theme = useContext(ThemeContext);\n  let popupContent;\n\n  if ('txn' in content) {\n    const {\n      txn: {\n        hash,\n        success,\n        summary\n      }\n    } = content;\n    popupContent = /*#__PURE__*/_jsxDEV(TransactionPopup, {\n      hash: hash,\n      success: success,\n      summary: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }, this);\n  } else if ('listUpdate' in content) {\n    const {\n      listUpdate: {\n        listUrl,\n        oldList,\n        newList,\n        auto\n      }\n    } = content;\n    popupContent = /*#__PURE__*/_jsxDEV(ListUpdatePopup, {\n      popKey: popKey,\n      listUrl: listUrl,\n      oldList: oldList,\n      newList: newList,\n      auto: auto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 20\n    }, this);\n  }\n\n  const faderStyle = useSpring({\n    from: {\n      width: '100%'\n    },\n    to: {\n      width: '0%'\n    },\n    config: {\n      duration: removeAfterMs !== null && removeAfterMs !== void 0 ? removeAfterMs : undefined\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    children: [/*#__PURE__*/_jsxDEV(StyledClose, {\n      color: theme.colors.textSubtle,\n      onClick: removeThisPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), popupContent, removeAfterMs !== null ? /*#__PURE__*/_jsxDEV(AnimatedFader, {\n      style: faderStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopupItem, \"H4O0V3H6+KUO7pJyuhmVR7vwNxw=\", false, function () {\n  return [useRemovePopup, useSpring];\n});\n\n_c4 = PopupItem;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledClose\");\n$RefreshReg$(_c2, \"Popup\");\n$RefreshReg$(_c3, \"AnimatedFader\");\n$RefreshReg$(_c4, \"PopupItem\");","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/Popups/PopupItem.tsx"],"names":["React","useCallback","useContext","useEffect","X","useSpring","styled","ThemeContext","animated","useRemovePopup","ListUpdatePopup","TransactionPopup","StyledClose","Popup","div","theme","colors","invertedContrast","mediaQueries","sm","Fader","tertiary","AnimatedFader","PopupItem","removeAfterMs","content","popKey","removePopup","removeThisPopup","undefined","timeout","setTimeout","clearTimeout","popupContent","txn","hash","success","summary","listUpdate","listUrl","oldList","newList","auto","faderStyle","from","width","to","config","duration","textSubtle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,CAAT,QAAkB,eAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,mBAArC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,OAAO,MAAMC,WAAW,GAAGN,MAAM,CAACF,CAAD,CAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;KAAMQ,W;AASb,OAAO,MAAMC,KAAK,GAAGP,MAAM,CAACQ,GAAI;AAChC;AACA;AACA;AACA,sBAAsB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,gBAAiB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CAdO;MAAMN,K;AAeb,MAAMO,KAAK,GAAGd,MAAM,CAACQ,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,sBAAsB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaK,QAAS;AAC3D,CAPA;AASA,MAAMC,aAAa,GAAGd,QAAQ,CAACY,KAAD,CAA9B;MAAME,a;AAEN,eAAe,SAASC,SAAT,CAAmB;AAChCC,EAAAA,aADgC;AAEhCC,EAAAA,OAFgC;AAGhCC,EAAAA;AAHgC,CAAnB,EAQZ;AAAA;;AACD,QAAMC,WAAW,GAAGlB,cAAc,EAAlC;AACA,QAAMmB,eAAe,GAAG3B,WAAW,CAAC,MAAM0B,WAAW,CAACD,MAAD,CAAlB,EAA4B,CAACA,MAAD,EAASC,WAAT,CAA5B,CAAnC;AACAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,aAAa,KAAK,IAAtB,EAA4B,OAAOK,SAAP;AAE5B,UAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BH,MAAAA,eAAe;AAChB,KAFyB,EAEvBJ,aAFuB,CAA1B;AAIA,WAAO,MAAM;AACXQ,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACD,KAFD;AAGD,GAVQ,EAUN,CAACN,aAAD,EAAgBI,eAAhB,CAVM,CAAT;AAYA,QAAMb,KAAK,GAAGb,UAAU,CAACK,YAAD,CAAxB;AAEA,MAAI0B,YAAJ;;AACA,MAAI,SAASR,OAAb,EAAsB;AACpB,UAAM;AACJS,MAAAA,GAAG,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB;AADD,QAEFZ,OAFJ;AAGAQ,IAAAA,YAAY,gBAAG,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEE,IAAxB;AAA8B,MAAA,OAAO,EAAEC,OAAvC;AAAgD,MAAA,OAAO,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,YAAf;AACD,GALD,MAKO,IAAI,gBAAgBZ,OAApB,EAA6B;AAClC,UAAM;AACJa,MAAAA,UAAU,EAAE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,OAAX;AAAoBC,QAAAA,OAApB;AAA6BC,QAAAA;AAA7B;AADR,QAEFjB,OAFJ;AAGAQ,IAAAA,YAAY,gBAAG,QAAC,eAAD;AAAiB,MAAA,MAAM,EAAEP,MAAzB;AAAiC,MAAA,OAAO,EAAEa,OAA1C;AAAmD,MAAA,OAAO,EAAEC,OAA5D;AAAqE,MAAA,OAAO,EAAEC,OAA9E;AAAuF,MAAA,IAAI,EAAEC;AAA7F;AAAA;AAAA;AAAA;AAAA,YAAf;AACD;;AAED,QAAMC,UAAU,GAAGtC,SAAS,CAAC;AAC3BuC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADqB;AAE3BC,IAAAA,EAAE,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAFuB;AAG3BE,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAExB,aAAF,aAAEA,aAAF,cAAEA,aAAF,GAAmBK;AAA7B;AAHmB,GAAD,CAA5B;AAMA,sBACE,QAAC,KAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEd,KAAK,CAACC,MAAN,CAAaiC,UAAjC;AAA6C,MAAA,OAAO,EAAErB;AAAtD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGK,YAFH,EAGGT,aAAa,KAAK,IAAlB,gBAAyB,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEmB;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAzB,GAAgE,IAHnE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnDuBpB,S;UASFd,c,EA6BDJ,S;;;MAtCGkB,S","sourcesContent":["import React, { useCallback, useContext, useEffect } from 'react'\nimport { X } from 'react-feather'\nimport { useSpring } from 'react-spring/web'\nimport styled, { ThemeContext } from 'styled-components'\nimport { animated } from 'react-spring'\nimport { PopupContent } from '../../state/application/actions'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport ListUpdatePopup from './ListUpdatePopup'\nimport TransactionPopup from './TransactionPopup'\n\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 290px;\n  }\n`\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${({ theme }) => theme.colors.tertiary};\n`\n\nconst AnimatedFader = animated(Fader)\n\nexport default function PopupItem({\n  removeAfterMs,\n  content,\n  popKey\n}: {\n  removeAfterMs: number | null\n  content: PopupContent\n  popKey: string\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined\n\n    const timeout = setTimeout(() => {\n      removeThisPopup()\n    }, removeAfterMs)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [removeAfterMs, removeThisPopup])\n\n  const theme = useContext(ThemeContext)\n\n  let popupContent\n  if ('txn' in content) {\n    const {\n      txn: { hash, success, summary }\n    } = content\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />\n  } else if ('listUpdate' in content) {\n    const {\n      listUpdate: { listUrl, oldList, newList, auto }\n    } = content\n    popupContent = <ListUpdatePopup popKey={popKey} listUrl={listUrl} oldList={oldList} newList={newList} auto={auto} />\n  }\n\n  const faderStyle = useSpring({\n    from: { width: '100%' },\n    to: { width: '0%' },\n    config: { duration: removeAfterMs ?? undefined }\n  })\n\n  return (\n    <Popup>\n      <StyledClose color={theme.colors.textSubtle} onClick={removeThisPopup} />\n      {popupContent}\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\n    </Popup>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
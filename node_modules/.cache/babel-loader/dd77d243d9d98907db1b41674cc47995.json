{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/Popover/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { transparentize } from 'polished';\nimport React, { useCallback, useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport styled from 'styled-components';\nimport Portal from '@reach/portal';\nimport useInterval from '../../hooks/useInterval';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PopoverContainer = styled.div`\n  z-index: 9999;\n\n  visibility: ${props => props.show ? 'visible' : 'hidden'};\n  opacity: ${props => props.show ? 1 : 0};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({\n  theme\n}) => theme.colors.invertedContrast};\n  border: 1px solid ${({\n  theme\n}) => theme.colors.tertiary};\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  border-radius: 8px;\n`;\n_c = PopoverContainer;\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`;\n_c2 = ReferenceElement;\nconst Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid ${({\n  theme\n}) => theme.colors.tertiary};\n    transform: rotate(45deg);\n    background: ${({\n  theme\n}) => theme.colors.invertedContrast};\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`;\n_c3 = Arrow;\nexport default function Popover({\n  content,\n  show,\n  children,\n  placement = 'auto'\n}) {\n  _s();\n\n  var _attributes$popper$da, _attributes$popper;\n\n  const [referenceElement, setReferenceElement] = useState(null);\n  const [popperElement, setPopperElement] = useState(null);\n  const [arrowElement, setArrowElement] = useState(null);\n  const {\n    styles,\n    update,\n    attributes\n  } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [{\n      name: 'offset',\n      options: {\n        offset: [8, 8]\n      }\n    }, {\n      name: 'arrow',\n      options: {\n        element: arrowElement\n      }\n    }]\n  });\n  const updateCallback = useCallback(() => {\n    if (update) {\n      update();\n    }\n  }, [update]);\n  useInterval(updateCallback, show ? 100 : null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReferenceElement, {\n      ref: setReferenceElement,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Portal, {\n      children: /*#__PURE__*/_jsxDEV(PopoverContainer, {\n        show: show,\n        ref: setPopperElement,\n        style: styles.popper,\n        ...attributes.popper,\n        children: [content, /*#__PURE__*/_jsxDEV(Arrow, {\n          className: `arrow-${(_attributes$popper$da = (_attributes$popper = attributes.popper) === null || _attributes$popper === void 0 ? void 0 : _attributes$popper['data-popper-placement']) !== null && _attributes$popper$da !== void 0 ? _attributes$popper$da : ''}`,\n          ref: setArrowElement,\n          style: styles.arrow,\n          ...attributes.arrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Popover, \"OEEyg3XCAR9JOB8Y3yn6+65M580=\", false, function () {\n  return [usePopper, useInterval];\n});\n\n_c4 = Popover;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PopoverContainer\");\n$RefreshReg$(_c2, \"ReferenceElement\");\n$RefreshReg$(_c3, \"Arrow\");\n$RefreshReg$(_c4, \"Popover\");","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/Popover/index.tsx"],"names":["transparentize","React","useCallback","useState","usePopper","styled","Portal","useInterval","PopoverContainer","div","props","show","theme","colors","invertedContrast","tertiary","textSubtle","ReferenceElement","Arrow","Popover","content","children","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","styles","update","attributes","strategy","modifiers","name","options","offset","element","updateCallback","popper","arrow"],"mappings":"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","sourcesContent":["import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useCallback, useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport Portal from '@reach/portal'\nimport useInterval from '../../hooks/useInterval'\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\n  color: ${({ theme }) => theme.colors.textSubtle};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid ${({ theme }) => theme.colors.tertiary};\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.colors.invertedContrast};\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } },\n    ],\n  })\n  const updateCallback = useCallback(() => {\n    if (update) {\n      update()\n    }\n  }, [update])\n  useInterval(updateCallback, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n          {content}\n          <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement as any}\n            style={styles.arrow}\n            {...attributes.arrow}\n          />\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
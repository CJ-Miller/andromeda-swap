{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/swap/TradePrice.tsx\";\nimport React from 'react';\nimport { SyncAltIcon, Text } from '@pancakeswap-libs/uikit';\nimport { StyledBalanceMaxMini } from './styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TradePrice({\n  price,\n  showInverted,\n  setShowInverted\n}) {\n  var _price$invert, _price$quoteCurrency, _price$baseCurrency, _price$baseCurrency2, _price$quoteCurrency2;\n\n  const formattedPrice = showInverted ? price === null || price === void 0 ? void 0 : price.toSignificant(6) : price === null || price === void 0 ? void 0 : (_price$invert = price.invert()) === null || _price$invert === void 0 ? void 0 : _price$invert.toSignificant(6);\n  const show = Boolean((price === null || price === void 0 ? void 0 : price.baseCurrency) && (price === null || price === void 0 ? void 0 : price.quoteCurrency));\n  const label = showInverted ? `${price === null || price === void 0 ? void 0 : (_price$quoteCurrency = price.quoteCurrency) === null || _price$quoteCurrency === void 0 ? void 0 : _price$quoteCurrency.symbol} per ${price === null || price === void 0 ? void 0 : (_price$baseCurrency = price.baseCurrency) === null || _price$baseCurrency === void 0 ? void 0 : _price$baseCurrency.symbol}` : `${price === null || price === void 0 ? void 0 : (_price$baseCurrency2 = price.baseCurrency) === null || _price$baseCurrency2 === void 0 ? void 0 : _price$baseCurrency2.symbol} per ${price === null || price === void 0 ? void 0 : (_price$quoteCurrency2 = price.quoteCurrency) === null || _price$quoteCurrency2 === void 0 ? void 0 : _price$quoteCurrency2.symbol}`;\n  return /*#__PURE__*/_jsxDEV(Text, {\n    fontSize: \"14px\",\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex'\n    },\n    children: show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [formattedPrice !== null && formattedPrice !== void 0 ? formattedPrice : '-', \" \", label, /*#__PURE__*/_jsxDEV(StyledBalanceMaxMini, {\n        onClick: () => setShowInverted(!showInverted),\n        children: /*#__PURE__*/_jsxDEV(SyncAltIcon, {\n          width: \"20px\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : '-'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = TradePrice;\n\nvar _c;\n\n$RefreshReg$(_c, \"TradePrice\");","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/swap/TradePrice.tsx"],"names":["React","SyncAltIcon","Text","StyledBalanceMaxMini","TradePrice","price","showInverted","setShowInverted","formattedPrice","toSignificant","invert","show","Boolean","baseCurrency","quoteCurrency","label","symbol","justifyContent","alignItems","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,yBAAlC;AACA,SAASC,oBAAT,QAAqC,WAArC;;;AAQA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAApB,EAA+E;AAAA;;AAC5F,QAAMC,cAAc,GAAGF,YAAY,GAAGD,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEI,aAAP,CAAqB,CAArB,CAAH,GAA6BJ,KAA7B,aAA6BA,KAA7B,wCAA6BA,KAAK,CAAEK,MAAP,EAA7B,kDAA6B,cAAiBD,aAAjB,CAA+B,CAA/B,CAAhE;AAEA,QAAME,IAAI,GAAGC,OAAO,CAAC,CAAAP,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEQ,YAAP,MAAuBR,KAAvB,aAAuBA,KAAvB,uBAAuBA,KAAK,CAAES,aAA9B,CAAD,CAApB;AACA,QAAMC,KAAK,GAAGT,YAAY,GACrB,GAAED,KAAH,aAAGA,KAAH,+CAAGA,KAAK,CAAES,aAAV,yDAAG,qBAAsBE,MAAO,QAAOX,KAAvC,aAAuCA,KAAvC,8CAAuCA,KAAK,CAAEQ,YAA9C,wDAAuC,oBAAqBG,MAAO,EAD7C,GAErB,GAAEX,KAAH,aAAGA,KAAH,+CAAGA,KAAK,CAAEQ,YAAV,yDAAG,qBAAqBG,MAAO,QAAOX,KAAtC,aAAsCA,KAAtC,gDAAsCA,KAAK,CAAES,aAA7C,0DAAsC,sBAAsBE,MAAO,EAFvE;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE,QAAlB;AAA4BC,MAAAA,UAAU,EAAE,QAAxC;AAAkDC,MAAAA,OAAO,EAAE;AAA3D,KAA7B;AAAA,cACGR,IAAI,gBACH;AAAA,iBACGH,cADH,aACGA,cADH,cACGA,cADH,GACqB,GADrB,OAC2BO,KAD3B,eAEE,QAAC,oBAAD;AAAsB,QAAA,OAAO,EAAE,MAAMR,eAAe,CAAC,CAACD,YAAF,CAApD;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,MAAnB;AAA0B,UAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADG,GAQH;AATJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;KAtBuBF,U","sourcesContent":["import React from 'react'\nimport { Price } from '@pancakeswap-libs/sdk'\nimport { SyncAltIcon, Text } from '@pancakeswap-libs/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text fontSize=\"14px\" style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <SyncAltIcon width=\"20px\" color=\"primary\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from '@pancakeswap-libs/uikit';\n\nconst defaultOnDismiss = () => null;\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`;\nconst Divider = styled.div`\n  margin: 24px 0 12px;\n  width: 100%;\n  height: 1px;\n  background-color: ${({\n  theme\n}) => theme.colors.borderColor};\n`;\n\nconst V2ExchangeRedirectModal = ({\n  onDismiss = defaultOnDismiss,\n  handleCloseModal\n}) => {\n  _s();\n\n  const [timerSecondsRemaining, setTimerSecondsRemaining] = useState(5);\n  useEffect(() => {\n    const tick = () => {\n      setTimerSecondsRemaining(prevSeconds => prevSeconds - 1);\n    };\n\n    const timerInterval = setInterval(() => tick(), 1000);\n\n    const preventClickHandler = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      return false;\n    };\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach(el => {\n      el.addEventListener('click', preventClickHandler, true);\n    });\n\n    if (timerSecondsRemaining <= 0) {\n      clearInterval(timerInterval);\n    }\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach(el => {\n        el.removeEventListener('click', preventClickHandler, true);\n      });\n      clearInterval(timerInterval);\n    };\n  }, [timerSecondsRemaining]); // <Modal onDismiss={onDismiss} title=\"Redirecting to V2 Exchange\" hideCloseButton>\n  //   <Flex flexDirection=\"column\" maxWidth=\"320px\" alignItems=\"center\" justifyContent=\"center\">\n  //     <Text color=\"failure\" mb=\"16px\">\n  //       PancakeSwap V1 is no longer supported.\n  //     </Text>\n  //     <Text textAlign=\"center\" mb=\"8px\">\n  //       You will be automatically redirected to the v2 exchange in:\n  //     </Text>\n  //     <Heading size=\"lg\" textAlign=\"center\">\n  //       {timerSecondsRemaining}s\n  //     </Heading>\n  //     <Divider />\n  //     <StyledLink href=\"https://exchange.pancakeswap.finance/#/swap\" external>\n  //       <Button mt=\"8px\" width=\"100%\">\n  //         Go to V2 Exchange now\n  //       </Button>\n  //     </StyledLink>\n  //     <Button\n  //       mt=\"12px\"\n  //       width=\"100%\"\n  //       variant=\"text\"\n  //       onClick={() => {\n  //         onDismiss()\n  //         handleCloseModal()\n  //       }}\n  //     >\n  //       Close\n  //     </Button>\n  //   </Flex>\n  // </Modal>\n};\n\n_s(V2ExchangeRedirectModal, \"RRlzLDke2w4xSKlSdefzRj4yE9E=\");\n\n_c = V2ExchangeRedirectModal;\nexport default V2ExchangeRedirectModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"V2ExchangeRedirectModal\");","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/V2ExchangeRedirectModal/index.tsx"],"names":["useState","useEffect","styled","Link","defaultOnDismiss","StyledLink","Divider","div","theme","colors","borderColor","V2ExchangeRedirectModal","onDismiss","handleCloseModal","timerSecondsRemaining","setTimerSecondsRemaining","tick","prevSeconds","timerInterval","setInterval","preventClickHandler","e","stopPropagation","preventDefault","document","querySelectorAll","forEach","el","addEventListener","clearInterval","removeEventListener"],"mappings":";;AAAA,SAAgBA,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAsBC,IAAtB,QAAyD,yBAAzD;;AAEA,MAAMC,gBAAgB,GAAG,MAAM,IAA/B;;AAEA,MAAMC,UAAU,GAAGH,MAAM,CAACC,IAAD,CAAO;AAChC;AACA,CAFA;AAIA,MAAMG,OAAO,GAAGJ,MAAM,CAACK,GAAI;AAC3B;AACA;AACA;AACA,sBAAsB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,WAAY;AAC9D,CALA;;AAYA,MAAMC,uBAAuB,GAAG,CAAC;AAAEC,EAAAA,SAAS,GAAGR,gBAAd;AAAgCS,EAAAA;AAAhC,CAAD,KAAsF;AAAA;;AACpH,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDf,QAAQ,CAAC,CAAD,CAAlE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,IAAI,GAAG,MAAM;AACjBD,MAAAA,wBAAwB,CAAEE,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAxB;AACD,KAFD;;AAIA,UAAMC,aAAa,GAAGC,WAAW,CAAC,MAAMH,IAAI,EAAX,EAAe,IAAf,CAAjC;;AAEA,UAAMI,mBAAmB,GAAIC,CAAD,IAAO;AACjCA,MAAAA,CAAC,CAACC,eAAF;AACAD,MAAAA,CAAC,CAACE,cAAF;AACA,aAAO,KAAP;AACD,KAJD;;AAMAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,uBAA1B,EAAmDC,OAAnD,CAA4DC,EAAD,IAAQ;AACjEA,MAAAA,EAAE,CAACC,gBAAH,CAAoB,OAApB,EAA6BR,mBAA7B,EAAkD,IAAlD;AACD,KAFD;;AAIA,QAAIN,qBAAqB,IAAI,CAA7B,EAAgC;AAC9Be,MAAAA,aAAa,CAACX,aAAD,CAAb;AACD;;AAED,WAAO,MAAM;AACXM,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,uBAA1B,EAAmDC,OAAnD,CAA4DC,EAAD,IAAQ;AACjEA,QAAAA,EAAE,CAACG,mBAAH,CAAuB,OAAvB,EAAgCV,mBAAhC,EAAqD,IAArD;AACD,OAFD;AAGAS,MAAAA,aAAa,CAACX,aAAD,CAAb;AACD,KALD;AAMD,GA3BQ,EA2BN,CAACJ,qBAAD,CA3BM,CAAT,CAHoH,CAgCpH;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA/DD;;GAAMH,uB;;KAAAA,uB;AAiEN,eAAeA,uBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Link, Button, Flex, Heading } from '@pancakeswap-libs/uikit'\n\nconst defaultOnDismiss = () => null\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst Divider = styled.div`\n  margin: 24px 0 12px;\n  width: 100%;\n  height: 1px;\n  background-color: ${({ theme }) => theme.colors.borderColor};\n`\n\ntype V2ExchangeRedirectModalProps = {\n  onDismiss?: () => void\n  handleCloseModal: () => void\n}\n\nconst V2ExchangeRedirectModal = ({ onDismiss = defaultOnDismiss, handleCloseModal }: V2ExchangeRedirectModalProps) => {\n  const [timerSecondsRemaining, setTimerSecondsRemaining] = useState(5)\n\n  useEffect(() => {\n    const tick = () => {\n      setTimerSecondsRemaining((prevSeconds) => prevSeconds - 1)\n    }\n\n    const timerInterval = setInterval(() => tick(), 1000)\n\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    if (timerSecondsRemaining <= 0) {\n      clearInterval(timerInterval)\n    }\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n      clearInterval(timerInterval)\n    }\n  }, [timerSecondsRemaining])\n\n  // <Modal onDismiss={onDismiss} title=\"Redirecting to V2 Exchange\" hideCloseButton>\n  //   <Flex flexDirection=\"column\" maxWidth=\"320px\" alignItems=\"center\" justifyContent=\"center\">\n  //     <Text color=\"failure\" mb=\"16px\">\n  //       PancakeSwap V1 is no longer supported.\n  //     </Text>\n\n  //     <Text textAlign=\"center\" mb=\"8px\">\n  //       You will be automatically redirected to the v2 exchange in:\n  //     </Text>\n  //     <Heading size=\"lg\" textAlign=\"center\">\n  //       {timerSecondsRemaining}s\n  //     </Heading>\n  //     <Divider />\n  //     <StyledLink href=\"https://exchange.pancakeswap.finance/#/swap\" external>\n  //       <Button mt=\"8px\" width=\"100%\">\n  //         Go to V2 Exchange now\n  //       </Button>\n  //     </StyledLink>\n  //     <Button\n  //       mt=\"12px\"\n  //       width=\"100%\"\n  //       variant=\"text\"\n  //       onClick={() => {\n  //         onDismiss()\n  //         handleCloseModal()\n  //       }}\n  //     >\n  //       Close\n  //     </Button>\n  //   </Flex>\n  // </Modal>\n}\n\nexport default V2ExchangeRedirectModal\n"]},"metadata":{},"sourceType":"module"}
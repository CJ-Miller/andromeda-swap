{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/Menu/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { allLanguages } from 'constants/localisation/languageCodes';\nimport { LanguageContext } from 'hooks/LanguageContext';\nimport useTheme from 'hooks/useTheme';\nimport useGetPriceData from 'hooks/useGetPriceData';\nimport useGetLocalProfile from 'hooks/useGetLocalProfile';\nimport useAuth from 'hooks/useAuth';\nimport links from './config';\nimport { CAKE } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = props => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    login,\n    logout\n  } = useAuth();\n  const {\n    selectedLanguage,\n    setSelectedLanguage\n  } = useContext(LanguageContext);\n  const {\n    isDark,\n    toggleTheme\n  } = useTheme();\n  const priceData = useGetPriceData();\n  const cakePriceUsd = priceData ? Number(priceData.data[CAKE.address].price) : undefined;\n  const profile = useGetLocalProfile();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: /*#__PURE__*/_jsxDEV(UikitMenu, {\n      links: links,\n      account: account,\n      login: login,\n      logout: logout,\n      isDark: isDark,\n      toggleTheme: toggleTheme,\n      currentLang: (selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.code) || '',\n      langs: allLanguages,\n      setLang: setSelectedLanguage,\n      cakePriceUsd: cakePriceUsd,\n      profile: profile,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"3l9ecCN5mdEYV52FgQTjB+THHCU=\", false, function () {\n  return [useWeb3React, useAuth, useTheme, useGetPriceData, useGetLocalProfile];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useGetPriceData","useGetLocalProfile","useAuth","links","CAKE","props","account","login","logout","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","priceData","cakePriceUsd","Number","data","address","price","undefined","profile","code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAI,IAAIC,SAAjB,QAAkC,yBAAlC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,MAAMV,IAAc,GAAIW,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAcV,YAAY,EAAhC;AACA,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBN,OAAO,EAAjC;AACA,QAAM;AAAEO,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4CjB,UAAU,CAACK,eAAD,CAA5D;AACA,QAAM;AAAEa,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0Bb,QAAQ,EAAxC;AACA,QAAMc,SAAS,GAAGb,eAAe,EAAjC;AACA,QAAMc,YAAY,GAAGD,SAAS,GAAGE,MAAM,CAACF,SAAS,CAACG,IAAV,CAAeZ,IAAI,CAACa,OAApB,EAA6BC,KAA9B,CAAT,GAAgDC,SAA9E;AACA,QAAMC,OAAO,GAAGnB,kBAAkB,EAAlC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAEE,KADT;AAEE,MAAA,OAAO,EAAEG,OAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,MAAM,EAAEC,MAJV;AAKE,MAAA,MAAM,EAAEG,MALV;AAME,MAAA,WAAW,EAAEC,WANf;AAOE,MAAA,WAAW,EAAE,CAAAH,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEY,IAAlB,KAA0B,EAPzC;AAQE,MAAA,KAAK,EAAExB,YART;AASE,MAAA,OAAO,EAAEa,mBATX;AAUE,MAAA,YAAY,EAAEI,YAVhB;AAWE,MAAA,OAAO,EAAEM,OAXX;AAAA,SAYMf;AAZN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3BD;;GAAMX,I;UACgBE,Y,EACMM,O,EAEMH,Q,EACdC,e,EAEFC,kB;;;KAPZP,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'constants/localisation/languageCodes'\nimport { LanguageContext } from 'hooks/LanguageContext'\nimport useTheme from 'hooks/useTheme'\nimport useGetPriceData from 'hooks/useGetPriceData'\nimport useGetLocalProfile from 'hooks/useGetLocalProfile'\nimport useAuth from 'hooks/useAuth'\nimport links from './config'\nimport { CAKE } from '../../constants'\n\nconst Menu: React.FC = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const priceData = useGetPriceData()\n  const cakePriceUsd = priceData ? Number(priceData.data[CAKE.address].price) : undefined\n  const profile = useGetLocalProfile()\n\n  return (\n    <div className=\"menu\">\n      <UikitMenu\n        links={links}\n        account={account as string}\n        login={login}\n        logout={logout}\n        isDark={isDark}\n        toggleTheme={toggleTheme}\n        currentLang={selectedLanguage?.code || ''}\n        langs={allLanguages}\n        setLang={setSelectedLanguage}\n        cakePriceUsd={cakePriceUsd}\n        profile={profile}\n        {...props}\n      />\n    </div>\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}
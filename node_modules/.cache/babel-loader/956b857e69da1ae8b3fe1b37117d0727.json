{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport { useActiveWeb3React } from 'hooks';\nconst initialState = {\n  profileLink: 'https://pancakeswap.finance/profile',\n  noProfileLink: 'https://pancakeswap.finance/profile'\n};\n/**\n * Note - this will only work if the app is on the same domain\n */\n\nconst useGetLocalProfile = () => {\n  _s();\n\n  const [profile, setProfile] = useState(initialState);\n  const {\n    account\n  } = useActiveWeb3React();\n  useEffect(() => {\n    if (account) {\n      try {\n        const localData = Cookies.get(`profile_${account}`);\n\n        if (localData) {\n          const localProfile = JSON.parse(localData);\n          setProfile(prevProfile => ({ ...prevProfile,\n            username: localProfile.username,\n            image: localProfile.avatar\n          }));\n        }\n      } catch (error) {\n        setProfile(initialState);\n      }\n    } else {\n      setProfile(initialState);\n    }\n  }, [account, setProfile]);\n  return profile;\n};\n\n_s(useGetLocalProfile, \"s0Leo3faObuWX9cyJ/2MfewGrNE=\", false, function () {\n  return [useActiveWeb3React];\n});\n\nexport default useGetLocalProfile;","map":{"version":3,"sources":["/Users/cj/Desktop/swap-attempts/swap2/src/hooks/useGetLocalProfile.ts"],"names":["useEffect","useState","Cookies","useActiveWeb3React","initialState","profileLink","noProfileLink","useGetLocalProfile","profile","setProfile","account","localData","get","localProfile","JSON","parse","prevProfile","username","image","avatar","error"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,qCADM;AAEnBC,EAAAA,aAAa,EAAE;AAFI,CAArB;AAKA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAACG,YAAD,CAAtC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAcP,kBAAkB,EAAtC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAJ,EAAa;AACX,UAAI;AACF,cAAMC,SAAS,GAAGT,OAAO,CAACU,GAAR,CAAa,WAAUF,OAAQ,EAA/B,CAAlB;;AAEA,YAAIC,SAAJ,EAAe;AACb,gBAAME,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAArB;AAEAF,UAAAA,UAAU,CAAEO,WAAD,KAAkB,EAC3B,GAAGA,WADwB;AAE3BC,YAAAA,QAAQ,EAAEJ,YAAY,CAACI,QAFI;AAG3BC,YAAAA,KAAK,EAAEL,YAAY,CAACM;AAHO,WAAlB,CAAD,CAAV;AAKD;AACF,OAZD,CAYE,OAAOC,KAAP,EAAc;AACdX,QAAAA,UAAU,CAACL,YAAD,CAAV;AACD;AACF,KAhBD,MAgBO;AACLK,MAAAA,UAAU,CAACL,YAAD,CAAV;AACD;AACF,GApBQ,EAoBN,CAACM,OAAD,EAAUD,UAAV,CApBM,CAAT;AAsBA,SAAOD,OAAP;AACD,CA3BD;;GAAMD,kB;UAEgBJ,kB;;;AA2BtB,eAAeI,kBAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Cookies from 'js-cookie'\nimport { useActiveWeb3React } from 'hooks'\n\nconst initialState = {\n  profileLink: 'https://pancakeswap.finance/profile',\n  noProfileLink: 'https://pancakeswap.finance/profile',\n}\n\n/**\n * Note - this will only work if the app is on the same domain\n */\nconst useGetLocalProfile = () => {\n  const [profile, setProfile] = useState(initialState)\n  const { account } = useActiveWeb3React()\n\n  useEffect(() => {\n    if (account) {\n      try {\n        const localData = Cookies.get(`profile_${account}`)\n\n        if (localData) {\n          const localProfile = JSON.parse(localData)\n\n          setProfile((prevProfile) => ({\n            ...prevProfile,\n            username: localProfile.username,\n            image: localProfile.avatar,\n          }))\n        }\n      } catch (error) {\n        setProfile(initialState)\n      }\n    } else {\n      setProfile(initialState)\n    }\n  }, [account, setProfile])\n\n  return profile\n}\n\nexport default useGetLocalProfile\n"]},"metadata":{},"sourceType":"module"}
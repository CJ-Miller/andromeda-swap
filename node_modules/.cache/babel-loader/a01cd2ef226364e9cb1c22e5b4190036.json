{"ast":null,"code":"export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/node_modules/@videojs/vhs-utils/es/opus-helpers.js"],"names":["OPUS_HEAD","Uint8Array","parseOpusHead","bytes","view","DataView","buffer","byteOffset","byteLength","version","getUint8","littleEndian","config","channels","preSkip","getUint16","sampleRate","getUint32","outputGain","channelMappingFamily","length","streamCount","twoChannelStreamCount","channelMapping","c","push","setOpusHead","size","ArrayBuffer","setUint8","setUint16","setUint32","foreach","cm","i"],"mappings":"AAAA,OAAO,IAAIA,SAAS,GAAG,IAAIC,UAAJ,CAAe,CAAC;AACvC,IADsC,EAChC,IADgC,EAC1B,IAD0B,EACpB,IADoB,EACd;AACxB,IAFsC,EAEhC,IAFgC,EAE1B,IAF0B,EAEpB,IAFoB,CAAf,CAAhB,C,CAEmB;AAC1B;AACA;;AAEA,OAAO,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AACvD,MAAIC,IAAI,GAAG,IAAIC,QAAJ,CAAaF,KAAK,CAACG,MAAnB,EAA2BH,KAAK,CAACI,UAAjC,EAA6CJ,KAAK,CAACK,UAAnD,CAAX;AACA,MAAIC,OAAO,GAAGL,IAAI,CAACM,QAAL,CAAc,CAAd,CAAd,CAFuD,CAEvB;;AAEhC,MAAIC,YAAY,GAAGF,OAAO,KAAK,CAA/B;AACA,MAAIG,MAAM,GAAG;AACXH,IAAAA,OAAO,EAAEA,OADE;AAEXI,IAAAA,QAAQ,EAAET,IAAI,CAACM,QAAL,CAAc,CAAd,CAFC;AAGXI,IAAAA,OAAO,EAAEV,IAAI,CAACW,SAAL,CAAe,CAAf,EAAkBJ,YAAlB,CAHE;AAIXK,IAAAA,UAAU,EAAEZ,IAAI,CAACa,SAAL,CAAe,CAAf,EAAkBN,YAAlB,CAJD;AAKXO,IAAAA,UAAU,EAAEd,IAAI,CAACW,SAAL,CAAe,CAAf,EAAkBJ,YAAlB,CALD;AAMXQ,IAAAA,oBAAoB,EAAEf,IAAI,CAACM,QAAL,CAAc,EAAd;AANX,GAAb;;AASA,MAAIE,MAAM,CAACO,oBAAP,GAA8B,CAA9B,IAAmChB,KAAK,CAACiB,MAAN,GAAe,EAAtD,EAA0D;AACxDR,IAAAA,MAAM,CAACS,WAAP,GAAqBjB,IAAI,CAACM,QAAL,CAAc,EAAd,CAArB;AACAE,IAAAA,MAAM,CAACU,qBAAP,GAA+BlB,IAAI,CAACM,QAAL,CAAc,EAAd,CAA/B;AACAE,IAAAA,MAAM,CAACW,cAAP,GAAwB,EAAxB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAAM,CAACC,QAA3B,EAAqCW,CAAC,EAAtC,EAA0C;AACxCZ,MAAAA,MAAM,CAACW,cAAP,CAAsBE,IAAtB,CAA2BrB,IAAI,CAACM,QAAL,CAAc,KAAKc,CAAnB,CAA3B;AACD;AACF;;AAED,SAAOZ,MAAP;AACD,CAzBM;AA0BP,OAAO,IAAIc,WAAW,GAAG,SAASA,WAAT,CAAqBd,MAArB,EAA6B;AACpD,MAAIe,IAAI,GAAGf,MAAM,CAACO,oBAAP,IAA+B,CAA/B,GAAmC,EAAnC,GAAwC,KAAKP,MAAM,CAACC,QAA/D;AACA,MAAIT,IAAI,GAAG,IAAIC,QAAJ,CAAa,IAAIuB,WAAJ,CAAgBD,IAAhB,CAAb,CAAX;AACA,MAAIhB,YAAY,GAAGC,MAAM,CAACH,OAAP,KAAmB,CAAtC;AACAL,EAAAA,IAAI,CAACyB,QAAL,CAAc,CAAd,EAAiBjB,MAAM,CAACH,OAAxB;AACAL,EAAAA,IAAI,CAACyB,QAAL,CAAc,CAAd,EAAiBjB,MAAM,CAACC,QAAxB;AACAT,EAAAA,IAAI,CAAC0B,SAAL,CAAe,CAAf,EAAkBlB,MAAM,CAACE,OAAzB,EAAkCH,YAAlC;AACAP,EAAAA,IAAI,CAAC2B,SAAL,CAAe,CAAf,EAAkBnB,MAAM,CAACI,UAAzB,EAAqCL,YAArC;AACAP,EAAAA,IAAI,CAAC0B,SAAL,CAAe,CAAf,EAAkBlB,MAAM,CAACM,UAAzB,EAAqCP,YAArC;AACAP,EAAAA,IAAI,CAACyB,QAAL,CAAc,EAAd,EAAkBjB,MAAM,CAACO,oBAAzB;;AAEA,MAAIP,MAAM,CAACO,oBAAP,GAA8B,CAAlC,EAAqC;AACnCf,IAAAA,IAAI,CAACyB,QAAL,CAAc,EAAd,EAAkBjB,MAAM,CAACS,WAAzB;AACAT,IAAAA,MAAM,CAACW,cAAP,CAAsBS,OAAtB,CAA8B,UAAUC,EAAV,EAAcC,CAAd,EAAiB;AAC7C9B,MAAAA,IAAI,CAACyB,QAAL,CAAc,KAAKK,CAAnB,EAAsBD,EAAtB;AACD,KAFD;AAGD;;AAED,SAAO,IAAIhC,UAAJ,CAAeG,IAAI,CAACE,MAApB,CAAP;AACD,CAnBM","sourcesContent":["export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};"]},"metadata":{},"sourceType":"module"}
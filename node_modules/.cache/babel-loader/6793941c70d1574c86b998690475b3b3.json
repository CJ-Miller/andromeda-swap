{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/SecondCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { Card, CardHeader, CardBody, Text, Box, Button, Flex, ArrowDownIcon, Link } from '@pancakeswap-libs/uikit';\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks';\nimport { StyledInternalLink } from 'components/Shared';\nimport { useActiveWeb3React } from 'hooks';\nimport { usePairs } from 'data/Reserves';\nimport FullPositionCard from 'components/PositionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ArrowSeparator = () => /*#__PURE__*/_jsxDEV(Flex, {\n  justifyContent: \"center\",\n  my: \"24px\",\n  children: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n    color: \"textSubtle\",\n    width: \"24px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = ArrowSeparator;\n\nconst SecondCard = () => {\n  _s();\n\n  const {\n    account\n  } = useActiveWeb3React(); // fetch the user's balances of all tracked V2 LP tokens\n\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(() => trackedTokenPairs.map(tokens => ({\n    liquidityToken: toV2LiquidityToken(tokens),\n    tokens\n  })), [trackedTokenPairs]);\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [tokenPairsWithLiquidityTokens]);\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, liquidityTokens); // fetch the reserves for all V2 pools in which the user has a balance\n\n  const liquidityTokensWithBalances = useMemo(() => tokenPairsWithLiquidityTokens.filter(({\n    liquidityToken\n  }) => {\n    var _v2PairsBalances$liqu;\n\n    return (_v2PairsBalances$liqu = v2PairsBalances[liquidityToken.address]) === null || _v2PairsBalances$liqu === void 0 ? void 0 : _v2PairsBalances$liqu.greaterThan('0');\n  }), [tokenPairsWithLiquidityTokens, v2PairsBalances]);\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({\n    tokens\n  }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.length) < liquidityTokensWithBalances.length || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.some(V2Pair => !V2Pair));\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter(v2Pair => Boolean(v2Pair));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: \"Remove Liquidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        small: true,\n        color: \"textSubtle\",\n        children: \"Unstake your old LP tokens from the old liquidity pools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: \"V1 LP Tokens in wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: v2IsLoading ? /*#__PURE__*/_jsxDEV(CardBody, {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [(allV2PairsWithLiquidity === null || allV2PairsWithLiquidity === void 0 ? void 0 : allV2PairsWithLiquidity.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: allV2PairsWithLiquidity.map((v2Pair, index) => /*#__PURE__*/_jsxDEV(Box, {\n              mb: index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0,\n              children: /*#__PURE__*/_jsxDEV(FullPositionCard, {\n                pair: v2Pair\n              }, v2Pair.liquidityToken.address, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(Text, {\n            color: \"textDisabled\",\n            textAlign: \"center\",\n            children: \"No liquidity found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            mt: \"16px\",\n            textAlign: \"center\",\n            children: [\"Don't see a pool you joined?\", ' ', /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n              id: \"import-pool-link\",\n              to: \"/find\",\n              children: \"Import it\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrowSeparator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: \"Discontinued V2 LP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"center\",\n            mb: \"16px\",\n            children: \"If you added liquidity to V2 LPs during the migration attempt on April 23, you need to unstake and remove liquidity.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            as: Link,\n            external: true,\n            href: \"https://hiccup.pancakeswap.finance/#/pool\",\n            style: {\n              width: '100%'\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SecondCard, \"vpXK73LuVwTOCapiUTvFJQCHDUg=\", false, function () {\n  return [useActiveWeb3React, useTrackedTokenPairs, useTokenBalancesWithLoadingIndicator, usePairs];\n});\n\n_c2 = SecondCard;\nexport default SecondCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ArrowSeparator\");\n$RefreshReg$(_c2, \"SecondCard\");","map":{"version":3,"sources":["/Users/cj/Desktop/swap-attempts/swap2/src/pages/Migration/SecondCard.tsx"],"names":["React","useMemo","Card","CardHeader","CardBody","Text","Box","Button","Flex","ArrowDownIcon","Link","useTokenBalancesWithLoadingIndicator","toV2LiquidityToken","useTrackedTokenPairs","StyledInternalLink","useActiveWeb3React","usePairs","FullPositionCard","ArrowSeparator","SecondCard","account","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","undefined","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","index","width"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { Card, CardHeader, CardBody, Text, Box, Button, Flex, ArrowDownIcon, Link } from '@pancakeswap-libs/uikit'\nimport { Pair } from '@pancakeswap-libs/sdk'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { StyledInternalLink } from 'components/Shared'\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport FullPositionCard from 'components/PositionCard'\n\nconst ArrowSeparator = () => (\n  <Flex justifyContent=\"center\" my=\"24px\">\n    <ArrowDownIcon color=\"textSubtle\" width=\"24px\" />\n  </Flex>\n)\n\nconst SecondCard = () => {\n  const { account } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens,\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  return (\n    <Card>\n      <CardHeader>\n        <Text bold>Remove Liquidity</Text>\n        <Text small color=\"textSubtle\">\n          Unstake your old LP tokens from the old liquidity pools\n        </Text>\n      </CardHeader>\n      <CardBody>\n        <Text bold>V1 LP Tokens in wallet</Text>\n        <Card>\n          {v2IsLoading ? (\n            <CardBody>Loading</CardBody>\n          ) : (\n            <CardBody>\n              {allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair, index) => (\n                    <Box mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}>\n                      <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                    </Box>\n                  ))}\n                </>\n              ) : (\n                <Text color=\"textDisabled\" textAlign=\"center\">\n                  No liquidity found.\n                </Text>\n              )}\n              <Text mt=\"16px\" textAlign=\"center\">\n                Don&apos;t see a pool you joined?{' '}\n                <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\n                  Import it\n                </StyledInternalLink>\n              </Text>\n            </CardBody>\n          )}\n        </Card>\n        <ArrowSeparator />\n        <Text bold>Discontinued V2 LP</Text>\n        <Card>\n          <CardBody>\n            <Text textAlign=\"center\" mb=\"16px\">\n              If you added liquidity to V2 LPs during the migration attempt on April 23, you need to unstake and remove\n              liquidity.\n            </Text>\n            <Button as={Link} external href=\"https://hiccup.pancakeswap.finance/#/pool\" style={{ width: '100%' }}>\n              Remove\n            </Button>\n          </CardBody>\n        </Card>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SecondCard\n"]},"metadata":{},"sourceType":"module"}
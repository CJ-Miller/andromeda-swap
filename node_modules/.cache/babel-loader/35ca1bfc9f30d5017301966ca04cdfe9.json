{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/PageHeader/AudioSetting.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, Flex, Text, PancakeToggle, useMatchBreakpoints } from '@pancakeswap-libs/uikit';\nimport { useAudioModeManager } from 'state/user/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AudioSetting = ({\n  translateString\n}) => {\n  _s();\n\n  const {\n    isSm,\n    isXs\n  } = useMatchBreakpoints();\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mb: \"16px\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      mb: \"8px\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: translateString(999, 'Audio')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(PancakeToggle, {\n        scale: isSm || isXs ? 'sm' : 'md',\n        checked: audioPlay,\n        onChange: toggleSetAudioMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AudioSetting, \"t5bp9Kn/DU8/E50WNQOgNbTlmrY=\", false, function () {\n  return [useMatchBreakpoints, useAudioModeManager];\n});\n\n_c = AudioSetting;\nexport default AudioSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioSetting\");","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/PageHeader/AudioSetting.tsx"],"names":["React","Box","Flex","Text","PancakeToggle","useMatchBreakpoints","useAudioModeManager","AudioSetting","translateString","isSm","isXs","audioPlay","toggleSetAudioMode"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,aAA1B,EAAyCC,mBAAzC,QAAoE,yBAApE;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAMA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiD;AAAA;;AACpE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBL,mBAAmB,EAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,kBAAZ,IAAkCN,mBAAmB,EAA3D;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAA0B,MAAA,EAAE,EAAC,KAA7B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,kBAAYE,eAAe,CAAC,GAAD,EAAM,OAAN;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEC,IAAI,IAAIC,IAAR,GAAe,IAAf,GAAsB,IAA5C;AAAkD,QAAA,OAAO,EAAEC,SAA3D;AAAsE,QAAA,QAAQ,EAAEC;AAAhF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAdD;;GAAML,Y;UACmBF,mB,EACiBC,mB;;;KAFpCC,Y;AAgBN,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport { Box, Flex, Text, PancakeToggle, useMatchBreakpoints } from '@pancakeswap-libs/uikit'\nimport { useAudioModeManager } from 'state/user/hooks'\n\ntype AudioSettingModalProps = {\n  translateString: (translationId: number, fallback: string) => string\n}\n\nconst AudioSetting = ({ translateString }: AudioSettingModalProps) => {\n  const { isSm, isXs } = useMatchBreakpoints()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n\n  return (\n    <Box mb=\"16px\">\n      <Flex alignItems=\"center\" mb=\"8px\">\n        <Text bold>{translateString(999, 'Audio')}</Text>\n      </Flex>\n      <Box>\n        <PancakeToggle scale={isSm || isXs ? 'sm' : 'md'} checked={audioPlay} onChange={toggleSetAudioMode} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default AudioSetting\n"]},"metadata":{},"sourceType":"module"}
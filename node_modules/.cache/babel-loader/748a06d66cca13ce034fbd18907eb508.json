{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/swap-attempts/swap2/src/components/Shared/Common.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components'; // A button that triggers some onClick result, but looks like a link.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LinkStyledButton = styled.button`\n  border: none;\n  text-decoration: none;\n  background: none;\n\n  cursor: ${({\n  disabled\n}) => disabled ? 'default' : 'pointer'};\n  color: ${({\n  theme,\n  disabled\n}) => disabled ? theme.colors.textSubtle : theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: ${({\n  disabled\n}) => disabled ? null : 'underline'};\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: ${({\n  disabled\n}) => disabled ? null : 'underline'};\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`; // An internal link from the react-router-dom library that is correctly styled\n\nexport const StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({\n  theme\n}) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`;\nconst StyledLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({\n  theme\n}) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`;\n/**\n * Outbound link that handles firing google analytics events\n */\n\n_c = StyledLink;\nexport function ExternalLink({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}) {\n  _s();\n\n  const handleClick = useCallback(event => {\n    if (!(target === '_blank' || event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n    }\n  }, [target]);\n  return /*#__PURE__*/_jsxDEV(StyledLink, {\n    target: target,\n    rel: rel,\n    href: href,\n    onClick: handleClick,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ExternalLink, \"PRIOWs9bezaAbp8UlGmbaZMoYYA=\");\n\n_c2 = ExternalLink;\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nexport const Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledLink\");\n$RefreshReg$(_c2, \"ExternalLink\");","map":{"version":3,"sources":["/Users/cj/Desktop/swap-attempts/swap2/src/components/Shared/Common.tsx"],"names":["React","useCallback","Link","styled","keyframes","LinkStyledButton","button","disabled","theme","colors","textSubtle","primary","StyledInternalLink","StyledLink","a","ExternalLink","target","href","rel","rest","handleClick","event","ctrlKey","metaKey","preventDefault","rotate","Spinner","img"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC,C,CAEA;;;AACA,OAAO,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,MAA+B;AACtE;AACA;AACA;AACA;AACA,YAAY,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmBA,QAAQ,GAAG,SAAH,GAAe,SAAW;AACjE,WAAW,CAAC;AAAEC,EAAAA,KAAF;AAASD,EAAAA;AAAT,CAAD,KAA0BA,QAAQ,GAAGC,KAAK,CAACC,MAAN,CAAaC,UAAhB,GAA6BF,KAAK,CAACC,MAAN,CAAaE,OAAS;AAChG;AACA;AACA;AACA,uBAAuB,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAmBA,QAAQ,GAAG,IAAH,GAAU,WAAa;AACzE;AACA;AACA;AACA;AACA,uBAAuB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAmBA,QAAQ,GAAG,IAAH,GAAU,WAAa;AACzE;AACA;AACA;AACA;AACA;AACA,CArBO,C,CAuBP;;AACA,OAAO,MAAMK,kBAAkB,GAAGT,MAAM,CAACD,IAAD,CAAO;AAC/C;AACA;AACA,WAAW,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaE,OAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAoBP,MAAME,UAAU,GAAGV,MAAM,CAACW,CAAE;AAC5B;AACA;AACA,WAAW,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaE,OAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;AAoBA;AACA;AACA;;KAtBME,U;AAuBN,OAAO,SAASE,YAAT,CAAsB;AAC3BC,EAAAA,MAAM,GAAG,QADkB;AAE3BC,EAAAA,IAF2B;AAG3BC,EAAAA,GAAG,GAAG,qBAHqB;AAI3B,KAAGC;AAJwB,CAAtB,EAK6E;AAAA;;AAClF,QAAMC,WAAW,GAAGnB,WAAW,CAC5BoB,KAAD,IAAgD;AAC9C,QAAI,EAAEL,MAAM,KAAK,QAAX,IAAuBK,KAAK,CAACC,OAA7B,IAAwCD,KAAK,CAACE,OAAhD,CAAJ,EAA8D;AAC5DF,MAAAA,KAAK,CAACG,cAAN;AACD;AACF,GAL4B,EAM7B,CAACR,MAAD,CAN6B,CAA/B;AAQA,sBAAO,QAAC,UAAD;AAAY,IAAA,MAAM,EAAEA,MAApB;AAA4B,IAAA,GAAG,EAAEE,GAAjC;AAAsC,IAAA,IAAI,EAAED,IAA5C;AAAkD,IAAA,OAAO,EAAEG,WAA3D;AAAA,OAA4ED;AAA5E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAfeJ,Y;;MAAAA,Y;AAiBhB,MAAMU,MAAM,GAAGrB,SAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,OAAO,MAAMsB,OAAO,GAAGvB,MAAM,CAACwB,GAAI;AAClC,kBAAkBF,MAAO;AACzB;AACA;AACA,CAJO","sourcesContent":["import React, { HTMLProps, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled, { keyframes } from 'styled-components'\n\n// A button that triggers some onClick result, but looks like a link.\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\n  border: none;\n  text-decoration: none;\n  background: none;\n\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n  color: ${({ theme, disabled }) => (disabled ? theme.colors.textSubtle : theme.colors.primary)};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n// An internal link from the react-router-dom library that is correctly styled\nexport const StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n/**\n * Outbound link that handles firing google analytics events\n */\nexport function ExternalLink({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\n      if (!(target === '_blank' || event.ctrlKey || event.metaKey)) {\n        event.preventDefault()\n      }\n    },\n    [target]\n  )\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nexport const Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`\n"]},"metadata":{},"sourceType":"module"}
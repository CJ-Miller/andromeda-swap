{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/pages/Pool/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useMemo } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Button, CardBody, Text } from '@blzd-dev/uikit';\nimport CardNav from 'components/CardNav';\nimport Question from 'components/QuestionHelper';\nimport FullPositionCard from 'components/PositionCard';\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks';\nimport { StyledInternalLink } from 'components/Shared';\nimport { LightCard } from 'components/Card';\nimport { RowBetween } from 'components/Row';\nimport { AutoColumn } from 'components/Column';\nimport Container from 'components/Container';\nimport { useActiveWeb3React } from 'hooks';\nimport { usePairs } from 'data/Reserves';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks';\nimport { Dots } from 'components/swap/styleds';\nimport useI18n from 'hooks/useI18n';\nimport PageHeader from 'components/PageHeader';\nimport AppBody from '../AppBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pool() {\n  _s();\n\n  const theme = useContext(ThemeContext);\n  const {\n    account\n  } = useActiveWeb3React();\n  const TranslateString = useI18n(); // fetch the user's balances of all tracked V2 LP tokens\n\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(() => trackedTokenPairs.map(tokens => ({\n    liquidityToken: toV2LiquidityToken(tokens),\n    tokens\n  })), [trackedTokenPairs]);\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [tokenPairsWithLiquidityTokens]);\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, liquidityTokens); // fetch the reserves for all V2 pools in which the user has a balance\n\n  const liquidityTokensWithBalances = useMemo(() => tokenPairsWithLiquidityTokens.filter(({\n    liquidityToken\n  }) => {\n    var _v2PairsBalances$liqu;\n\n    return (_v2PairsBalances$liqu = v2PairsBalances[liquidityToken.address]) === null || _v2PairsBalances$liqu === void 0 ? void 0 : _v2PairsBalances$liqu.greaterThan('0');\n  }), [tokenPairsWithLiquidityTokens, v2PairsBalances]);\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({\n    tokens\n  }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.length) < liquidityTokensWithBalances.length || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.some(V2Pair => !V2Pair));\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter(v2Pair => Boolean(v2Pair));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CardNav, {\n      activeIndex: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: TranslateString(262, 'Liquidity'),\n        description: TranslateString(1168, 'Add liquidity to receive LP tokens'),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"join-pool-button\",\n          disabled: true,\n          mb: \"16px\",\n          children: TranslateString(168, \"You can't add liquidity on V1\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"lg\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"12px\",\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              padding: \"0 8px\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                color: theme.colors.text,\n                children: TranslateString(107, 'Your Liquidity')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Question, {\n                text: TranslateString(1170, 'When you add liquidity, you are given pool tokens that represent your share. If you donâ€™t see a pool you joined in this list, try importing a pool below.')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), !account ? /*#__PURE__*/_jsxDEV(LightCard, {\n              padding: \"40px\",\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                color: \"textDisabled\",\n                textAlign: \"center\",\n                children: TranslateString(156, 'Connect to a wallet to view your liquidity.')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this) : v2IsLoading ? /*#__PURE__*/_jsxDEV(LightCard, {\n              padding: \"40px\",\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                color: \"textDisabled\",\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Dots, {\n                  children: \"Loading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this) : (allV2PairsWithLiquidity === null || allV2PairsWithLiquidity === void 0 ? void 0 : allV2PairsWithLiquidity.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: allV2PairsWithLiquidity.map(v2Pair => /*#__PURE__*/_jsxDEV(FullPositionCard, {\n                pair: v2Pair\n              }, v2Pair.liquidityToken.address, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this))\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(LightCard, {\n              padding: \"40px\",\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                color: \"textDisabled\",\n                textAlign: \"center\",\n                children: TranslateString(104, 'No liquidity found.')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"14px\",\n                style: {\n                  padding: '.5rem 0 .5rem 0'\n                },\n                children: [TranslateString(106, \"Don't see a pool you joined?\"), ' ', /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                  id: \"import-pool-link\",\n                  to: \"/find\",\n                  children: TranslateString(108, 'Import it.')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"14px\",\n                style: {\n                  padding: '.5rem 0 .5rem 0'\n                },\n                children: TranslateString(1172, 'Or, if you staked your LP tokens in a farm, unstake them to see them here.')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pool, \"mFpYL+WrfC1/JdPFnezHoDIAU0M=\", false, function () {\n  return [useActiveWeb3React, useI18n, useTrackedTokenPairs, useTokenBalancesWithLoadingIndicator, usePairs];\n});\n\n_c = Pool;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pool\");","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/pages/Pool/index.tsx"],"names":["React","useContext","useMemo","ThemeContext","Button","CardBody","Text","CardNav","Question","FullPositionCard","useTokenBalancesWithLoadingIndicator","StyledInternalLink","LightCard","RowBetween","AutoColumn","Container","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","Dots","useI18n","PageHeader","AppBody","Pool","theme","account","TranslateString","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","undefined","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","width","colors","text","padding"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Pair } from '@pancakeswap-libs/sdk'\nimport { Button, CardBody, Text } from '@blzd-dev/uikit'\nimport CardNav from 'components/CardNav'\nimport Question from 'components/QuestionHelper'\nimport FullPositionCard from 'components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { StyledInternalLink } from 'components/Shared'\nimport { LightCard } from 'components/Card'\nimport { RowBetween } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport Container from 'components/Container'\n\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { Dots } from 'components/swap/styleds'\nimport useI18n from 'hooks/useI18n'\nimport PageHeader from 'components/PageHeader'\nimport AppBody from '../AppBody'\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n  const TranslateString = useI18n()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens,\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  return (\n    <Container>\n      <CardNav activeIndex={1} />\n      <AppBody>\n        <PageHeader\n          title={TranslateString(262, 'Liquidity')}\n          description={TranslateString(1168, 'Add liquidity to receive LP tokens')}\n        >\n          <Button id=\"join-pool-button\" disabled mb=\"16px\">\n            {TranslateString(168, \"You can't add liquidity on V1\")}\n          </Button>\n        </PageHeader>\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <CardBody>\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n              <RowBetween padding=\"0 8px\">\n                <Text color={theme.colors.text}>{TranslateString(107, 'Your Liquidity')}</Text>\n                <Question\n                  text={TranslateString(\n                    1170,\n                    'When you add liquidity, you are given pool tokens that represent your share. If you donâ€™t see a pool you joined in this list, try importing a pool below.'\n                  )}\n                />\n              </RowBetween>\n\n              {!account ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {TranslateString(156, 'Connect to a wallet to view your liquidity.')}\n                  </Text>\n                </LightCard>\n              ) : v2IsLoading ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    <Dots>Loading</Dots>\n                  </Text>\n                </LightCard>\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                  ))}\n                </>\n              ) : (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {TranslateString(104, 'No liquidity found.')}\n                  </Text>\n                </LightCard>\n              )}\n\n              <div>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {TranslateString(106, \"Don't see a pool you joined?\")}{' '}\n                  <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\n                    {TranslateString(108, 'Import it.')}\n                  </StyledInternalLink>\n                </Text>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {TranslateString(1172, 'Or, if you staked your LP tokens in a farm, unstake them to see them here.')}\n                </Text>\n              </div>\n            </AutoColumn>\n          </CardBody>\n        </AutoColumn>\n      </AppBody>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
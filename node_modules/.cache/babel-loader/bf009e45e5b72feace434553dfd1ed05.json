{"ast":null,"code":"import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/node_modules/@videojs/vhs-utils/es/id3-helpers.js"],"names":["toUint8","bytesMatch","ID3","getId3Size","bytes","offset","flags","returnSize","footerPresent","getId3Offset","length"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,mBAApC;AACA,IAAIC,GAAG,GAAGF,OAAO,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CAAjB;AACA,OAAO,IAAIG,UAAU,GAAG,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;AACzD,MAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AACrBA,IAAAA,MAAM,GAAG,CAAT;AACD;;AAEDD,EAAAA,KAAK,GAAGJ,OAAO,CAACI,KAAD,CAAf;AACA,MAAIE,KAAK,GAAGF,KAAK,CAACC,MAAM,GAAG,CAAV,CAAjB;AACA,MAAIE,UAAU,GAAGH,KAAK,CAACC,MAAM,GAAG,CAAV,CAAL,IAAqB,EAArB,GAA0BD,KAAK,CAACC,MAAM,GAAG,CAAV,CAAL,IAAqB,EAA/C,GAAoDD,KAAK,CAACC,MAAM,GAAG,CAAV,CAAL,IAAqB,CAAzE,GAA6ED,KAAK,CAACC,MAAM,GAAG,CAAV,CAAnG;AACA,MAAIG,aAAa,GAAG,CAACF,KAAK,GAAG,EAAT,KAAgB,CAApC;;AAEA,MAAIE,aAAJ,EAAmB;AACjB,WAAOD,UAAU,GAAG,EAApB;AACD;;AAED,SAAOA,UAAU,GAAG,EAApB;AACD,CAfM;AAgBP,OAAO,IAAIE,YAAY,GAAG,SAASA,YAAT,CAAsBL,KAAtB,EAA6BC,MAA7B,EAAqC;AAC7D,MAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AACrBA,IAAAA,MAAM,GAAG,CAAT;AACD;;AAEDD,EAAAA,KAAK,GAAGJ,OAAO,CAACI,KAAD,CAAf;;AAEA,MAAIA,KAAK,CAACM,MAAN,GAAeL,MAAf,GAAwB,EAAxB,IAA8B,CAACJ,UAAU,CAACG,KAAD,EAAQF,GAAR,EAAa;AACxDG,IAAAA,MAAM,EAAEA;AADgD,GAAb,CAA7C,EAEI;AACF,WAAOA,MAAP;AACD;;AAEDA,EAAAA,MAAM,IAAIF,UAAU,CAACC,KAAD,EAAQC,MAAR,CAApB,CAb6D,CAaxB;AACrC;AACA;;AAEA,SAAOI,YAAY,CAACL,KAAD,EAAQC,MAAR,CAAnB;AACD,CAlBM","sourcesContent":["import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/pages/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { StringTranslations } from '@crowdin/crowdin-api-client';\nimport { useModal } from '@pancakeswap-libs/uikit';\nimport VersionBar from 'components/VersionBar';\nimport Popups from '../components/Popups';\nimport Web3ReactManager from '../components/Web3ReactManager';\nimport { RedirectDuplicateTokenIds, RedirectOldAddLiquidityPathStructure } from './AddLiquidity/redirects';\nimport { RedirectOldRemoveLiquidityPathStructure } from './RemoveLiquidity/redirects';\nimport AddLiquidity from './AddLiquidity';\nimport Pool from './Pool';\nimport PoolFinder from './PoolFinder';\nimport RemoveLiquidity from './RemoveLiquidity';\nimport Swap from './Swap';\nimport Migration from './Migration';\nimport { RedirectPathToSwapOnly } from './Swap/redirects';\nimport { allLanguages } from '../constants/localisation/languageCodes';\nimport { LanguageContext } from '../hooks/LanguageContext';\nimport { TranslationsContext } from '../hooks/TranslationsContext';\nimport UseV2ExchangeModal from '../components/UseV2ExchangeModal';\nimport Menu from '../components/Menu';\nimport useGetDocumentTitlePrice from '../hooks/useGetDocumentTitlePrice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  overflow-x: hidden;\n`;\n_c = AppWrapper;\nconst BodyWrapper = styled.div`\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1;\n  margin-bottom: 64px;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    margin-bottom: 0;\n  }\n`;\n_c2 = BodyWrapper;\nconst CACHE_KEY = 'pancakeSwapLanguage';\nexport default function App() {\n  _s();\n\n  const [selectedLanguage, setSelectedLanguage] = useState(undefined);\n  const [translatedLanguage, setTranslatedLanguage] = useState(undefined);\n  const [translations, setTranslations] = useState([]);\n  const apiKey = `${process.env.REACT_APP_CROWDIN_APIKEY}`;\n  const projectId = parseInt(`${process.env.REACT_APP_CROWDIN_PROJECTID}`);\n  const fileId = 6;\n  const credentials = {\n    token: apiKey\n  };\n  const stringTranslationsApi = new StringTranslations(credentials);\n  const [hasSeenModal, setHasSeenModal] = useState(false);\n  const [onPresentUseV2ExchangeModal] = useModal( /*#__PURE__*/_jsxDEV(UseV2ExchangeModal, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 50\n  }, this));\n  useEffect(() => {\n    const showModal = () => {\n      onPresentUseV2ExchangeModal();\n      setHasSeenModal(true);\n    };\n\n    if (!hasSeenModal) {\n      showModal();\n    }\n  }, [onPresentUseV2ExchangeModal, hasSeenModal]);\n\n  const getStoredLang = storedLangCode => {\n    return allLanguages.filter(language => {\n      return language.code === storedLangCode;\n    })[0];\n  };\n\n  const fetchTranslationsForSelectedLanguage = async () => {\n    stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200).then(translationApiResponse => {\n      if (translationApiResponse.data.length < 1) {\n        setTranslations(['error']);\n      } else {\n        setTranslations(translationApiResponse.data);\n      }\n    }).then(() => setTranslatedLanguage(selectedLanguage)).catch(error => {\n      setTranslations(['error']);\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [selectedLanguage]);\n\n  const handleLanguageSelect = langObject => {\n    setSelectedLanguage(langObject);\n    localStorage.setItem(CACHE_KEY, langObject.code);\n  };\n\n  useGetDocumentTitlePrice();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: null,\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(AppWrapper, {\n        children: /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n          value: {\n            selectedLanguage,\n            setSelectedLanguage: handleLanguageSelect,\n            translatedLanguage,\n            setTranslatedLanguage\n          },\n          children: /*#__PURE__*/_jsxDEV(TranslationsContext.Provider, {\n            value: {\n              translations,\n              setTranslations\n            },\n            children: [/*#__PURE__*/_jsxDEV(Menu, {\n              children: /*#__PURE__*/_jsxDEV(BodyWrapper, {\n                children: [/*#__PURE__*/_jsxDEV(Popups, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Web3ReactManager, {\n                  children: /*#__PURE__*/_jsxDEV(Switch, {\n                    children: [/*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      strict: true,\n                      path: \"/swap\",\n                      component: Swap\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      strict: true,\n                      path: \"/find\",\n                      component: PoolFinder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      strict: true,\n                      path: \"/pool\",\n                      component: Pool\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      path: \"/add\",\n                      component: AddLiquidity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      path: \"/migrate\",\n                      component: Migration\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      strict: true,\n                      path: \"/remove/:currencyIdA/:currencyIdB\",\n                      component: RemoveLiquidity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      path: \"/add/:currencyIdA\",\n                      component: RedirectOldAddLiquidityPathStructure\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      path: \"/add/:currencyIdA/:currencyIdB\",\n                      component: RedirectDuplicateTokenIds\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      strict: true,\n                      path: \"/remove/:tokens\",\n                      component: RedirectOldRemoveLiquidityPathStructure\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      component: RedirectPathToSwapOnly\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(VersionBar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"E79zT70M4Ip3pnB49zfLeWKf89E=\", false, function () {\n  return [useModal, useGetDocumentTitlePrice];\n});\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AppWrapper\");\n$RefreshReg$(_c2, \"BodyWrapper\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/pages/App.tsx"],"names":["React","Suspense","useEffect","useState","HashRouter","Route","Switch","styled","StringTranslations","useModal","VersionBar","Popups","Web3ReactManager","RedirectDuplicateTokenIds","RedirectOldAddLiquidityPathStructure","RedirectOldRemoveLiquidityPathStructure","AddLiquidity","Pool","PoolFinder","RemoveLiquidity","Swap","Migration","RedirectPathToSwapOnly","allLanguages","LanguageContext","TranslationsContext","UseV2ExchangeModal","Menu","useGetDocumentTitlePrice","AppWrapper","div","BodyWrapper","theme","mediaQueries","lg","CACHE_KEY","App","selectedLanguage","setSelectedLanguage","undefined","translatedLanguage","setTranslatedLanguage","translations","setTranslations","apiKey","process","env","REACT_APP_CROWDIN_APIKEY","projectId","parseInt","REACT_APP_CROWDIN_PROJECTID","fileId","credentials","token","stringTranslationsApi","hasSeenModal","setHasSeenModal","onPresentUseV2ExchangeModal","showModal","getStoredLang","storedLangCode","filter","language","code","fetchTranslationsForSelectedLanguage","listLanguageTranslations","then","translationApiResponse","data","length","catch","error","console","handleLanguageSelect","langObject","localStorage","setItem"],"mappings":"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","sourcesContent":["import React, { Suspense, useEffect, useState } from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Credentials, StringTranslations } from '@crowdin/crowdin-api-client'\nimport { LangType, useModal } from '@pancakeswap-libs/uikit'\nimport VersionBar from 'components/VersionBar'\nimport Popups from '../components/Popups'\nimport Web3ReactManager from '../components/Web3ReactManager'\nimport { RedirectDuplicateTokenIds, RedirectOldAddLiquidityPathStructure } from './AddLiquidity/redirects'\nimport { RedirectOldRemoveLiquidityPathStructure } from './RemoveLiquidity/redirects'\nimport AddLiquidity from './AddLiquidity'\nimport Pool from './Pool'\nimport PoolFinder from './PoolFinder'\nimport RemoveLiquidity from './RemoveLiquidity'\nimport Swap from './Swap'\nimport Migration from './Migration'\nimport { RedirectPathToSwapOnly } from './Swap/redirects'\nimport { EN, allLanguages } from '../constants/localisation/languageCodes'\nimport { LanguageContext } from '../hooks/LanguageContext'\nimport { TranslationsContext } from '../hooks/TranslationsContext'\nimport UseV2ExchangeModal from '../components/UseV2ExchangeModal'\n\nimport Menu from '../components/Menu'\nimport useGetDocumentTitlePrice from '../hooks/useGetDocumentTitlePrice'\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  overflow-x: hidden;\n`\n\nconst BodyWrapper = styled.div`\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1;\n  margin-bottom: 64px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 0;\n  }\n`\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport default function App() {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(undefined)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(undefined)\n  const [translations, setTranslations] = useState<Array<any>>([])\n  const apiKey = `${process.env.REACT_APP_CROWDIN_APIKEY}`\n  const projectId = parseInt(`${process.env.REACT_APP_CROWDIN_PROJECTID}`)\n  const fileId = 6\n  const credentials: Credentials = {\n    token: apiKey,\n  }\n\n  const stringTranslationsApi = new StringTranslations(credentials)\n\n  const [hasSeenModal, setHasSeenModal] = useState(false)\n  const [onPresentUseV2ExchangeModal] = useModal(<UseV2ExchangeModal />)\n\n  useEffect(() => {\n    const showModal = () => {\n      onPresentUseV2ExchangeModal()\n      setHasSeenModal(true)\n    }\n    if (!hasSeenModal) {\n      showModal()\n    }\n  }, [onPresentUseV2ExchangeModal, hasSeenModal])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  const fetchTranslationsForSelectedLanguage = async () => {\n    stringTranslationsApi\n      .listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n      .then((translationApiResponse) => {\n        if (translationApiResponse.data.length < 1) {\n          setTranslations(['error'])\n        } else {\n          setTranslations(translationApiResponse.data)\n        }\n      })\n      .then(() => setTranslatedLanguage(selectedLanguage))\n      .catch((error) => {\n        setTranslations(['error'])\n        console.error(error)\n      })\n  }\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedLanguage])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  useGetDocumentTitlePrice()\n\n  return (\n    <Suspense fallback={null}>\n      <HashRouter>\n        <AppWrapper>\n          <LanguageContext.Provider\n            value={{\n              selectedLanguage,\n              setSelectedLanguage: handleLanguageSelect,\n              translatedLanguage,\n              setTranslatedLanguage,\n            }}\n          >\n            <TranslationsContext.Provider value={{ translations, setTranslations }}>\n              <Menu>\n                <BodyWrapper>\n                  <Popups />\n                  <Web3ReactManager>\n                    <Switch>\n                      <Route exact strict path=\"/swap\" component={Swap} />\n                      <Route exact strict path=\"/find\" component={PoolFinder} />\n                      <Route exact strict path=\"/pool\" component={Pool} />\n                      <Route exact path=\"/add\" component={AddLiquidity} />\n                      <Route exact path=\"/migrate\" component={Migration} />\n                      <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n                      {/* Redirection: These old routes are still used in the code base */}\n                      <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n                      <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n                      <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n\n                      <Route component={RedirectPathToSwapOnly} />\n                    </Switch>\n                  </Web3ReactManager>\n                </BodyWrapper>\n              </Menu>\n              <VersionBar />\n            </TranslationsContext.Provider>\n          </LanguageContext.Provider>\n        </AppWrapper>\n      </HashRouter>\n    </Suspense>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
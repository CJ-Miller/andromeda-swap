{"ast":null,"code":"/* three-orbitcontrols addendum */\nvar THREE = require('three');\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\n\nTHREE.OrbitControls = function (object, domElement) {\n  this.object = object;\n  this.domElement = domElement !== undefined ? domElement : document; // Set to false to disable this control\n\n  this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n  this.target = new THREE.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n  this.minDistance = 0;\n  this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n  this.minZoom = 0;\n  this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n\n  this.minPolarAngle = 0; // radians\n\n  this.maxPolarAngle = Math.PI; // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\n  this.minAzimuthAngle = -Infinity; // radians\n\n  this.maxAzimuthAngle = Infinity; // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n\n  this.enableDamping = false;\n  this.dampingFactor = 0.25; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0; // Set to false to disable panning\n\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = false; // if true, pan in screen-space\n\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n  // Set to false to disable use of the keys\n\n  this.enableKeys = true; // The four arrow keys\n\n  this.keys = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    BOTTOM: 40\n  }; // Mouse buttons\n\n  this.mouseButtons = {\n    LEFT: THREE.MOUSE.LEFT,\n    MIDDLE: THREE.MOUSE.MIDDLE,\n    RIGHT: THREE.MOUSE.RIGHT\n  }; // for reset\n\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom; //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n\n  this.saveState = function () {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n    scope.update();\n    state = STATE.NONE;\n  }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n  this.update = function () {\n    var offset = new THREE.Vector3(); // so camera.up is the orbit axis\n\n    var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n    var quatInverse = quat.clone().inverse();\n    var lastPosition = new THREE.Vector3();\n    var lastQuaternion = new THREE.Quaternion();\n    return function update() {\n      var position = scope.object.position;\n      offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n      offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      spherical.theta += sphericalDelta.theta;\n      spherical.phi += sphericalDelta.phi; // restrict theta to be between desired limits\n\n      spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta)); // restrict phi to be between desired limits\n\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n      spherical.makeSafe();\n      spherical.radius *= scale; // restrict radius to be between desired limits\n\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n      scope.target.add(panOffset);\n      offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n      offset.applyQuaternion(quatInverse);\n      position.copy(scope.target).add(offset);\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n        panOffset.set(0, 0, 0);\n      }\n\n      scale = 1; // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n        scope.dispatchEvent(changeEvent);\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  this.dispose = function () {\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n    window.removeEventListener('keydown', onKeyDown, false); //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  }; //\n  // internals\n  //\n\n\n  var scope = this;\n  var changeEvent = {\n    type: 'change'\n  };\n  var startEvent = {\n    type: 'start'\n  };\n  var endEvent = {\n    type: 'end'\n  };\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY_PAN: 4\n  };\n  var state = STATE.NONE;\n  var EPS = 0.000001; // current position in spherical coordinates\n\n  var spherical = new THREE.Spherical();\n  var sphericalDelta = new THREE.Spherical();\n  var scale = 1;\n  var panOffset = new THREE.Vector3();\n  var zoomChanged = false;\n  var rotateStart = new THREE.Vector2();\n  var rotateEnd = new THREE.Vector2();\n  var rotateDelta = new THREE.Vector2();\n  var panStart = new THREE.Vector2();\n  var panEnd = new THREE.Vector2();\n  var panDelta = new THREE.Vector2();\n  var dollyStart = new THREE.Vector2();\n  var dollyEnd = new THREE.Vector2();\n  var dollyDelta = new THREE.Vector2();\n\n  function getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  var panLeft = function () {\n    var v = new THREE.Vector3();\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n      v.multiplyScalar(-distance);\n      panOffset.add(v);\n    };\n  }();\n\n  var panUp = function () {\n    var v = new THREE.Vector3();\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n\n      v.multiplyScalar(distance);\n      panOffset.add(v);\n    };\n  }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n  var pan = function () {\n    var offset = new THREE.Vector3();\n    return function pan(deltaX, deltaY) {\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n      }\n    };\n  }();\n\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  } //\n  // event callbacks - update the object state\n  //\n\n\n  function handleMouseDownRotate(event) {\n    //console.log( 'handleMouseDownRotate' );\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    //console.log( 'handleMouseDownDolly' );\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    //console.log( 'handleMouseDownPan' );\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    //console.log( 'handleMouseMoveRotate' );\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    //console.log( 'handleMouseMoveDolly' );\n    dollyEnd.set(event.clientX, event.clientY);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyIn(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyOut(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    //console.log( 'handleMouseMovePan' );\n    panEnd.set(event.clientX, event.clientY);\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n\n  function handleMouseUp(event) {// console.log( 'handleMouseUp' );\n  }\n\n  function handleMouseWheel(event) {\n    // console.log( 'handleMouseWheel' );\n    if (event.deltaY < 0) {\n      dollyOut(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyIn(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    // console.log( 'handleKeyDown' );\n    var needsUpdate = false;\n\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n    }\n\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault();\n      scope.update();\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    //console.log( 'handleTouchStartRotate' );\n    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  function handleTouchStartDollyPan(event) {\n    //console.log( 'handleTouchStartDollyPan' );\n    if (scope.enableZoom) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    if (scope.enablePan) {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panStart.set(x, y);\n    }\n  }\n\n  function handleTouchMoveRotate(event) {\n    //console.log( 'handleTouchMoveRotate' );\n    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleTouchMoveDollyPan(event) {\n    //console.log( 'handleTouchMoveDollyPan' );\n    if (scope.enableZoom) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyIn(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    if (scope.enablePan) {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panEnd.set(x, y);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    scope.update();\n  }\n\n  function handleTouchEnd(event) {//console.log( 'handleTouchEnd' );\n  } //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n\n  function onMouseDown(event) {\n    if (scope.enabled === false) return; // Prevent the browser from scrolling.\n\n    event.preventDefault(); // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n    switch (event.button) {\n      case scope.mouseButtons.LEFT:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        } else {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        }\n\n        break;\n\n      case scope.mouseButtons.MIDDLE:\n        if (scope.enableZoom === false) return;\n        handleMouseDownDolly(event);\n        state = STATE.DOLLY;\n        break;\n\n      case scope.mouseButtons.RIGHT:\n        if (scope.enablePan === false) return;\n        handleMouseDownPan(event);\n        state = STATE.PAN;\n        break;\n    }\n\n    if (state !== STATE.NONE) {\n      document.addEventListener('mousemove', onMouseMove, false);\n      document.addEventListener('mouseup', onMouseUp, false);\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n        handleMouseMoveRotate(event);\n        break;\n\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseMoveDolly(event);\n        break;\n\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n        handleMouseMovePan(event);\n        break;\n    }\n  }\n\n  function onMouseUp(event) {\n    if (scope.enabled === false) return;\n    handleMouseUp(event);\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n    event.preventDefault();\n    event.stopPropagation();\n    scope.dispatchEvent(startEvent);\n    handleMouseWheel(event);\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (event.touches.length) {\n      case 1:\n        // one-fingered touch: rotate\n        if (scope.enableRotate === false) return;\n        handleTouchStartRotate(event);\n        state = STATE.TOUCH_ROTATE;\n        break;\n\n      case 2:\n        // two-fingered touch: dolly-pan\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        handleTouchStartDollyPan(event);\n        state = STATE.TOUCH_DOLLY_PAN;\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (event.touches.length) {\n      case 1:\n        // one-fingered touch: rotate\n        if (scope.enableRotate === false) return;\n        if (state !== STATE.TOUCH_ROTATE) return; // is this needed?\n\n        handleTouchMoveRotate(event);\n        break;\n\n      case 2:\n        // two-fingered touch: dolly-pan\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        if (state !== STATE.TOUCH_DOLLY_PAN) return; // is this needed?\n\n        handleTouchMoveDollyPan(event);\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n    handleTouchEnd(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n  } //\n\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n  scope.domElement.addEventListener('mousedown', onMouseDown, false);\n  scope.domElement.addEventListener('wheel', onMouseWheel, false);\n  scope.domElement.addEventListener('touchstart', onTouchStart, false);\n  scope.domElement.addEventListener('touchend', onTouchEnd, false);\n  scope.domElement.addEventListener('touchmove', onTouchMove, false);\n  window.addEventListener('keydown', onKeyDown, false); // force an update at start\n\n  this.update();\n};\n\nTHREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\nObject.defineProperties(THREE.OrbitControls.prototype, {\n  center: {\n    get: function () {\n      console.warn('THREE.OrbitControls: .center has been renamed to .target');\n      return this.target;\n    }\n  },\n  // backward compatibility\n  noZoom: {\n    get: function () {\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      return !this.enableZoom;\n    },\n    set: function (value) {\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      this.enableZoom = !value;\n    }\n  },\n  noRotate: {\n    get: function () {\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n      return !this.enableRotate;\n    },\n    set: function (value) {\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n      this.enableRotate = !value;\n    }\n  },\n  noPan: {\n    get: function () {\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n      return !this.enablePan;\n    },\n    set: function (value) {\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n      this.enablePan = !value;\n    }\n  },\n  noKeys: {\n    get: function () {\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n      return !this.enableKeys;\n    },\n    set: function (value) {\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n      this.enableKeys = !value;\n    }\n  },\n  staticMoving: {\n    get: function () {\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n      return !this.enableDamping;\n    },\n    set: function (value) {\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n      this.enableDamping = !value;\n    }\n  },\n  dynamicDampingFactor: {\n    get: function () {\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n      return this.dampingFactor;\n    },\n    set: function (value) {\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n      this.dampingFactor = value;\n    }\n  }\n});\n/* three-orbitcontrols addendum */\n\nmodule.exports = exports.default = THREE.OrbitControls;","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/node_modules/three-orbitcontrols/OrbitControls.js"],"names":["THREE","require","OrbitControls","object","domElement","undefined","document","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","window","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","needsUpdate","keyCode","preventDefault","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDollyPan","dx","dy","sqrt","handleTouchMoveRotate","handleTouchMoveDollyPan","handleTouchEnd","focus","button","ctrlKey","metaKey","shiftKey","addEventListener","stopPropagation","prototype","Object","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","module","exports","default"],"mappings":"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","sourcesContent":["/* three-orbitcontrols addendum */ var THREE = require('three');\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t// console.log( 'handleKeyDown' );\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n/* three-orbitcontrols addendum */ module.exports = exports.default = THREE.OrbitControls;\n"]},"metadata":{},"sourceType":"script"}
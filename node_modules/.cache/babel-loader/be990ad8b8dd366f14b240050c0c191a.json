{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/MainSlider/mainSlider.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Slider from 'react-animated-slider';\nimport * as THREE from 'three';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrbitControls = require('three-orbitcontrols');\n\nclass MainSlider extends Component {\n  componentDidMount() {\n    var SEPARATION = 200;\n    var AMOUNTX = 30;\n    var AMOUNTY = 30;\n    var mouseX = 100;\n    var mouseY = -550;\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 4500);\n    camera.position.z = 1000;\n    var renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.controls = new OrbitControls(camera, renderer.domElement);\n    this.mount.appendChild(renderer.domElement);\n    var material = new THREE.SpriteMaterial({\n      color: 0xffffff\n    });\n    var particles = [];\n    var particle;\n    var count = 0;\n    var i = 0;\n\n    for (var ix = 0; ix < AMOUNTX; ix++) {\n      for (var iy = 0; iy < AMOUNTY; iy++) {\n        particle = particles[i++] = new THREE.Sprite(material);\n        particle.position.x = ix * SEPARATION - AMOUNTX * SEPARATION / 2;\n        particle.position.z = iy * SEPARATION - AMOUNTY * SEPARATION / 2;\n        scene.add(particle);\n      }\n    }\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      camera.position.x += (mouseX - camera.position.x) * 0.05;\n      camera.position.y += (-mouseY - camera.position.y) * 0.05;\n      camera.lookAt(scene.position);\n      var i = 0;\n\n      for (var ix = 0; ix < AMOUNTX; ix++) {\n        for (var iy = 0; iy < AMOUNTY; iy++) {\n          particle = particles[i++];\n          particle.position.y = Math.sin((ix + count) * 0.3) * 50 + Math.sin((iy + count) * 0.5) * 50;\n          particle.scale.x = particle.scale.y = (Math.sin((ix + count) * 0.3) + 1) * 3 + (Math.sin((iy + count) * 0.5) + 1) * 3;\n        }\n      }\n\n      renderer.render(scene, camera);\n      count += 0.1;\n    };\n\n    animate();\n  }\n\n  componentWillUnmount() {\n    this.controls.dispose();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mount => {\n          this.mount = mount;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          autoplay: true,\n          duration: 3000,\n          children: Items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MainSlider;","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/MainSlider/mainSlider.jsx"],"names":["React","Component","Container","Row","Col","Link","Slider","THREE","OrbitControls","require","MainSlider","componentDidMount","SEPARATION","AMOUNTX","AMOUNTY","mouseX","mouseY","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","setSize","controls","domElement","mount","appendChild","material","SpriteMaterial","color","particles","particle","count","i","ix","iy","Sprite","x","add","animate","requestAnimationFrame","y","lookAt","Math","sin","scale","render","componentWillUnmount","dispose","Items"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport Slider from 'react-animated-slider'\nimport * as THREE from 'three'\nimport './style.css'\n\nconst OrbitControls = require('three-orbitcontrols')\n\nclass MainSlider extends Component {\n  componentDidMount() {\n    var SEPARATION = 200\n    var AMOUNTX = 30\n    var AMOUNTY = 30\n    var mouseX = 100\n    var mouseY = -550\n    var scene = new THREE.Scene()\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 4500)\n    camera.position.z = 1000\n    var renderer = new THREE.WebGLRenderer({ alpha: true })\n    renderer.setPixelRatio(window.devicePixelRatio)\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    this.controls = new OrbitControls(camera, renderer.domElement)\n    this.mount.appendChild(renderer.domElement)\n    var material = new THREE.SpriteMaterial({\n      color: 0xffffff,\n    })\n    var particles = []\n    var particle\n    var count = 0\n    var i = 0\n\n    for (var ix = 0; ix < AMOUNTX; ix++) {\n      for (var iy = 0; iy < AMOUNTY; iy++) {\n        particle = particles[i++] = new THREE.Sprite(material)\n        particle.position.x = ix * SEPARATION - (AMOUNTX * SEPARATION) / 2\n        particle.position.z = iy * SEPARATION - (AMOUNTY * SEPARATION) / 2\n        scene.add(particle)\n      }\n    }\n    var animate = function () {\n      requestAnimationFrame(animate)\n\n      camera.position.x += (mouseX - camera.position.x) * 0.05\n      camera.position.y += (-mouseY - camera.position.y) * 0.05\n      camera.lookAt(scene.position)\n\n      var i = 0\n\n      for (var ix = 0; ix < AMOUNTX; ix++) {\n        for (var iy = 0; iy < AMOUNTY; iy++) {\n          particle = particles[i++]\n          particle.position.y = Math.sin((ix + count) * 0.3) * 50 + Math.sin((iy + count) * 0.5) * 50\n          particle.scale.x = particle.scale.y =\n            (Math.sin((ix + count) * 0.3) + 1) * 3 + (Math.sin((iy + count) * 0.5) + 1) * 3\n        }\n      }\n      renderer.render(scene, camera)\n      count += 0.1\n    }\n    animate()\n  }\n  componentWillUnmount() {\n    this.controls.dispose()\n  }\n  render() {\n    return (\n      <div>\n        <div\n          ref={(mount) => {\n            this.mount = mount\n          }}\n        ></div>\n        <div>\n          <Slider autoplay duration={3000}>\n            {Items}\n          </Slider>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MainSlider\n"]},"metadata":{},"sourceType":"module"}
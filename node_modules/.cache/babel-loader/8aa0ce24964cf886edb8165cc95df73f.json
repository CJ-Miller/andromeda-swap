{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/PageHeader/TransactionDeadlineSetting.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Input, Text, Flex, Box } from '@pancakeswap-libs/uikit';\nimport { useUserDeadline } from 'state/user/hooks';\nimport QuestionHelper from '../QuestionHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Field = styled.div`\n  align-items: center;\n  display: inline-flex;\n\n  & > ${Input} {\n    max-width: 100px;\n  }\n`;\n_c = Field;\n\nconst TransactionDeadlineSetting = ({\n  translateString\n}) => {\n  _s();\n\n  const [deadline, setDeadline] = useUserDeadline();\n  const [value, setValue] = useState(deadline / 60); // deadline in minutes\n\n  const [error, setError] = useState(null);\n\n  const handleChange = evt => {\n    const {\n      value: inputValue\n    } = evt.target;\n    setValue(parseInt(inputValue, 10));\n  }; // Updates local storage if value is valid\n\n\n  useEffect(() => {\n    try {\n      const rawValue = value * 60;\n\n      if (!Number.isNaN(rawValue) && rawValue > 0) {\n        setDeadline(rawValue);\n        setError(null);\n      } else {\n        setError(translateString(1150, 'Enter a valid deadline'));\n      }\n    } catch {\n      setError(translateString(1150, 'Enter a valid deadline'));\n    }\n  }, [value, setError, setDeadline, translateString]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mb: \"16px\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      mb: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: translateString(90, 'Transaction deadline')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n        text: translateString(188, 'Your transaction will revert if it is pending for more than this long.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        step: \"1\",\n        min: \"1\",\n        value: value,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        ml: \"8px\",\n        children: \"Minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Text, {\n      mt: \"8px\",\n      color: \"failure\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionDeadlineSetting, \"g+/oGEJAeWfRvspWr4InYKUHiM0=\", false, function () {\n  return [useUserDeadline];\n});\n\n_c2 = TransactionDeadlineSetting;\nexport default TransactionDeadlineSetting;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Field\");\n$RefreshReg$(_c2, \"TransactionDeadlineSetting\");","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/components/PageHeader/TransactionDeadlineSetting.tsx"],"names":["React","useEffect","useState","styled","Input","Text","Flex","Box","useUserDeadline","QuestionHelper","Field","div","TransactionDeadlineSetting","translateString","deadline","setDeadline","value","setValue","error","setError","handleChange","evt","inputValue","target","parseInt","rawValue","Number","isNaN"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,GAA5B,QAAuC,yBAAvC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,MAAMC,KAAK,GAAGP,MAAM,CAACQ,GAAI;AACzB;AACA;AACA;AACA,QAAQP,KAAM;AACd;AACA;AACA,CAPA;KAAMM,K;;AAaN,MAAME,0BAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+D;AAAA;;AAChG,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,eAAe,EAA/C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACY,QAAQ,GAAG,EAAZ,CAAlC,CAFgG,CAE9C;;AAClD,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAgB,IAAhB,CAAlC;;AAEA,QAAMkB,YAAY,GAAIC,GAAD,IAA8C;AACjE,UAAM;AAAEL,MAAAA,KAAK,EAAEM;AAAT,QAAwBD,GAAG,CAACE,MAAlC;AACAN,IAAAA,QAAQ,CAACO,QAAQ,CAACF,UAAD,EAAa,EAAb,CAAT,CAAR;AACD,GAHD,CALgG,CAUhG;;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF,YAAMwB,QAAQ,GAAGT,KAAK,GAAG,EAAzB;;AACA,UAAI,CAACU,MAAM,CAACC,KAAP,CAAaF,QAAb,CAAD,IAA2BA,QAAQ,GAAG,CAA1C,EAA6C;AAC3CV,QAAAA,WAAW,CAACU,QAAD,CAAX;AACAN,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAHD,MAGO;AACLA,QAAAA,QAAQ,CAACN,eAAe,CAAC,IAAD,EAAO,wBAAP,CAAhB,CAAR;AACD;AACF,KARD,CAQE,MAAM;AACNM,MAAAA,QAAQ,CAACN,eAAe,CAAC,IAAD,EAAO,wBAAP,CAAhB,CAAR;AACD;AACF,GAZQ,EAYN,CAACG,KAAD,EAAQG,QAAR,EAAkBJ,WAAlB,EAA+BF,eAA/B,CAZM,CAAT;AAcA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAA0B,MAAA,EAAE,EAAC,KAA7B;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,kBAAYA,eAAe,CAAC,EAAD,EAAK,sBAAL;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AACE,QAAA,IAAI,EAAEA,eAAe,CAAC,GAAD,EAAM,wEAAN;AADvB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,GAA1B;AAA8B,QAAA,GAAG,EAAC,GAAlC;AAAsC,QAAA,KAAK,EAAEG,KAA7C;AAAoD,QAAA,QAAQ,EAAEI;AAA9D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EAaGF,KAAK,iBACJ,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,KAAT;AAAe,MAAA,KAAK,EAAC,SAArB;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA9CD;;GAAMN,0B;UAC4BJ,e;;;MAD5BI,0B;AAgDN,eAAeA,0BAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Input, Text, Flex, Box } from '@pancakeswap-libs/uikit'\nimport { useUserDeadline } from 'state/user/hooks'\nimport QuestionHelper from '../QuestionHelper'\n\nconst Field = styled.div`\n  align-items: center;\n  display: inline-flex;\n\n  & > ${Input} {\n    max-width: 100px;\n  }\n`\n\ntype TransactionDeadlineSettingModalProps = {\n  translateString: (translationId: number, fallback: string) => string\n}\n\nconst TransactionDeadlineSetting = ({ translateString }: TransactionDeadlineSettingModalProps) => {\n  const [deadline, setDeadline] = useUserDeadline()\n  const [value, setValue] = useState(deadline / 60) // deadline in minutes\n  const [error, setError] = useState<string | null>(null)\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(parseInt(inputValue, 10))\n  }\n\n  // Updates local storage if value is valid\n  useEffect(() => {\n    try {\n      const rawValue = value * 60\n      if (!Number.isNaN(rawValue) && rawValue > 0) {\n        setDeadline(rawValue)\n        setError(null)\n      } else {\n        setError(translateString(1150, 'Enter a valid deadline'))\n      }\n    } catch {\n      setError(translateString(1150, 'Enter a valid deadline'))\n    }\n  }, [value, setError, setDeadline, translateString])\n\n  return (\n    <Box mb=\"16px\">\n      <Flex alignItems=\"center\" mb=\"8px\">\n        <Text bold>{translateString(90, 'Transaction deadline')}</Text>\n        <QuestionHelper\n          text={translateString(188, 'Your transaction will revert if it is pending for more than this long.')}\n        />\n      </Flex>\n      <Field>\n        <Input type=\"number\" step=\"1\" min=\"1\" value={value} onChange={handleChange} />\n        <Text fontSize=\"14px\" ml=\"8px\">\n          Minutes\n        </Text>\n      </Field>\n      {error && (\n        <Text mt=\"8px\" color=\"failure\">\n          {error}\n        </Text>\n      )}\n    </Box>\n  )\n}\n\nexport default TransactionDeadlineSetting\n"]},"metadata":{},"sourceType":"module"}
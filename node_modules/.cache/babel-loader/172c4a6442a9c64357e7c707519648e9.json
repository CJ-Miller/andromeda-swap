{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/helpers.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Heading, IconButton, CloseIcon } from '@pancakeswap-libs/uikit';\nimport { AutoColumn, ColumnCenter } from '../Column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Wrapper = styled.div`\n  width: 100%;\n  overflow-y: auto;\n`;\nexport const Section = styled(AutoColumn)`\n  padding: 24px;\n`;\nexport const ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`;\nexport const BottomSection = styled(Section)`\n  background-color: ${({\n  theme\n}) => theme.colors.invertedContrast};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`;\n/**\n * TODO: Remove this when modal system from the UI Kit is implemented\n */\n\nconst StyledContentHeader = styled.div`\n  align-items: center;\n  display: flex;\n\n  & > ${Heading} {\n    flex: 1;\n  }\n`;\n_c = StyledContentHeader;\nexport const ContentHeader = ({\n  children,\n  onDismiss\n}) => /*#__PURE__*/_jsxDEV(StyledContentHeader, {\n  children: [/*#__PURE__*/_jsxDEV(Heading, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: onDismiss,\n    variant: \"text\",\n    children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this);\n_c2 = ContentHeader;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledContentHeader\");\n$RefreshReg$(_c2, \"ContentHeader\");","map":{"version":3,"sources":["/Users/cj/Desktop/swap-attempts/swap2/src/components/TransactionConfirmationModal/helpers.tsx"],"names":["React","styled","Heading","IconButton","CloseIcon","AutoColumn","ColumnCenter","Wrapper","div","Section","ConfirmedIcon","BottomSection","theme","colors","invertedContrast","StyledContentHeader","ContentHeader","children","onDismiss"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,SAA9B,QAA+C,yBAA/C;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;;AAGA,OAAO,MAAMC,OAAO,GAAGN,MAAM,CAACO,GAAI;AAClC;AACA;AACA,CAHO;AAIP,OAAO,MAAMC,OAAO,GAAGR,MAAM,CAACI,UAAD,CAAa;AAC1C;AACA,CAFO;AAIP,OAAO,MAAMK,aAAa,GAAGT,MAAM,CAACK,YAAD,CAAe;AAClD;AACA,CAFO;AAIP,OAAO,MAAMK,aAAa,GAAGV,MAAM,CAACQ,OAAD,CAAU;AAC7C,sBAAsB,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,gBAAiB;AACnE;AACA;AACA,CAJO;AAMP;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAGd,MAAM,CAACO,GAAI;AACvC;AACA;AACA;AACA,QAAQN,OAAQ;AAChB;AACA;AACA,CAPA;KAAMa,mB;AAcN,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,kBAC3B,QAAC,mBAAD;AAAA,0BACE,QAAC,OAAD;AAAA,cAAUD;AAAV;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEC,SAArB;AAAgC,IAAA,OAAO,EAAC,MAAxC;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADK;MAAMF,a","sourcesContent":["import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Heading, IconButton, CloseIcon } from '@pancakeswap-libs/uikit'\nimport { AutoColumn, ColumnCenter } from '../Column'\n\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  overflow-y: auto;\n`\nexport const Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nexport const ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`\n\nexport const BottomSection = styled(Section)`\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\n/**\n * TODO: Remove this when modal system from the UI Kit is implemented\n */\nconst StyledContentHeader = styled.div`\n  align-items: center;\n  display: flex;\n\n  & > ${Heading} {\n    flex: 1;\n  }\n`\n\ntype ContentHeaderProps = {\n  children: ReactNode\n  onDismiss: () => void\n}\n\nexport const ContentHeader = ({ children, onDismiss }: ContentHeaderProps) => (\n  <StyledContentHeader>\n    <Heading>{children}</Heading>\n    <IconButton onClick={onDismiss} variant=\"text\">\n      <CloseIcon color=\"primary\" />\n    </IconButton>\n  </StyledContentHeader>\n)\n"]},"metadata":{},"sourceType":"module"}
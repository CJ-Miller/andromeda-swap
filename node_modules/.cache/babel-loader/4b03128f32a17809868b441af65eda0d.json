{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/pages/RemoveLiquidity/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useMemo, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { splitSignature } from '@ethersproject/bytes';\nimport { currencyEquals, ETHER, Percent, WETH } from '@pancakeswap-libs/sdk';\nimport { Button, Flex, Text } from '@blzd-dev/uikitikit';\nimport { ArrowDown, Plus } from 'react-feather';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport useI18n from 'hooks/useI18n';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport { RowBetween, RowFixed } from '../../components/Row';\nimport Container from '../../components/Container';\nimport Slider from '../../components/Slider';\nimport CurrencyLogo from '../../components/CurrencyLogo';\nimport { ROUTER_ADDRESS } from '../../constants';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { usePairContract } from '../../hooks/useContract';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { StyledInternalLink } from '../../components/Shared';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\nimport { currencyId } from '../../utils/currencyId';\nimport useDebouncedChangeHandler from '../../utils/useDebouncedChangeHandler';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport AppBody from '../AppBody';\nimport { ClickableText, Wrapper } from '../Pool/styleds';\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback';\nimport { Dots } from '../../components/swap/styleds';\nimport { useBurnActionHandlers, useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks';\nimport { Field } from '../../state/burn/actions';\nimport { useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OutlineCard = styled.div`\n  border: 1px solid ${({\n  theme\n}) => theme.colors.borderColor};\n  border-radius: 16px;\n  padding: 24px;\n`;\n_c = OutlineCard;\nconst Body = styled.div`\n  padding-left: 24px;\n  padding-right: 24px;\n`;\n_c2 = Body;\nexport default function RemoveLiquidity({\n  history,\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB\n    }\n  }\n}) {\n  _s();\n\n  var _useCurrency, _useCurrency2, _parsedAmounts$Field$, _parsedAmounts$Field$2, _parsedAmounts$Field$3, _parsedAmounts$Field$4, _parsedAmounts$Field$5, _parsedAmounts$Field$6, _parsedAmounts$Field$7, _pair$liquidityToken, _parsedAmounts$Field$13, _parsedAmounts$Field$14;\n\n  const [currencyA, currencyB] = [(_useCurrency = useCurrency(currencyIdA)) !== null && _useCurrency !== void 0 ? _useCurrency : undefined, (_useCurrency2 = useCurrency(currencyIdB)) !== null && _useCurrency2 !== void 0 ? _useCurrency2 : undefined];\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const TranslateString = useI18n();\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [currencyA, currencyB, chainId]);\n  const theme = useContext(ThemeContext); // burn state\n\n  const {\n    independentField,\n    typedValue\n  } = useBurnState();\n  const {\n    pair,\n    parsedAmounts,\n    error\n  } = useDerivedBurnInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onUserInput: _onUserInput\n  } = useBurnActionHandlers();\n  const isValid = !error; // modal and loading\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [showDetailed, setShowDetailed] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n  // txn values\n\n  const [txHash, setTxHash] = useState('');\n  const [deadline] = useUserDeadline();\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0') ? '0' : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100')) ? '<1' : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]: independentField === Field.LIQUIDITY ? typedValue : (_parsedAmounts$Field$ = (_parsedAmounts$Field$2 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6)) !== null && _parsedAmounts$Field$ !== void 0 ? _parsedAmounts$Field$ : '',\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? typedValue : (_parsedAmounts$Field$3 = (_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)) !== null && _parsedAmounts$Field$3 !== void 0 ? _parsedAmounts$Field$3 : '',\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_B ? typedValue : (_parsedAmounts$Field$5 = (_parsedAmounts$Field$6 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toSignificant(6)) !== null && _parsedAmounts$Field$5 !== void 0 ? _parsedAmounts$Field$5 : ''\n  };\n  const atMaxAmount = (_parsedAmounts$Field$7 = parsedAmounts[Field.LIQUIDITY_PERCENT]) === null || _parsedAmounts$Field$7 === void 0 ? void 0 : _parsedAmounts$Field$7.equalTo(new Percent('1')); // pair contract\n\n  const pairContract = usePairContract(pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address); // allowance handling\n\n  const [signatureData, setSignatureData] = useState(null);\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS);\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library) throw new Error('missing dependencies');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount'); // try to gather a signature for permission\n\n    const nonce = await pairContract.nonces(account);\n    const deadlineForSignature = Math.ceil(Date.now() / 1000) + deadline;\n    const EIP712Domain = [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'version',\n      type: 'string'\n    }, {\n      name: 'chainId',\n      type: 'uint256'\n    }, {\n      name: 'verifyingContract',\n      type: 'address'\n    }];\n    const domain = {\n      name: 'Pancake LPs',\n      version: '1',\n      chainId,\n      verifyingContract: pair.liquidityToken.address\n    };\n    const Permit = [{\n      name: 'owner',\n      type: 'address'\n    }, {\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint256'\n    }, {\n      name: 'nonce',\n      type: 'uint256'\n    }, {\n      name: 'deadline',\n      type: 'uint256'\n    }];\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadlineForSignature\n    };\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    });\n    library.send('eth_signTypedData_v4', [account, data]).then(splitSignature).then(signature => {\n      setSignatureData({\n        v: signature.v,\n        r: signature.r,\n        s: signature.s,\n        deadline: deadlineForSignature\n      });\n    }).catch(e => {\n      // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n      if ((e === null || e === void 0 ? void 0 : e.code) !== 4001) {\n        approveCallback();\n      }\n    });\n  } // wrapped onUserInput to clear signatures\n\n\n  const onUserInput = useCallback((field, val) => {\n    setSignatureData(null);\n    return _onUserInput(field, val);\n  }, [_onUserInput]);\n  const onLiquidityInput = useCallback(val => onUserInput(Field.LIQUIDITY, val), [onUserInput]);\n  const onCurrencyAInput = useCallback(val => onUserInput(Field.CURRENCY_A, val), [onUserInput]);\n  const onCurrencyBInput = useCallback(val => onUserInput(Field.CURRENCY_B, val), [onUserInput]); // tx sending\n\n  const addTransaction = useTransactionAdder();\n\n  async function onRemove() {\n    if (!chainId || !library || !account) throw new Error('missing dependencies');\n    const {\n      [Field.CURRENCY_A]: currencyAmountA,\n      [Field.CURRENCY_B]: currencyAmountB\n    } = parsedAmounts;\n\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts');\n    }\n\n    const router = getRouterContract(chainId, library, account);\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\n    };\n    if (!currencyA || !currencyB) throw new Error('missing tokens');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount');\n    const currencyBIsETH = currencyB === ETHER;\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH;\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline;\n    if (!tokenA || !tokenB) throw new Error('could not wrap');\n    let methodNames;\n    let args; // we have approval, use normal remove liquidity\n\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens'];\n        args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, deadlineFromNow];\n      } // removeLiquidity\n      else {\n          methodNames = ['removeLiquidity'];\n          args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadlineFromNow];\n        }\n    } // we have a signataure, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n        // removeLiquidityETHWithPermit\n        if (oneCurrencyIsETH) {\n          methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens'];\n          args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n        } // removeLiquidityETHWithPermit\n        else {\n            methodNames = ['removeLiquidityWithPermit'];\n            args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n          }\n      } else {\n        throw new Error('Attempting to confirm without approval or a signature. Please contact support.');\n      }\n\n    const safeGasEstimates = await Promise.all(methodNames.map((methodName, index) => router.estimateGas[methodName](...args).then(calculateGasMargin).catch(e => {\n      console.error(`estimateGas failed`, index, methodName, args, e);\n      return undefined;\n    })));\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate => BigNumber.isBigNumber(safeGasEstimate)); // all estimations failed...\n\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.');\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation];\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation];\n      setAttemptingTxn(true);\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate\n      }).then(response => {\n        var _parsedAmounts$Field$8, _parsedAmounts$Field$9;\n\n        setAttemptingTxn(false);\n        addTransaction(response, {\n          summary: `Remove ${(_parsedAmounts$Field$8 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$8 === void 0 ? void 0 : _parsedAmounts$Field$8.toSignificant(3)} ${currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol} and ${(_parsedAmounts$Field$9 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$9 === void 0 ? void 0 : _parsedAmounts$Field$9.toSignificant(3)} ${currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol}`\n        });\n        setTxHash(response.hash);\n      }).catch(e => {\n        setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n        console.error(e);\n      });\n    }\n  }\n\n  function modalHeader() {\n    var _parsedAmounts$Field$10, _parsedAmounts$Field$11;\n\n    return /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"md\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          children: (_parsedAmounts$Field$10 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$10 === void 0 ? void 0 : _parsedAmounts$Field$10.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          gap: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: currencyA,\n            size: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"24px\",\n            style: {\n              marginLeft: '10px'\n            },\n            children: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: /*#__PURE__*/_jsxDEV(Plus, {\n          size: \"16\",\n          color: theme.colors.textSubtle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          children: (_parsedAmounts$Field$11 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$11 === void 0 ? void 0 : _parsedAmounts$Field$11.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          gap: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: currencyB,\n            size: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"24px\",\n            style: {\n              marginLeft: '10px'\n            },\n            children: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        small: true,\n        color: \"textSubtle\",\n        textAlign: \"left\",\n        padding: \"12px 0 0 0\",\n        style: {\n          fontStyle: 'italic'\n        },\n        children: `Output is estimated. If the price changes by more than ${allowedSlippage / 100}% your transaction will revert.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this);\n  }\n\n  function modalBottom() {\n    var _parsedAmounts$Field$12;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          children: [`LP ${currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol}/${currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol}`, \" Burned\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n            currency0: currencyA,\n            currency1: currencyB,\n            margin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: (_parsedAmounts$Field$12 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$12 === void 0 ? void 0 : _parsedAmounts$Field$12.toSignificant(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), pair && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            children: TranslateString(1182, 'Price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"1 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \" = \", tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', \" \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"1 \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" = \", tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', \" \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !(approval === ApprovalState.APPROVED || signatureData !== null),\n        onClick: onRemove,\n        children: TranslateString(1136, 'Confirm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  const pendingText = `Removing ${(_parsedAmounts$Field$13 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$13 === void 0 ? void 0 : _parsedAmounts$Field$13.toSignificant(6)} ${currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol} and ${(_parsedAmounts$Field$14 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$14 === void 0 ? void 0 : _parsedAmounts$Field$14.toSignificant(6)} ${currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol}`;\n  const liquidityPercentChangeCallback = useCallback(value => {\n    onUserInput(Field.LIQUIDITY_PERCENT, value.toString());\n  }, [onUserInput]);\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER;\n  const oneCurrencyIsWETH = Boolean(chainId && (currencyA && currencyEquals(WETH[chainId], currencyA) || currencyB && currencyEquals(WETH[chainId], currencyB)));\n  const handleSelectCurrencyA = useCallback(currency => {\n    if (currencyIdB && currencyId(currency) === currencyIdB) {\n      history.push(`/remove/${currencyId(currency)}/${currencyIdA}`);\n    } else {\n      history.push(`/remove/${currencyId(currency)}/${currencyIdB}`);\n    }\n  }, [currencyIdA, currencyIdB, history]);\n  const handleSelectCurrencyB = useCallback(currency => {\n    if (currencyIdA && currencyId(currency) === currencyIdA) {\n      history.push(`/remove/${currencyIdB}/${currencyId(currency)}`);\n    } else {\n      history.push(`/remove/${currencyIdA}/${currencyId(currency)}`);\n    }\n  }, [currencyIdA, currencyIdB, history]);\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    setSignatureData(null); // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0');\n    }\n\n    setTxHash('');\n  }, [onUserInput, txHash]);\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)), liquidityPercentChangeCallback);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(AddRemoveTabs, {\n        adding: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n          isOpen: showConfirm,\n          onDismiss: handleDismissConfirmation,\n          attemptingTxn: attemptingTxn,\n          hash: txHash || '',\n          content: () => /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n            title: TranslateString(1156, 'You will receive'),\n            onDismiss: handleDismissConfirmation,\n            topContent: modalHeader,\n            bottomContent: modalBottom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this),\n          pendingText: pendingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(Body, {\n            children: /*#__PURE__*/_jsxDEV(OutlineCard, {\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n                    onClick: () => {\n                      setShowDetailed(!showDetailed);\n                    },\n                    children: showDetailed ? TranslateString(1184, 'Simple') : TranslateString(1186, 'Detailed')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  justifyContent: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"64px\",\n                    children: [formattedAmounts[Field.LIQUIDITY_PERCENT], \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this), !showDetailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Flex, {\n                    mb: \"8px\",\n                    children: /*#__PURE__*/_jsxDEV(Slider, {\n                      value: innerLiquidityPercentage,\n                      onChange: setInnerLiquidityPercentage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                    justifyContent: \"space-around\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"tertiary\",\n                      scale: \"sm\",\n                      onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '25'),\n                      children: \"25%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"tertiary\",\n                      scale: \"sm\",\n                      onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '50'),\n                      children: \"50%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"tertiary\",\n                      scale: \"sm\",\n                      onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '75'),\n                      children: \"75%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"tertiary\",\n                      scale: \"sm\",\n                      onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n                      children: TranslateString(166, 'Max')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), !showDetailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ColumnCenter, {\n              children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                size: \"16\",\n                color: theme.colors.textSubtle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Body, {\n              children: /*#__PURE__*/_jsxDEV(OutlineCard, {\n                children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                  gap: \"10px\",\n                  children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"24px\",\n                      children: formattedAmounts[Field.CURRENCY_A] || '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n                      children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                        currency: currencyA,\n                        style: {\n                          marginRight: '12px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Text, {\n                        fontSize: \"24px\",\n                        id: \"remove-liquidity-tokena-symbol\",\n                        children: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"24px\",\n                      children: formattedAmounts[Field.CURRENCY_B] || '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 542,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n                      children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                        currency: currencyB,\n                        style: {\n                          marginRight: '12px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Text, {\n                        fontSize: \"24px\",\n                        id: \"remove-liquidity-tokenb-symbol\",\n                        children: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 545,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 23\n                  }, this), chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? /*#__PURE__*/_jsxDEV(RowBetween, {\n                    style: {\n                      justifyContent: 'flex-end'\n                    },\n                    children: oneCurrencyIsETH ? /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                      to: `/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${currencyB === ETHER ? WETH[chainId].address : currencyIdB}`,\n                      children: TranslateString(1188, 'Receive WBNB')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 553,\n                      columnNumber: 29\n                    }, this) : oneCurrencyIsWETH ? /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                      to: `/remove/${currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'BNB' : currencyIdA}/${currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'BNB' : currencyIdB}`,\n                      children: TranslateString(1190, 'Receive BNB')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 561,\n                      columnNumber: 29\n                    }, this) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 25\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Body, {\n            style: {\n              paddingBottom: '24px'\n            },\n            children: [showDetailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                value: formattedAmounts[Field.LIQUIDITY],\n                onUserInput: onLiquidityInput,\n                onMax: () => {\n                  onUserInput(Field.LIQUIDITY_PERCENT, '100');\n                },\n                showMaxButton: !atMaxAmount,\n                disableCurrencySelect: true,\n                currency: pair === null || pair === void 0 ? void 0 : pair.liquidityToken,\n                pair: pair,\n                id: \"liquidity-amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  color: theme.colors.textSubtle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                hideBalance: true,\n                value: formattedAmounts[Field.CURRENCY_A],\n                onUserInput: onCurrencyAInput,\n                onMax: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n                showMaxButton: !atMaxAmount,\n                currency: currencyA,\n                label: \"Output\",\n                onCurrencySelect: handleSelectCurrencyA,\n                id: \"remove-liquidity-tokena\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n                children: /*#__PURE__*/_jsxDEV(Plus, {\n                  size: \"16\",\n                  color: theme.colors.textSubtle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                hideBalance: true,\n                value: formattedAmounts[Field.CURRENCY_B],\n                onUserInput: onCurrencyBInput,\n                onMax: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n                showMaxButton: !atMaxAmount,\n                currency: currencyB,\n                label: \"Output\",\n                onCurrencySelect: handleSelectCurrencyB,\n                id: \"remove-liquidity-tokenb\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), pair && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '24px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Flex, {\n                justifyContent: \"space-between\",\n                mb: \"8px\",\n                children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"1 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \" = \", tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', \" \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                justifyContent: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"1 \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" = \", tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', \" \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative'\n              },\n              children: !account ? /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n                width: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(RowBetween, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: onAttemptToApprove,\n                  variant: approval === ApprovalState.APPROVED || signatureData !== null ? 'success' : 'primary',\n                  disabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null,\n                  mr: \"8px\",\n                  children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                    children: \"Approving\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 25\n                  }, this) : approval === ApprovalState.APPROVED || signatureData !== null ? 'Approved' : 'Approve'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    setShowConfirm(true);\n                  },\n                  disabled: !isValid || signatureData === null && approval !== ApprovalState.APPROVED,\n                  variant: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B] ? 'danger' : 'primary',\n                  children: error || 'Remove'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), pair ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n      style: {\n        minWidth: '20rem',\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(MinimalPositionCard, {\n        showUnwrapped: oneCurrencyIsWETH,\n        pair: pair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RemoveLiquidity, \"eiRF0vyEC56sXKL8hljD69Zxt2U=\", false, function () {\n  return [useCurrency, useCurrency, useActiveWeb3React, useI18n, useBurnState, useDerivedBurnInfo, useBurnActionHandlers, useUserDeadline, useUserSlippageTolerance, usePairContract, useApproveCallback, useTransactionAdder, useDebouncedChangeHandler];\n});\n\n_c3 = RemoveLiquidity;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OutlineCard\");\n$RefreshReg$(_c2, \"Body\");\n$RefreshReg$(_c3, \"RemoveLiquidity\");","map":{"version":3,"sources":["/Users/cj/Desktop/andromeda_swap_fork/pancake-swap-interface-v1/src/pages/RemoveLiquidity/index.tsx"],"names":["React","useCallback","useContext","useMemo","useState","styled","ThemeContext","splitSignature","currencyEquals","ETHER","Percent","WETH","Button","Flex","Text","ArrowDown","Plus","BigNumber","ConnectWalletButton","useI18n","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","RowBetween","RowFixed","Container","Slider","CurrencyLogo","ROUTER_ADDRESS","useActiveWeb3React","useCurrency","usePairContract","useTransactionAdder","StyledInternalLink","calculateGasMargin","calculateSlippageAmount","getRouterContract","currencyId","useDebouncedChangeHandler","wrappedCurrency","AppBody","ClickableText","Wrapper","useApproveCallback","ApprovalState","Dots","useBurnActionHandlers","useDerivedBurnInfo","useBurnState","Field","useUserDeadline","useUserSlippageTolerance","OutlineCard","div","theme","colors","borderColor","Body","RemoveLiquidity","history","match","params","currencyIdA","currencyIdB","currencyA","currencyB","undefined","account","chainId","library","TranslateString","tokenA","tokenB","independentField","typedValue","pair","parsedAmounts","error","onUserInput","_onUserInput","isValid","showConfirm","setShowConfirm","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","deadline","allowedSlippage","formattedAmounts","LIQUIDITY_PERCENT","equalTo","lessThan","toFixed","LIQUIDITY","toSignificant","CURRENCY_A","CURRENCY_B","atMaxAmount","pairContract","liquidityToken","address","signatureData","setSignatureData","approval","approveCallback","onAttemptToApprove","Error","liquidityAmount","nonce","nonces","deadlineForSignature","Math","ceil","Date","now","EIP712Domain","name","type","domain","version","verifyingContract","Permit","message","owner","spender","value","raw","toString","toHexString","data","JSON","stringify","types","primaryType","send","then","signature","v","r","s","catch","e","code","field","val","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","onRemove","currencyAmountA","currencyAmountB","router","amountsMin","currencyBIsETH","oneCurrencyIsETH","deadlineFromNow","methodNames","args","APPROVED","safeGasEstimates","Promise","all","map","methodName","index","estimateGas","console","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","isBigNumber","gasLimit","response","summary","symbol","hash","modalHeader","marginTop","marginLeft","textSubtle","fontStyle","modalBottom","priceOf","pendingText","liquidityPercentChangeCallback","oneCurrencyIsWETH","Boolean","handleSelectCurrencyA","currency","push","handleSelectCurrencyB","handleDismissConfirmation","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","parseInt","marginRight","justifyContent","paddingBottom","padding","position","NOT_APPROVED","PENDING","minWidth"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useMemo, useState } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, Percent, WETH } from '@pancakeswap-libs/sdk'\nimport { Button, Flex, Text } from '@blzd-dev/uikitikit'\nimport { ArrowDown, Plus } from 'react-feather'\nimport { RouteComponentProps } from 'react-router'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useI18n from 'hooks/useI18n'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport Container from '../../components/Container'\n\nimport Slider from '../../components/Slider'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport { ROUTER_ADDRESS } from '../../constants'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { usePairContract } from '../../hooks/useContract'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { StyledInternalLink } from '../../components/Shared'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { currencyId } from '../../utils/currencyId'\nimport useDebouncedChangeHandler from '../../utils/useDebouncedChangeHandler'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport AppBody from '../AppBody'\nimport { ClickableText, Wrapper } from '../Pool/styleds'\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback'\nimport { Dots } from '../../components/swap/styleds'\nimport { useBurnActionHandlers, useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks'\n\nimport { Field } from '../../state/burn/actions'\nimport { useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks'\n\nconst OutlineCard = styled.div`\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\n  border-radius: 16px;\n  padding: 24px;\n`\n\nconst Body = styled.div`\n  padding-left: 24px;\n  padding-right: 24px;\n`\n\nexport default function RemoveLiquidity({\n  history,\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, library } = useActiveWeb3React()\n  const TranslateString = useI18n()\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [\n    currencyA,\n    currencyB,\n    chainId,\n  ])\n\n  const theme = useContext(ThemeContext)\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  // allowance handling\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS)\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const deadlineForSignature: number = Math.ceil(Date.now() / 1000) + deadline\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ]\n    const domain = {\n      name: 'Pancake LPs',\n      version: '1',\n      chainId,\n      verifyingContract: pair.liquidityToken.address,\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' },\n    ]\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadlineForSignature,\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit,\n      },\n      domain,\n      primaryType: 'Permit',\n      message,\n    })\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then((signature) => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadlineForSignature,\n        })\n      })\n      .catch((e) => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (e?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, val: string) => {\n      setSignatureData(null)\n      return _onUserInput(field, val)\n    },\n    [_onUserInput]\n  )\n\n  const onLiquidityInput = useCallback((val: string): void => onUserInput(Field.LIQUIDITY, val), [onUserInput])\n  const onCurrencyAInput = useCallback((val: string): void => onUserInput(Field.CURRENCY_A, val), [onUserInput])\n  const onCurrencyBInput = useCallback((val: string): void => onUserInput(Field.CURRENCY_B, val), [onUserInput])\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n  async function onRemove() {\n    if (!chainId || !library || !account) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n    const router = getRouterContract(chainId, library, account)\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB === ETHER\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[]\n    let args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadlineFromNow,\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadlineFromNow,\n        ]\n      }\n    }\n    // we have a signataure, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName, index) =>\n        router.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch((e) => {\n            console.error(`estimateGas failed`, index, methodName, args, e)\n            return undefined\n          })\n      )\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\n      BigNumber.isBigNumber(safeGasEstimate)\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate,\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Remove ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencyA?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencyB?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        })\n        .catch((e: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(e)\n        })\n    }\n  }\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\n            <Text fontSize=\"24px\" style={{ marginLeft: '10px' }}>\n              {currencyA?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowFixed>\n          <Plus size=\"16\" color={theme.colors.textSubtle} />\n        </RowFixed>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\n            <Text fontSize=\"24px\" style={{ marginLeft: '10px' }}>\n              {currencyB?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n\n        <Text small color=\"textSubtle\" textAlign=\"left\" padding=\"12px 0 0 0\" style={{ fontStyle: 'italic' }}>\n          {`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <>\n        <RowBetween>\n          <Text color=\"textSubtle\">{`LP ${currencyA?.symbol}/${currencyB?.symbol}`} Burned</Text>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin />\n            <Text>{parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}</Text>\n          </RowFixed>\n        </RowBetween>\n        {pair && (\n          <>\n            <RowBetween>\n              <Text color=\"textSubtle\">{TranslateString(1182, 'Price')}</Text>\n              <Text>\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n              </Text>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Text>\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n              </Text>\n            </RowBetween>\n          </>\n        )}\n        <Button disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\n          {TranslateString(1136, 'Confirm')}\n        </Button>\n      </>\n    )\n  }\n\n  const pendingText = `Removing ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencyA?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencyB?.symbol}`\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\n    },\n    [onUserInput]\n  )\n\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(WETH[chainId], currencyA)) ||\n        (currencyB && currencyEquals(WETH[chainId], currencyB)))\n  )\n\n  const handleSelectCurrencyA = useCallback(\n    (currency: Currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        history.push(`/remove/${currencyId(currency)}/${currencyIdA}`)\n      } else {\n        history.push(`/remove/${currencyId(currency)}/${currencyIdB}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history]\n  )\n  const handleSelectCurrencyB = useCallback(\n    (currency: Currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        history.push(`/remove/${currencyIdB}/${currencyId(currency)}`)\n      } else {\n        history.push(`/remove/${currencyIdA}/${currencyId(currency)}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback\n  )\n\n  return (\n    <Container>\n      <AppBody>\n        <AddRemoveTabs adding={false} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash || ''}\n            content={() => (\n              <ConfirmationModalContent\n                title={TranslateString(1156, 'You will receive')}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <AutoColumn gap=\"md\">\n            <Body>\n              <OutlineCard>\n                <AutoColumn>\n                  <RowBetween>\n                    <Text>Amount</Text>\n                    <ClickableText\n                      onClick={() => {\n                        setShowDetailed(!showDetailed)\n                      }}\n                    >\n                      {showDetailed ? TranslateString(1184, 'Simple') : TranslateString(1186, 'Detailed')}\n                    </ClickableText>\n                  </RowBetween>\n                  <Flex justifyContent=\"start\">\n                    <Text fontSize=\"64px\">{formattedAmounts[Field.LIQUIDITY_PERCENT]}%</Text>\n                  </Flex>\n                  {!showDetailed && (\n                    <>\n                      <Flex mb=\"8px\">\n                        <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\n                      </Flex>\n                      <Flex justifyContent=\"space-around\">\n                        <Button\n                          variant=\"tertiary\"\n                          scale=\"sm\"\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}\n                        >\n                          25%\n                        </Button>\n                        <Button\n                          variant=\"tertiary\"\n                          scale=\"sm\"\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}\n                        >\n                          50%\n                        </Button>\n                        <Button\n                          variant=\"tertiary\"\n                          scale=\"sm\"\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}\n                        >\n                          75%\n                        </Button>\n                        <Button\n                          variant=\"tertiary\"\n                          scale=\"sm\"\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                        >\n                          {TranslateString(166, 'Max')}\n                        </Button>\n                      </Flex>\n                    </>\n                  )}\n                </AutoColumn>\n              </OutlineCard>\n            </Body>\n            {!showDetailed && (\n              <>\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                </ColumnCenter>\n                <Body>\n                  <OutlineCard>\n                    <AutoColumn gap=\"10px\">\n                      <RowBetween>\n                        <Text fontSize=\"24px\">{formattedAmounts[Field.CURRENCY_A] || '-'}</Text>\n                        <RowFixed>\n                          <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\n                          <Text fontSize=\"24px\" id=\"remove-liquidity-tokena-symbol\">\n                            {currencyA?.symbol}\n                          </Text>\n                        </RowFixed>\n                      </RowBetween>\n                      <RowBetween>\n                        <Text fontSize=\"24px\">{formattedAmounts[Field.CURRENCY_B] || '-'}</Text>\n                        <RowFixed>\n                          <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\n                          <Text fontSize=\"24px\" id=\"remove-liquidity-tokenb-symbol\">\n                            {currencyB?.symbol}\n                          </Text>\n                        </RowFixed>\n                      </RowBetween>\n                      {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\n                        <RowBetween style={{ justifyContent: 'flex-end' }}>\n                          {oneCurrencyIsETH ? (\n                            <StyledInternalLink\n                              to={`/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${\n                                currencyB === ETHER ? WETH[chainId].address : currencyIdB\n                              }`}\n                            >\n                              {TranslateString(1188, 'Receive WBNB')}\n                            </StyledInternalLink>\n                          ) : oneCurrencyIsWETH ? (\n                            <StyledInternalLink\n                              to={`/remove/${\n                                currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'BNB' : currencyIdA\n                              }/${currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'BNB' : currencyIdB}`}\n                            >\n                              {TranslateString(1190, 'Receive BNB')}\n                            </StyledInternalLink>\n                          ) : null}\n                        </RowBetween>\n                      ) : null}\n                    </AutoColumn>\n                  </OutlineCard>\n                </Body>\n              </>\n            )}\n            <Body style={{ paddingBottom: '24px' }}>\n              {showDetailed && (\n                <>\n                  <CurrencyInputPanel\n                    value={formattedAmounts[Field.LIQUIDITY]}\n                    onUserInput={onLiquidityInput}\n                    onMax={() => {\n                      onUserInput(Field.LIQUIDITY_PERCENT, '100')\n                    }}\n                    showMaxButton={!atMaxAmount}\n                    disableCurrencySelect\n                    currency={pair?.liquidityToken}\n                    pair={pair}\n                    id=\"liquidity-amount\"\n                  />\n                  <ColumnCenter>\n                    <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                  </ColumnCenter>\n                  <CurrencyInputPanel\n                    hideBalance\n                    value={formattedAmounts[Field.CURRENCY_A]}\n                    onUserInput={onCurrencyAInput}\n                    onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                    showMaxButton={!atMaxAmount}\n                    currency={currencyA}\n                    label=\"Output\"\n                    onCurrencySelect={handleSelectCurrencyA}\n                    id=\"remove-liquidity-tokena\"\n                  />\n                  <ColumnCenter>\n                    <Plus size=\"16\" color={theme.colors.textSubtle} />\n                  </ColumnCenter>\n                  <CurrencyInputPanel\n                    hideBalance\n                    value={formattedAmounts[Field.CURRENCY_B]}\n                    onUserInput={onCurrencyBInput}\n                    onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                    showMaxButton={!atMaxAmount}\n                    currency={currencyB}\n                    label=\"Output\"\n                    onCurrencySelect={handleSelectCurrencyB}\n                    id=\"remove-liquidity-tokenb\"\n                  />\n                </>\n              )}\n              {pair && (\n                <div style={{ padding: '24px' }}>\n                  <Flex justifyContent=\"space-between\" mb=\"8px\">\n                    Price:\n                    <div>\n                      1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n                    </div>\n                  </Flex>\n                  <Flex justifyContent=\"space-between\">\n                    <div />\n                    <div>\n                      1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n                    </div>\n                  </Flex>\n                </div>\n              )}\n              <div style={{ position: 'relative' }}>\n                {!account ? (\n                  <ConnectWalletButton width=\"100%\" />\n                ) : (\n                  <RowBetween>\n                    <Button\n                      onClick={onAttemptToApprove}\n                      variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'success' : 'primary'}\n                      disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                      mr=\"8px\"\n                    >\n                      {approval === ApprovalState.PENDING ? (\n                        <Dots>Approving</Dots>\n                      ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                        'Approved'\n                      ) : (\n                        'Approve'\n                      )}\n                    </Button>\n                    <Button\n                      onClick={() => {\n                        setShowConfirm(true)\n                      }}\n                      disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                      variant={\n                        !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                          ? 'danger'\n                          : 'primary'\n                      }\n                    >\n                      {error || 'Remove'}\n                    </Button>\n                  </RowBetween>\n                )}\n              </div>\n            </Body>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {pair ? (\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
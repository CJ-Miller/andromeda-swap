{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/swap-attempts/swap2/src/pages/PoolFinder/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { ETHER, JSBI } from '@pancakeswap-libs/sdk';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, ChevronDownIcon, AddIcon, CardBody, Text } from '@pancakeswap-libs/uikit';\nimport CardNav from 'components/CardNav';\nimport { LightCard } from 'components/Card';\nimport { AutoColumn, ColumnCenter } from 'components/Column';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport { FindPoolTabs } from 'components/NavigationTabs';\nimport { MinimalPositionCard } from 'components/PositionCard';\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal';\nimport { PairState, usePair } from 'data/Reserves';\nimport { useActiveWeb3React } from 'hooks';\nimport { usePairAdder } from 'state/user/hooks';\nimport { useTokenBalance } from 'state/wallet/hooks';\nimport { StyledInternalLink } from 'components/Shared';\nimport Container from 'components/Container';\nimport { currencyId } from 'utils/currencyId';\nimport useI18n from 'hooks/useI18n';\nimport AppBody from '../AppBody';\nimport { Dots } from '../Pool/styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Fields;\n\n(function (Fields) {\n  Fields[Fields[\"TOKEN0\"] = 0] = \"TOKEN0\";\n  Fields[Fields[\"TOKEN1\"] = 1] = \"TOKEN1\";\n})(Fields || (Fields = {}));\n\nexport default function PoolFinder() {\n  _s();\n\n  var _ref;\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const [showSearch, setShowSearch] = useState(false);\n  const [activeField, setActiveField] = useState(Fields.TOKEN1);\n  const [currency0, setCurrency0] = useState(ETHER);\n  const [currency1, setCurrency1] = useState(null);\n  const [pairState, pair] = usePair(currency0 !== null && currency0 !== void 0 ? currency0 : undefined, currency1 !== null && currency1 !== void 0 ? currency1 : undefined);\n  const addPair = usePairAdder();\n  const TranslateString = useI18n();\n  useEffect(() => {\n    if (pair) {\n      addPair(pair);\n    }\n  }, [pair, addPair]);\n  const validPairNoLiquidity = pairState === PairState.NOT_EXISTS || Boolean(pairState === PairState.EXISTS && pair && JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) && JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0)));\n  const position = useTokenBalance(account !== null && account !== void 0 ? account : undefined, pair === null || pair === void 0 ? void 0 : pair.liquidityToken);\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)));\n  const handleCurrencySelect = useCallback(currency => {\n    if (activeField === Fields.TOKEN0) {\n      setCurrency0(currency);\n    } else {\n      setCurrency1(currency);\n    }\n  }, [activeField]);\n  const handleSearchDismiss = useCallback(() => {\n    setShowSearch(false);\n  }, [setShowSearch]);\n\n  const prerequisiteMessage = /*#__PURE__*/_jsxDEV(LightCard, {\n    padding: \"45px 10px\",\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      style: {\n        textAlign: 'center'\n      },\n      children: !account ? TranslateString(1174, 'Connect to a wallet to find pools') : TranslateString(208, 'Select a token to find your liquidity.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CardNav, {\n      activeIndex: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(FindPoolTabs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setShowSearch(true);\n              setActiveField(Fields.TOKEN0);\n            },\n            startIcon: currency0 ? /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n              currency: currency0,\n              style: {\n                marginRight: '.5rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 38\n            }, this) : null,\n            endIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              width: \"24px\",\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 24\n            }, this),\n            width: \"100%\",\n            children: currency0 ? currency0.symbol : TranslateString(82, 'Select a Token')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              color: \"textSubtle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setShowSearch(true);\n              setActiveField(Fields.TOKEN1);\n            },\n            startIcon: currency1 ? /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n              currency: currency1,\n              style: {\n                marginRight: '.5rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 38\n            }, this) : null,\n            endIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              width: \"24px\",\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 24\n            }, this),\n            width: \"100%\",\n            children: currency1 ? currency1.symbol : TranslateString(82, 'Select a Token')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), hasPosition && /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            style: {\n              justifyItems: 'center',\n              backgroundColor: '',\n              padding: '12px 0px',\n              borderRadius: '12px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              style: {\n                textAlign: 'center'\n              },\n              children: TranslateString(210, 'Pool found!')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), currency0 && currency1 ? pairState === PairState.EXISTS ? hasPosition && pair ? /*#__PURE__*/_jsxDEV(MinimalPositionCard, {\n            pair: pair\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(LightCard, {\n            padding: \"45px 10px\",\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"sm\",\n              justify: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: TranslateString(212, 'You donâ€™t have liquidity in this pool yet.')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: TranslateString(168, \"You can't add liquidity on V1\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this) : validPairNoLiquidity ? /*#__PURE__*/_jsxDEV(LightCard, {\n            padding: \"45px 10px\",\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"sm\",\n              justify: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: TranslateString(214, 'No pool found.')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                to: `/add/${currencyId(currency0)}/${currencyId(currency1)}`,\n                children: \"Create pool.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this) : pairState === PairState.INVALID ? /*#__PURE__*/_jsxDEV(LightCard, {\n            padding: \"45px 10px\",\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"sm\",\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: TranslateString(136, 'Invalid pair.')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this) : pairState === PairState.LOADING ? /*#__PURE__*/_jsxDEV(LightCard, {\n            padding: \"45px 10px\",\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"sm\",\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: [\"Loading\", /*#__PURE__*/_jsxDEV(Dots, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this) : null : prerequisiteMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CurrencySearchModal, {\n          isOpen: showSearch,\n          onCurrencySelect: handleCurrencySelect,\n          onDismiss: handleSearchDismiss,\n          showCommonBases: true,\n          selectedCurrency: (_ref = activeField === Fields.TOKEN0 ? currency1 : currency0) !== null && _ref !== void 0 ? _ref : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PoolFinder, \"vQF4vBf/EDhxF/o6xhhDoXaE08E=\", false, function () {\n  return [useActiveWeb3React, usePair, usePairAdder, useI18n, useTokenBalance];\n});\n\n_c = PoolFinder;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoolFinder\");","map":{"version":3,"sources":["/Users/cj/Desktop/swap-attempts/swap2/src/pages/PoolFinder/index.tsx"],"names":["ETHER","JSBI","React","useCallback","useEffect","useState","Button","ChevronDownIcon","AddIcon","CardBody","Text","CardNav","LightCard","AutoColumn","ColumnCenter","CurrencyLogo","FindPoolTabs","MinimalPositionCard","CurrencySearchModal","PairState","usePair","useActiveWeb3React","usePairAdder","useTokenBalance","StyledInternalLink","Container","currencyId","useI18n","AppBody","Dots","Fields","PoolFinder","account","showSearch","setShowSearch","activeField","setActiveField","TOKEN1","currency0","setCurrency0","currency1","setCurrency1","pairState","pair","undefined","addPair","TranslateString","validPairNoLiquidity","NOT_EXISTS","Boolean","EXISTS","equal","reserve0","raw","BigInt","reserve1","position","liquidityToken","hasPosition","greaterThan","handleCurrencySelect","currency","TOKEN0","handleSearchDismiss","prerequisiteMessage","textAlign","marginRight","symbol","justifyItems","backgroundColor","padding","borderRadius","INVALID","LOADING"],"mappings":"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","sourcesContent":["import { Currency, ETHER, JSBI, TokenAmount } from '@pancakeswap-libs/sdk'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Button, ChevronDownIcon, AddIcon, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport CardNav from 'components/CardNav'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn, ColumnCenter } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { FindPoolTabs } from 'components/NavigationTabs'\nimport { MinimalPositionCard } from 'components/PositionCard'\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal'\nimport { PairState, usePair } from 'data/Reserves'\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairAdder } from 'state/user/hooks'\nimport { useTokenBalance } from 'state/wallet/hooks'\nimport { StyledInternalLink } from 'components/Shared'\nimport Container from 'components/Container'\nimport { currencyId } from 'utils/currencyId'\nimport useI18n from 'hooks/useI18n'\nimport AppBody from '../AppBody'\nimport { Dots } from '../Pool/styleds'\n\nenum Fields {\n  TOKEN0 = 0,\n  TOKEN1 = 1,\n}\n\nexport default function PoolFinder() {\n  const { account } = useActiveWeb3React()\n\n  const [showSearch, setShowSearch] = useState<boolean>(false)\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\n\n  const [currency0, setCurrency0] = useState<Currency | null>(ETHER)\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\n\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\n  const addPair = usePairAdder()\n\n  const TranslateString = useI18n()\n  useEffect(() => {\n    if (pair) {\n      addPair(pair)\n    }\n  }, [pair, addPair])\n\n  const validPairNoLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\n        JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0))\n    )\n\n  const position: TokenAmount | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)))\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      if (activeField === Fields.TOKEN0) {\n        setCurrency0(currency)\n      } else {\n        setCurrency1(currency)\n      }\n    },\n    [activeField]\n  )\n\n  const handleSearchDismiss = useCallback(() => {\n    setShowSearch(false)\n  }, [setShowSearch])\n\n  const prerequisiteMessage = (\n    <LightCard padding=\"45px 10px\">\n      <Text style={{ textAlign: 'center' }}>\n        {!account\n          ? TranslateString(1174, 'Connect to a wallet to find pools')\n          : TranslateString(208, 'Select a token to find your liquidity.')}\n      </Text>\n    </LightCard>\n  )\n\n  return (\n    <Container>\n      <CardNav activeIndex={1} />\n      <AppBody>\n        <FindPoolTabs />\n        <CardBody>\n          <AutoColumn gap=\"md\">\n            <Button\n              onClick={() => {\n                setShowSearch(true)\n                setActiveField(Fields.TOKEN0)\n              }}\n              startIcon={currency0 ? <CurrencyLogo currency={currency0} style={{ marginRight: '.5rem' }} /> : null}\n              endIcon={<ChevronDownIcon width=\"24px\" color=\"white\" />}\n              width=\"100%\"\n            >\n              {currency0 ? currency0.symbol : TranslateString(82, 'Select a Token')}\n            </Button>\n\n            <ColumnCenter>\n              <AddIcon color=\"textSubtle\" />\n            </ColumnCenter>\n\n            <Button\n              onClick={() => {\n                setShowSearch(true)\n                setActiveField(Fields.TOKEN1)\n              }}\n              startIcon={currency1 ? <CurrencyLogo currency={currency1} style={{ marginRight: '.5rem' }} /> : null}\n              endIcon={<ChevronDownIcon width=\"24px\" color=\"white\" />}\n              width=\"100%\"\n            >\n              {currency1 ? currency1.symbol : TranslateString(82, 'Select a Token')}\n            </Button>\n\n            {hasPosition && (\n              <ColumnCenter\n                style={{ justifyItems: 'center', backgroundColor: '', padding: '12px 0px', borderRadius: '12px' }}\n              >\n                <Text style={{ textAlign: 'center' }}>{TranslateString(210, 'Pool found!')}</Text>\n              </ColumnCenter>\n            )}\n\n            {currency0 && currency1 ? (\n              pairState === PairState.EXISTS ? (\n                hasPosition && pair ? (\n                  <MinimalPositionCard pair={pair} />\n                ) : (\n                  <LightCard padding=\"45px 10px\">\n                    <AutoColumn gap=\"sm\" justify=\"center\">\n                      <Text style={{ textAlign: 'center' }}>\n                        {TranslateString(212, 'You donâ€™t have liquidity in this pool yet.')}\n                      </Text>\n                      <Text style={{ textAlign: 'center' }}>\n                        {TranslateString(168, \"You can't add liquidity on V1\")}\n                      </Text>\n                    </AutoColumn>\n                  </LightCard>\n                )\n              ) : validPairNoLiquidity ? (\n                <LightCard padding=\"45px 10px\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <Text style={{ textAlign: 'center' }}>{TranslateString(214, 'No pool found.')}</Text>\n                    <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\n                      Create pool.\n                    </StyledInternalLink>\n                  </AutoColumn>\n                </LightCard>\n              ) : pairState === PairState.INVALID ? (\n                <LightCard padding=\"45px 10px\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <Text style={{ textAlign: 'center' }}>{TranslateString(136, 'Invalid pair.')}</Text>\n                  </AutoColumn>\n                </LightCard>\n              ) : pairState === PairState.LOADING ? (\n                <LightCard padding=\"45px 10px\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <Text style={{ textAlign: 'center' }}>\n                      Loading\n                      <Dots />\n                    </Text>\n                  </AutoColumn>\n                </LightCard>\n              ) : null\n            ) : (\n              prerequisiteMessage\n            )}\n          </AutoColumn>\n\n          <CurrencySearchModal\n            isOpen={showSearch}\n            onCurrencySelect={handleCurrencySelect}\n            onDismiss={handleSearchDismiss}\n            showCommonBases\n            selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n          />\n        </CardBody>\n      </AppBody>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Desktop/swap-attempts/swap2/src/components/Popups/ListUpdatePopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from 'react';\nimport { diffTokenLists } from '@uniswap/token-lists';\nimport { Button, Text } from '@pancakeswap-libs/uikit';\nimport { useDispatch } from 'react-redux';\nimport { useRemovePopup } from '../../state/application/hooks';\nimport { acceptListUpdate } from '../../state/lists/actions';\nimport listVersionLabel from '../../utils/listVersionLabel';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto\n}) {\n  _s();\n\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  const dispatch = useDispatch();\n  const handleAcceptUpdate = useCallback(() => {\n    if (auto) return;\n    dispatch(acceptListUpdate(listUrl));\n    removeThisPopup();\n  }, [auto, dispatch, listUrl, removeThisPopup]);\n  const {\n    added: tokensAdded,\n    changed: tokensChanged,\n    removed: tokensRemoved\n  } = useMemo(() => {\n    return diffTokenLists(oldList.tokens, newList.tokens);\n  }, [newList.tokens, oldList.tokens]);\n  const numTokensChanged = useMemo(() => Object.keys(tokensChanged).reduce((memo, chainId) => memo + Object.keys(tokensChanged[chainId]).length, 0), [tokensChanged]);\n  return /*#__PURE__*/_jsxDEV(AutoRow, {\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      style: {\n        flex: '1'\n      },\n      gap: \"8px\",\n      children: auto ? /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"The token list \\\"\", oldList.name, \"\\\" has been updated to\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: listVersionLabel(newList.version)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: [\"An update is available for the token list \\\"\", oldList.name, \"\\\" (\", listVersionLabel(oldList.version), \" to \", listVersionLabel(newList.version), \").\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [tokensAdded.length > 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [tokensAdded.map((token, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  title: token.address,\n                  children: token.symbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this), i === tokensAdded.length - 1 ? null : ', ']\n              }, `${token.chainId}-${token.address}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this)), ' ', \"added\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this) : null, tokensRemoved.length > 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [tokensRemoved.map((token, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  title: token.address,\n                  children: token.symbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this), i === tokensRemoved.length - 1 ? null : ', ']\n              }, `${token.chainId}-${token.address}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 23\n              }, this)), ' ', \"removed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this) : null, numTokensChanged > 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [numTokensChanged, \" tokens updated\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 41\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flexGrow: 1,\n              marginRight: 12\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAcceptUpdate,\n              children: \"Accept update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flexGrow: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: removeThisPopup,\n              children: \"Dismiss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListUpdatePopup, \"2tcSnrRlVDuPrRObSbWSFbcqsgs=\", false, function () {\n  return [useRemovePopup, useDispatch];\n});\n\n_c = ListUpdatePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListUpdatePopup\");","map":{"version":3,"sources":["/Users/cj/Desktop/swap-attempts/swap2/src/components/Popups/ListUpdatePopup.tsx"],"names":["React","useCallback","useMemo","diffTokenLists","Button","Text","useDispatch","useRemovePopup","acceptListUpdate","listVersionLabel","AutoColumn","AutoRow","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removePopup","removeThisPopup","dispatch","handleAcceptUpdate","added","tokensAdded","changed","tokensChanged","removed","tokensRemoved","tokens","numTokensChanged","Object","keys","reduce","memo","chainId","length","flex","name","version","map","token","i","address","symbol","flexGrow","marginRight"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { diffTokenLists, TokenList } from '@uniswap/token-lists'\nimport { Button, Text } from '@pancakeswap-libs/uikit'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport { acceptListUpdate } from '../../state/lists/actions'\nimport listVersionLabel from '../../utils/listVersionLabel'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto,\n}: {\n  popKey: string\n  listUrl: string\n  oldList: TokenList\n  newList: TokenList\n  auto: boolean\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  const dispatch = useDispatch<AppDispatch>()\n\n  const handleAcceptUpdate = useCallback(() => {\n    if (auto) return\n    dispatch(acceptListUpdate(listUrl))\n    removeThisPopup()\n  }, [auto, dispatch, listUrl, removeThisPopup])\n\n  const { added: tokensAdded, changed: tokensChanged, removed: tokensRemoved } = useMemo(() => {\n    return diffTokenLists(oldList.tokens, newList.tokens)\n  }, [newList.tokens, oldList.tokens])\n  const numTokensChanged = useMemo(\n    () =>\n      Object.keys(tokensChanged).reduce((memo, chainId: any) => memo + Object.keys(tokensChanged[chainId]).length, 0),\n    [tokensChanged]\n  )\n\n  return (\n    <AutoRow>\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\n        {auto ? (\n          <Text>\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\n            <strong>{listVersionLabel(newList.version)}</strong>.\n          </Text>\n        ) : (\n          <>\n            <div>\n              <Text fontSize=\"14px\">\n                An update is available for the token list &quot;{oldList.name}&quot; (\n                {listVersionLabel(oldList.version)} to {listVersionLabel(newList.version)}).\n              </Text>\n              <ul>\n                {tokensAdded.length > 0 ? (\n                  <li>\n                    {tokensAdded.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensAdded.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    added\n                  </li>\n                ) : null}\n                {tokensRemoved.length > 0 ? (\n                  <li>\n                    {tokensRemoved.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensRemoved.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    removed\n                  </li>\n                ) : null}\n                {numTokensChanged > 0 ? <li>{numTokensChanged} tokens updated</li> : null}\n              </ul>\n            </div>\n            <AutoRow>\n              <div style={{ flexGrow: 1, marginRight: 12 }}>\n                <Button onClick={handleAcceptUpdate}>Accept update</Button>\n              </div>\n              <div style={{ flexGrow: 1 }}>\n                <Button onClick={removeThisPopup}>Dismiss</Button>\n              </div>\n            </AutoRow>\n          </>\n        )}\n      </AutoColumn>\n    </AutoRow>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}